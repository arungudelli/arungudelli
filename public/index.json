[{"authors":["admin"],"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://www.angularjswiki.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"","tags":null,"title":"Arunkumar Gudelli","type":"author"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" In this Angular Flexlayout tutorial, we will learn how to build powerful responsive HTML UI layouts in Angular apps using flex layout module.\nWhat is Angular Flex Layout Using flexbox CSS layout we can change the width and height of HTML DOM elements based upon the available space.\nWe can define different kinds of layouts for different kinds of display devices and different screen sizes.\nAnd this flexbox CSS layout is direction-agnostic i.e its free from any directional constraints,\nwhereas the existing display block layout is vertically biased and inline layout is horizontally biased.\nA flex container expands its child elements to fill available free space, or shrinks them to prevent overflow.\nThis kind of approach works well with small pages, but this approach is not flexible enough to support larger and complex applications when it comes to orientation changing, resizing, stretching, shrinking.\nProblems with CSS based flexbox Most of the Flexbox CSS libraries are either\n pure CSS-only implementations or JS+CSS stylesheets.  AngularJS (1.x version) material layout API is built using JS+CSS.\nAngularJS Material clearly explained the limitations of a CSS based FlexBox layout like limitations with using parameterized values.\nEven for limited set of allowed value variations we need to write so many required CSS classes which increses the complexity of the code.\nOther problems includes\n CSS specific issues are increasing rapidly The amount of CSS generated for flexbox CSS is extremely huge(\u0026gt;250k) And if you chane the layout direction we need to change the child flexbox stylings. And there is no support for customized media query breakpoints.  Angular flex layout addressed the above problems.Angular flex layout is a pure-Typescript based UI Layout engine which uses HTML markup (aka Layout API) to specify the layout configurations.\nAngular flex layout is only available for Angular applications and requires Angular version 4.1 and above.\nAngular Flex Layout is an UI layout engine built on top of CSS flexbox,mediaquery and exposes FlexBoxModule and few Angular directives through which we can develop powerful UI layouts.\nIn normal CSS flexbox or CSS grid, we have to write complex CSS code with the help ofÂ mediaqueries to build responsive layouts. And it also difficult to understand.\nBut with this new Angular flexbox layout we can directly define flexbox layout settings inside the HTML template with the help of flexbox directives.\nAdvantages of Angular flex layout When compare to AngularJS Material layout, angular flex layout has several advantages.\n The Angular flex layout code is easier to maintain and debug Angular flex layout does not depend upon Angular Material There is no external CSS requirements Angular flex layout Supports different kinds of Handset/Tablet and Orientation breakpoints Support for ANY Layout injector value (instead of increments for 5) Support for raw values or interpolated values Support for raw, percentage or px-suffix values and Change detection for Layout injector values Uses provider to supply custom breakpoints Notifications for breakpoints changes Includes workaround for MediaQuery issues with overlapping breakpoints MediaQuery Activation detection  Installing Angular Flex Layout To install angular flex layout in our Anguar projects use the below command\nnpm install --save @angular/flex-layout @angular/cdk  After installing flex layout we need to import flexLayoutModule in our app.module.ts file as shown below.\nimport { FlexLayoutModule } from '@angular/flex-layout'; @NgModule({ imports: [ FlexLayoutModule ], });  Now go through the basics of Angular flex layout.\n","date":1556044200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1556047800,"objectID":"3e072acc6516e8089fcb7e16b5e06a74","permalink":"https://www.angularjswiki.com/flexlayout/","publishdate":"2019-04-24T00:00:00+05:30","relpermalink":"/flexlayout/","section":"flexlayout","summary":"Understanding Angular flex layout and flex layout advantages over css flexbox approach","tags":null,"title":"Angular Flex Layout Tutorial with examples","type":"docs"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Steps to use angular pipes in components and service ts files\n Import angular pipe in app.module.ts file and add it to the providers array. In Component file, import angular pipe \u0026amp; inject the pipe into the constructor. And Finally use the angular pipe transform method \u0026amp; pass the required parameters according to pipe defination to format the values.  Now we will understand it further using examples.\nTable of Contents\r   Use Date Pipe in Angular Components \u0026amp; Services ts file Use Currency Pipe in Angular Components \u0026amp; Services ts file   \rUse Date Pipe in Angular Components \u0026amp; Services ts file To use date pipe in component \u0026amp; services follow the below steps\n Import DatePipe from @angular\\common in app.module.ts file Add the DatePipe to provider array. Inject the DatePipe in component constructor file using dependency injection. And finally format the date values using date pipe transform method as shown below.  In app.module.ts file add the following code.\nimport { DatePipe } from '@angular/common'; @NgModule({ declarations: [ AppComponent, AngularpipeComponent ], imports: [ BrowserModule, AppRoutingModule ], providers: [DatePipe], bootstrap: [AppComponent] }) export class AppModule { }  And in component ts file use the below code to format the dates.\nimport { Component, OnInit } from '@angular/core'; import { DatePipe } from '@angular/common'; @Component({ selector: 'app-angularpipe', templateUrl: './angularpipe.component.html', styleUrls: ['./angularpipe.component.scss'] }) export class AngularpipeComponent implements OnInit { datePipeString : string; constructor(private datePipe: DatePipe) { this.datePipeString = datePipe.transform(Date.now(),'yyyy-MM-dd'); console.log(this.datePipeString); //2019-07-22 } ngOnInit() { } }  And transform method accepts same parameters as datepipe, you can see it in visual studio code intelligence as shown below.\n\r\r\ruse date pipe in component ts files\r\r\rThe above method works in every verison of Angular.\nIn laterst version of Angular i.e., from version 6 we can directly use angular pipes\u0026rsquo;s public methods inside the components to format the values.\nFor example we use date pipe format method formatMethod in component file by importing it from the @angular/common as shown below.\nimport { Component, OnInit, Inject,LOCALE_ID } from '@angular/core'; import { formatDate } from '@angular/common'; @Component({ selector: 'app-angularpipe', templateUrl: './angularpipe.component.html', styleUrls: ['./angularpipe.component.scss'] }) export class AngularpipeComponent implements OnInit { datePipeString : string; constructor(@Inject(LOCALE_ID) private locale: string) { this.datePipeString = formatDate(Date.now(),'yyyy-MM-dd',this.locale); console.log(this.datePipeString); } ngOnInit() { } }  We have to inject the locale information into the component constructor to pass it to the formatDate method\nThe adventage of this kind of approach is, it\u0026rsquo;s not required to add date pipe to app module providers and injecting it into the component constructor.\nAngular Date Pipe \u0026amp; formatting dates in Angular with examples\nUse Currency Pipe in Angular Components \u0026amp; Services ts file Now we will use the above two methods to use angular currency pipes in components \u0026amp; services ts file.\nUse currency pipe in componets \u0026amp; servcies ts file by injecting currency pipe into the component constructor as shown below.\nimport { Component, OnInit } from '@angular/core'; import { CurrencyPipe } from '@angular/common'; @Component({ selector: 'app-angularpipe', templateUrl: './angularpipe.component.html', styleUrls: ['./angularpipe.component.scss'] }) export class AngularpipeComponent implements OnInit { currencyPipeString : string; constructor(private datePipe: DatePipe) { this.currencyPipeString = currencyPipe.transform(100,'USD'); console.log(this.currencyPipeString); //$100.00 } ngOnInit() { } }  You might get NullInjectorError: No provider for CurrencyPipe! error if you forgot to add the currency pipe to the app module providers array as shown below.\nimport { CurrencyPipe } from '@angular/common'; @NgModule({ declarations: [ AppComponent, AngularpipeComponent ], imports: [ BrowserModule, AppRoutingModule ], providers: [CurrencyPipe], bootstrap: [AppComponent] }) export class AppModule { }  Now to use currency pipe in components,without injecting it into the component constructors we can use currency pipe public methods formatCurrency \u0026amp; getCurrencySymbol as shown below.\nimport { Component, OnInit, Inject,LOCALE_ID } from '@angular/core'; import { formatCurrency,getCurrencySymbol } from '@angular/common'; @Component({ selector: 'app-angularpipe', templateUrl: './angularpipe.component.html', styleUrls: ['./angularpipe.component.scss'] }) export class AngularpipeComponent implements OnInit { currencyPipeString : string; constructor(@Inject(LOCALE_ID) private locale: string) { this.currencyPipeString = formatCurrency(200,this.locale,getCurrencySymbol('USD', 'wide')); console.log(this.currencyPipeString); //$200 } ngOnInit() { } }  Angular Currency Pipe \u0026amp; Formatting Currency In Angular\n","date":1571533265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571546677,"objectID":"e55074411234e8a85d12c0ea72e128f0","permalink":"https://www.angularjswiki.com/angular/how-to-use-angular-pipes-in-components-and-services/","publishdate":"2019-10-20T01:01:05Z","relpermalink":"/angular/how-to-use-angular-pipes-in-components-and-services/","section":"angular","summary":"Steps to use angular pipes in components and service ts files 1.Import angular pipe in `app.module.ts` file and add it to the providers array.2.In Component file, import angular pipe \u0026 inject the pipe into the constructor.3. And Finally use the angular pipe transform method \u0026 pass the required parameters according to pipe defination to format the values.","tags":null,"title":"How To Use Angular Pipes in Components \u0026 Service ts files","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" To add a conditional class in Angular we can pass an object to ngClass where key is the class name and value is condition i.e., true or false as shown below.\n\u0026lt;div [ngClass]=\u0026quot;{'classname' : condition}\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  And in the above code, class name will be added only when the condition is true.\nWe can add a single class or multiple classes dynamically based upon the conditions.\nWe will go through few examples to understand it further.\nTable of Contents\r   Add a Class based upon the condition Add a class based on multiple conditions Add multiple Classs using ngClass Pass a method to ngClass   \rAdd a Class based upon the condition To add a single conditional class we can use the above syntax\nWe can directly pass true or false to add a class.\n\u0026lt;div [ngClass]=\u0026quot;{'singleClass' : true}\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  As the key singleClass value is true class will be added to the div element.\nFor example if we want to add a class name based upon multiple conditions, we can pass a conditional expression as an object value.\nUsually in our projects we will be having error,warning and info texts to communicate with the user.\nI have added a three classes error,warn and message and added CSS styles to them.\n.error{ color:red; } .warn{ color:orange; } .message{ color:green; }  Now to add these classes dynamically based upon certain conditions we will use [ngClass].\nWe have an object in our component which determines the priority of the text.\ninterfact information{ priority:number; text:string; }  If the the priority is less than 10 will add message class, if it\u0026rsquo;s between 10 to 20 will add warn class and if it\u0026rsquo;s greater than 30 will add error class\n\u0026lt;div [ngClass]=\u0026quot;{'message': info.priority\u0026lt;10}\u0026quot;\u0026gt;{{info.text}}\u0026lt;/div\u0026gt;  Add a class based on multiple conditions And in case of warn class we need to add it based upon multiple conditions. We can pass conditional expression as an object key as shown.\n\u0026lt;div [ngClass]=\u0026quot;{'warn': info.priority \u0026gt; 10 \u0026amp;\u0026amp; info.priority \u0026lt; 20}\u0026quot;\u0026gt; {{info.text}} \u0026lt;/div\u0026gt;  And for error class only one condition we need to check as shown below.\n\u0026lt;div [ngClass]=\u0026quot;{'error': info.priority \u0026gt; 30}\u0026quot;\u0026gt;{{info.text}}\u0026lt;/div\u0026gt;  You might be wondering or confused because in the above code, I am adding individual classes based on certain conditions.\nBut Actually we need to add only one single class to the div element(either message or warn or error).\nWe can pass multiple object key values to the ngClass as shown below\n\u0026lt;div [ngClass]=\u0026quot;{'firstClass': true, 'secondClass': true, 'thirdClass': false}\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  Now to the information div we can pass the above three conditional classes.\n\u0026lt;div [ngClass]=\u0026quot;{'message': info.priority \u0026lt; 10, 'warn': info.priority \u0026gt; 10 \u0026amp;\u0026amp; info.priority \u0026lt; 20, 'error': info.priority \u0026gt; 30}\u0026quot;\u0026gt; {{info.text}} \u0026lt;/div\u0026gt;  The code might be little bit weird, but only single class will be added at run time.\nAdd multiple Classs using ngClass In addition to that we can add multiple classes based upon the conditions.\nIn the above information text, we need to add an icon in case of class error.\n\u0026lt;div [ngClass]=\u0026quot;{'error fa fa-exclamation-triangle': info.priority\u0026gt;30}\u0026quot;\u0026gt; {{info.text}} \u0026lt;/div\u0026gt;  I am adding a font awesome icon class fa-exclamation-triangle in addition to the class error.\nFree 1500+ font awesome icons List\nWe can add as many as classed separated by delimiter space\n\u0026lt;div [ngClass]=\u0026quot;{'class1 class2 class3 class4': conditionalExpression}\u0026quot;\u0026gt; \u0026lt;/div\u0026gt;  Now our template html file became more complex in addition to the new font awesome class icon.\n\u0026lt;div [ngClass]=\u0026quot;{'message': info.priority \u0026lt; 10, 'warn': info.priority \u0026gt; 10 \u0026amp;\u0026amp; info.priority \u0026lt; 20, 'error fa fa-exclamation-triangle': info.priority\u0026gt;30}\u0026quot;\u0026gt; {{info.text}} \u0026lt;/div\u0026gt;  Pass a method to ngClass To avoid this we can simply move the logic to a method in our component ts file and pass that method to [ngClass]\n\u0026lt;div [ngClass]=\u0026quot;getClass(info.priority)\u0026quot;\u0026gt;{{info.text}}\u0026lt;/div\u0026gt;  And in component ts file actual logic will be performed\ngetClass(priority){ return {'message': priority \u0026lt; 10, 'warn': priority \u0026gt; 10 \u0026amp;\u0026amp; priority \u0026lt; 20, 'error fa fa-exclamation-triangle': priority \u0026gt; 30} }  Or we can directly return class names instead of object keys as shown below\ngetClass(priority){ var classList=''; if(priority \u0026lt; 10){ classList = 'message'; }else if (priority \u0026gt; 10 \u0026amp;\u0026amp; priority \u0026lt; 20){ classList = 'warn'; }else if(priority \u0026gt; 30){ classList = 'error fa fa-exclamation-triangle'; } return classList; }  ","date":1571274065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571280318,"objectID":"93615ca02f8f86da101872c28ddd48dc","permalink":"https://www.angularjswiki.com/angular/how-to-add-a-class-based-on-condition-in-angular/","publishdate":"2019-10-17T01:01:05Z","relpermalink":"/angular/how-to-add-a-class-based-on-condition-in-angular/","section":"angular","summary":"To add a conditional class in Angular we can pass an object to `ngClass` where key is the class name and value is condition i.e., true or false","tags":null,"title":"How to add conditional class in Angular using ngClass","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":"To Check the Angular CLI version in Command prompt use the below commands.\n ng \u0026ndash;version ng v npm list -global \u0026ndash;depth 0  ng --version command returns the details of version of Angular CLI installed and in addition to that version of Angular development packages like @angular-devkit/architect,rxjs etc.. as shown below.\nAngular CLI: 8.1.1 Node: 10.16.0 OS: win32 x64 Angular: ... Package Version ------------------------------------------------------ @angular-devkit/architect 0.801.1 @angular-devkit/core 8.1.1 @angular-devkit/schematics 8.1.1 @schematics/angular 8.1.1 @schematics/update 0.801.1 rxjs 6.4.0  \r\r\rCheck Angular CLI version\r\r\rOr We can use npm list -global to list all the packages versions installed on our machine.\nIn that list we can check for Angular CLI version.\nFor viewing specific lists at different levels use --depth.\nnpm list -global --depth 0 +-- @angular/cli@8.1.1 +-- @angular/core@7.1.4 +-- npm-check-updates@2.15.0 +-- purgecss@1.1.0 +-- UNMET PEER DEPENDENCY rxjs@^6.0.0 +-- typescript@3.5.3 `-- UNMET PEER DEPENDENCY zone.js@~0.8.26  To Update the Angular CLI version follow the below Tutorial\nHow To Update Angular CLI Version\n","date":1571187665,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1571193918,"objectID":"b0acdd142407e4c3afa9674cac1bf9d6","permalink":"https://www.angularjswiki.com/angular/how-to-check-angular-cli-version-in-command-prompt/","publishdate":"2019-10-16T01:01:05Z","relpermalink":"/angular/how-to-check-angular-cli-version-in-command-prompt/","section":"angular","summary":"To check the Angular CLI version use ng --version or ng v command","tags":null,"title":"How to Check Angular CLI Version in Command prompt","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":["faicons"],"content":" This post contains complete font awesome icons list with their CSS content values and step by step tutorial to use font awesome icons in our webpages.\nIn font awesome 5.9 version we have around 1534 free icons.\nAnd these free font awesome icons divided into three categories.\n font awesome solid icons font awesome regular icons font awesome brand icons  We can download font awesome icons css file and serve them from our own server Or we can serve them from public CDNs.\nTable of Contents\r   How to use font awesome icons Using font awesome icons as CSS content values. Complete Font Awesome Icons List Font Awesome Icons List - Solid Icons Font Awesome Icons List - Regular Icons Font Awesome Icons List - Brand Icons   \rHow to use font awesome icons To use free font awesome icons, add the font awesome icons cdn link css file in head section \u0026amp; display fa icons using class name with the prefix fa followed by the fa icon name.\nTo use font awesome icons follow the below steps\n Add the font awesome icons css file in head section of html And then display fa icons using class name with the prefix fa followed by the font awesome icon name. Additionally we have to add category classes.  First we will add the font awesome icons css in head section of html file as shown below\n\u0026lt;head\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; href= \u0026quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.9.0/css/all.css\u0026quot;\u0026gt; \u0026lt;/link\u0026gt; \u0026lt;/head\u0026gt;  I am using cloudfare font awesome icons cdn link.\nNow to display facebook icon using font awesome icons use the below html code\n\u0026lt;i class=\u0026quot;fab fa-facebook\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;  Facebook icon is part of brand icons so i have added fab as additional class name.\nTo use font awesome icons in Angular applications go through the article How To Use Font Awesome icons in Angular Applications\nUsing font awesome icons as CSS content values. The above approach requires us to change our icon html classes names.\nIf your project is new then we can follow the above approach.\nBut if it is an existing project, it is very difficult to change the icon html classes.\nIn this case we can display the font awesome icons using their CSS content values.\nWe can use the CSS Pseudo-elements elements features ::before or ::after to display them.\nFor example to display login icons\n\u0026lt;li\u0026gt; \u0026lt;span class=\u0026quot;icons login\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; Login \u0026lt;/li\u0026gt;  I gave one class as icons (for all icons) and icon name as login.\nI have added few common css properties which are applicable to all icons, in the icons css class as below.\n .icons::before { display: inline-block; font-style: normal; font-variant: normal; text-rendering: auto; -webkit-font-smoothing: antialiased; }  This is to simplify our main icon CSS definition.\nNow for the actual icon i.e., login add the below css properties.\n.login::before { font-family: \u0026quot;Font Awesome 5 Free\u0026quot;; font-weight: 900; content: \u0026quot;\\f007\u0026quot;; }  I gave content as \\f007 which is unicode value for login defined by font awesome icons.\nFor all 1534 free font awesome icons, unicode values are already defined.\nTo display font awesome icons using CSS Pseudo elements we have to follow the below steps\n Set the font-family to \u0026ldquo;Font Awesome 5 Free\u0026rdquo; (For regular,solid icons) or \u0026ldquo;Font Awesome 5 Pro\u0026rdquo; (If you buy a pro license) or \u0026ldquo;Font Awesome 5 Brands\u0026rdquo; (For brand icons) Set the font-weight: 900 (For Solid), 400 (Regular or Brands), 300 (Light for pro icons) Set the content to the unicode value font awesome icons And like explained, add common CSS definitions for all icons as explained above.  To display twitter icon using Pseudo element use the following CSS content code\n\u0026lt;li\u0026gt; \u0026lt;span class=\u0026quot;icons twitter\u0026quot;\u0026gt;\u0026lt;/span\u0026gt; Login \u0026lt;/li\u0026gt; .twitter::before { font-family: \u0026quot;Font Awesome 5 Brands\u0026quot;; font-weight: 400; content: \u0026quot;\\f099\u0026quot;; }  Complete Font Awesome Icons List Here is the complete list of 1534 free font awesome icons cheatsheet.\nTo use font awesome brand icons use class name as fab\nFor example to display twitter icon use the following html code\n\u0026lt;i class=\u0026quot;fab fa-twitter\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;  To use font awesome solid icons add the class name as fas\nFor example to display barcode icon use the following html code\n\u0026lt;i class=\u0026quot;fas fa-barcode\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;  To use font awesome regular icons add the class name as far\nTo display bookmark icon use the following html code\n\u0026lt;i class=\u0026quot;far fa-bookmark\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;  Font Awesome Icons List - Solid Icons  Name Code CSS Content code   adfa-adf641  address-bookfa-address-bookf2b9  address-cardfa-address-cardf2bb  adjustfa-adjustf042  air-freshenerfa-air-freshenerf5d0  align-centerfa-align-centerf037  align-justifyfa-align-justifyf039  align-leftfa-align-leftf036  align-rightfa-align-rightf038  allergiesfa-allergiesf461  ambulancefa-ambulancef0f9  american-sign-language-interpretingfa-american-sign-language-interpretingf2a3  anchorfa-anchorf13d  angle-double-downfa-angle-double-downf103  angle-double-leftfa-angle-double-leftf100  angle-double-rightfa-angle-double-rightf101  angle-double-upfa-angle-double-upf102  angle-downfa-angle-downf107  angle-leftfa-angle-leftf104  angle-rightfa-angle-rightf105  angle-upfa-angle-upf106  angryfa-angryf556  ankhfa-ankhf644  apple-altfa-apple-altf5d1  archivefa-archivef187  archwayfa-archwayf557  arrow-alt-circle-downfa-arrow-alt-circle-downf358  arrow-alt-circle-leftfa-arrow-alt-circle-leftf359  arrow-alt-circle-rightfa-arrow-alt-circle-rightf35a  arrow-alt-circle-upfa-arrow-alt-circle-upf35b  arrow-circle-downfa-arrow-circle-downf0ab  arrow-circle-leftfa-arrow-circle-leftf0a8  arrow-circle-rightfa-arrow-circle-rightf0a9  arrow-circle-upfa-arrow-circle-upf0aa  arrow-downfa-arrow-downf063  arrow-leftfa-arrow-leftf060  arrow-rightfa-arrow-rightf061  arrow-upfa-arrow-upf062  arrows-altfa-arrows-altf0b2  arrows-alt-hfa-arrows-alt-hf337  arrows-alt-vfa-arrows-alt-vf338  assistive-listening-systemsfa-assistive-listening-systemsf2a2  asteriskfa-asteriskf069  atfa-atf1fa  atlasfa-atlasf558  atomfa-atomf5d2  audio-descriptionfa-audio-descriptionf29e  awardfa-awardf559  babyfa-babyf77c  baby-carriagefa-baby-carriagef77d  backspacefa-backspacef55a  backwardfa-backwardf04a  baconfa-baconf7e5  balance-scalefa-balance-scalef24e  balance-scale-leftfa-balance-scale-leftf515  balance-scale-rightfa-balance-scale-rightf516  banfa-banf05e  band-aidfa-band-aidf462  barcodefa-barcodef02a  barsfa-barsf0c9  baseball-ballfa-baseball-ballf433  basketball-ballfa-basketball-ballf434  bathfa-bathf2cd  battery-emptyfa-battery-emptyf244  battery-fullfa-battery-fullf240  battery-halffa-battery-halff242  battery-quarterfa-battery-quarterf243  battery-three-quartersfa-battery-three-quartersf241  bedfa-bedf236  beerfa-beerf0fc  bellfa-bellf0f3  bell-slashfa-bell-slashf1f6  bezier-curvefa-bezier-curvef55b  biblefa-biblef647  bicyclefa-bicyclef206  bikingfa-bikingf84a  binocularsfa-binocularsf1e5  biohazardfa-biohazardf780  birthday-cakefa-birthday-cakef1fd  blenderfa-blenderf517  blender-phonefa-blender-phonef6b6  blindfa-blindf29d  blogfa-blogf781  boldfa-boldf032  boltfa-boltf0e7  bombfa-bombf1e2  bonefa-bonef5d7  bongfa-bongf55c  bookfa-bookf02d  book-deadfa-book-deadf6b7  book-medicalfa-book-medicalf7e6  book-openfa-book-openf518  book-readerfa-book-readerf5da  bookmarkfa-bookmarkf02e  border-allfa-border-allf84c  border-nonefa-border-nonef850  border-stylefa-border-stylef853  bowling-ballfa-bowling-ballf436  boxfa-boxf466  box-openfa-box-openf49e  boxesfa-boxesf468  braillefa-braillef2a1  brainfa-brainf5dc  bread-slicefa-bread-slicef7ec  briefcasefa-briefcasef0b1  briefcase-medicalfa-briefcase-medicalf469  broadcast-towerfa-broadcast-towerf519  broomfa-broomf51a  brushfa-brushf55d  bugfa-bugf188  buildingfa-buildingf1ad  bullhornfa-bullhornf0a1  bullseyefa-bullseyef140  burnfa-burnf46a  busfa-busf207  bus-altfa-bus-altf55e  business-timefa-business-timef64a  calculatorfa-calculatorf1ec  calendarfa-calendarf133  calendar-altfa-calendar-altf073  calendar-checkfa-calendar-checkf274  calendar-dayfa-calendar-dayf783  calendar-minusfa-calendar-minusf272  calendar-plusfa-calendar-plusf271  calendar-timesfa-calendar-timesf273  calendar-weekfa-calendar-weekf784  camerafa-cameraf030  camera-retrofa-camera-retrof083  campgroundfa-campgroundf6bb  candy-canefa-candy-canef786  cannabisfa-cannabisf55f  capsulesfa-capsulesf46b  carfa-carf1b9  car-altfa-car-altf5de  car-batteryfa-car-batteryf5df  car-crashfa-car-crashf5e1  car-sidefa-car-sidef5e4  caret-downfa-caret-downf0d7  caret-leftfa-caret-leftf0d9  caret-rightfa-caret-rightf0da  caret-square-downfa-caret-square-downf150  caret-square-leftfa-caret-square-leftf191  caret-square-rightfa-caret-square-rightf152  caret-square-upfa-caret-square-upf151  caret-upfa-caret-upf0d8  carrotfa-carrotf787  cart-arrow-downfa-cart-arrow-downf218  cart-plusfa-cart-plusf217  cash-registerfa-cash-registerf788  catfa-catf6be  certificatefa-certificatef0a3  chairfa-chairf6c0  chalkboardfa-chalkboardf51b  chalkboard-teacherfa-chalkboard-teacherf51c  charging-stationfa-charging-stationf5e7  chart-areafa-chart-areaf1fe  chart-barfa-chart-barf080  chart-linefa-chart-linef201  chart-piefa-chart-pief200  checkfa-checkf00c  check-circlefa-check-circlef058  check-doublefa-check-doublef560  check-squarefa-check-squaref14a  cheesefa-cheesef7ef  chessfa-chessf439  chess-bishopfa-chess-bishopf43a  chess-boardfa-chess-boardf43c  chess-kingfa-chess-kingf43f  chess-knightfa-chess-knightf441  chess-pawnfa-chess-pawnf443  chess-queenfa-chess-queenf445  chess-rookfa-chess-rookf447  chevron-circle-downfa-chevron-circle-downf13a  chevron-circle-leftfa-chevron-circle-leftf137  chevron-circle-rightfa-chevron-circle-rightf138  chevron-circle-upfa-chevron-circle-upf139  chevron-downfa-chevron-downf078  chevron-leftfa-chevron-leftf053  chevron-rightfa-chevron-rightf054  chevron-upfa-chevron-upf077  childfa-childf1ae  churchfa-churchf51d  circlefa-circlef111  circle-notchfa-circle-notchf1ce  cityfa-cityf64f  clinic-medicalfa-clinic-medicalf7f2  clipboardfa-clipboardf328  clipboard-checkfa-clipboard-checkf46c  clipboard-listfa-clipboard-listf46d  clockfa-clockf017  clonefa-clonef24d  closed-captioningfa-closed-captioningf20a  cloudfa-cloudf0c2  cloud-download-altfa-cloud-download-altf381  cloud-meatballfa-cloud-meatballf73b  cloud-moonfa-cloud-moonf6c3  cloud-moon-rainfa-cloud-moon-rainf73c  cloud-rainfa-cloud-rainf73d  cloud-showers-heavyfa-cloud-showers-heavyf740  cloud-sunfa-cloud-sunf6c4  cloud-sun-rainfa-cloud-sun-rainf743  cloud-upload-altfa-cloud-upload-altf382  cocktailfa-cocktailf561  codefa-codef121  code-branchfa-code-branchf126  coffeefa-coffeef0f4  cogfa-cogf013  cogsfa-cogsf085  coinsfa-coinsf51e  columnsfa-columnsf0db  commentfa-commentf075  comment-altfa-comment-altf27a  comment-dollarfa-comment-dollarf651  comment-dotsfa-comment-dotsf4ad  comment-medicalfa-comment-medicalf7f5  comment-slashfa-comment-slashf4b3  commentsfa-commentsf086  comments-dollarfa-comments-dollarf653  compact-discfa-compact-discf51f  compassfa-compassf14e  compressfa-compressf066  compress-arrows-altfa-compress-arrows-altf78c  concierge-bellfa-concierge-bellf562  cookiefa-cookief563  cookie-bitefa-cookie-bitef564  copyfa-copyf0c5  copyrightfa-copyrightf1f9  couchfa-couchf4b8  credit-cardfa-credit-cardf09d  cropfa-cropf125  crop-altfa-crop-altf565  crossfa-crossf654  crosshairsfa-crosshairsf05b  crowfa-crowf520  crownfa-crownf521  crutchfa-crutchf7f7  cubefa-cubef1b2  cubesfa-cubesf1b3  cutfa-cutf0c4  databasefa-databasef1c0  deaffa-deaff2a4  democratfa-democratf747  desktopfa-desktopf108  dharmachakrafa-dharmachakraf655  diagnosesfa-diagnosesf470  dicefa-dicef522  dice-d20fa-dice-d20f6cf  dice-d6fa-dice-d6f6d1  dice-fivefa-dice-fivef523  dice-fourfa-dice-fourf524  dice-onefa-dice-onef525  dice-sixfa-dice-sixf526  dice-threefa-dice-threef527  dice-twofa-dice-twof528  digital-tachographfa-digital-tachographf566  directionsfa-directionsf5eb  dividefa-dividef529  dizzyfa-dizzyf567  dnafa-dnaf471  dogfa-dogf6d3  dollar-signfa-dollar-signf155  dollyfa-dollyf472  dolly-flatbedfa-dolly-flatbedf474  donatefa-donatef4b9  door-closedfa-door-closedf52a  door-openfa-door-openf52b  dot-circlefa-dot-circlef192  dovefa-dovef4ba  downloadfa-downloadf019  drafting-compassfa-drafting-compassf568  dragonfa-dragonf6d5  draw-polygonfa-draw-polygonf5ee  drumfa-drumf569  drum-steelpanfa-drum-steelpanf56a  drumstick-bitefa-drumstick-bitef6d7  dumbbellfa-dumbbellf44b  dumpsterfa-dumpsterf793  dumpster-firefa-dumpster-firef794  dungeonfa-dungeonf6d9  editfa-editf044  eggfa-eggf7fb  ejectfa-ejectf052  ellipsis-hfa-ellipsis-hf141  ellipsis-vfa-ellipsis-vf142  envelopefa-envelopef0e0  envelope-openfa-envelope-openf2b6  envelope-open-textfa-envelope-open-textf658  envelope-squarefa-envelope-squaref199  equalsfa-equalsf52c  eraserfa-eraserf12d  ethernetfa-ethernetf796  euro-signfa-euro-signf153  exchange-altfa-exchange-altf362  exclamationfa-exclamationf12a  exclamation-circlefa-exclamation-circlef06a  exclamation-trianglefa-exclamation-trianglef071  expandfa-expandf065  expand-arrows-altfa-expand-arrows-altf31e  external-link-altfa-external-link-altf35d  external-link-square-altfa-external-link-square-altf360  eyefa-eyef06e  eye-dropperfa-eye-dropperf1fb  eye-slashfa-eye-slashf070  fanfa-fanf863  fast-backwardfa-fast-backwardf049  fast-forwardfa-fast-forwardf050  faxfa-faxf1ac  featherfa-featherf52d  feather-altfa-feather-altf56b  femalefa-femalef182  fighter-jetfa-fighter-jetf0fb  filefa-filef15b  file-altfa-file-altf15c  file-archivefa-file-archivef1c6  file-audiofa-file-audiof1c7  file-codefa-file-codef1c9  file-contractfa-file-contractf56c  file-csvfa-file-csvf6dd  file-downloadfa-file-downloadf56d  file-excelfa-file-excelf1c3  file-exportfa-file-exportf56e  file-imagefa-file-imagef1c5  file-importfa-file-importf56f  file-invoicefa-file-invoicef570  file-invoice-dollarfa-file-invoice-dollarf571  file-medicalfa-file-medicalf477  file-medical-altfa-file-medical-altf478  file-pdffa-file-pdff1c1  file-powerpointfa-file-powerpointf1c4  file-prescriptionfa-file-prescriptionf572  file-signaturefa-file-signaturef573  file-uploadfa-file-uploadf574  file-videofa-file-videof1c8  file-wordfa-file-wordf1c2  fillfa-fillf575  fill-dripfa-fill-dripf576  filmfa-filmf008  filterfa-filterf0b0  fingerprintfa-fingerprintf577  firefa-firef06d  fire-altfa-fire-altf7e4  fire-extinguisherfa-fire-extinguisherf134  first-aidfa-first-aidf479  fishfa-fishf578  fist-raisedfa-fist-raisedf6de  flagfa-flagf024  flag-checkeredfa-flag-checkeredf11e  flag-usafa-flag-usaf74d  flaskfa-flaskf0c3  flushedfa-flushedf579  folderfa-folderf07b  folder-minusfa-folder-minusf65d  folder-openfa-folder-openf07c  folder-plusfa-folder-plusf65e  fontfa-fontf031  football-ballfa-football-ballf44e  forwardfa-forwardf04e  frogfa-frogf52e  frownfa-frownf119  frown-openfa-frown-openf57a  funnel-dollarfa-funnel-dollarf662  futbolfa-futbolf1e3  gamepadfa-gamepadf11b  gas-pumpfa-gas-pumpf52f  gavelfa-gavelf0e3  gemfa-gemf3a5  genderlessfa-genderlessf22d  ghostfa-ghostf6e2  giftfa-giftf06b  giftsfa-giftsf79c  glass-cheersfa-glass-cheersf79f  glass-martinifa-glass-martinif000  glass-martini-altfa-glass-martini-altf57b  glass-whiskeyfa-glass-whiskeyf7a0  glassesfa-glassesf530  globefa-globef0ac  globe-africafa-globe-africaf57c  globe-americasfa-globe-americasf57d  globe-asiafa-globe-asiaf57e  globe-europefa-globe-europef7a2  golf-ballfa-golf-ballf450  gopuramfa-gopuramf664  graduation-capfa-graduation-capf19d  greater-thanfa-greater-thanf531  greater-than-equalfa-greater-than-equalf532  grimacefa-grimacef57f  grinfa-grinf580  grin-altfa-grin-altf581  grin-beamfa-grin-beamf582  grin-beam-sweatfa-grin-beam-sweatf583  grin-heartsfa-grin-heartsf584  grin-squintfa-grin-squintf585  grin-squint-tearsfa-grin-squint-tearsf586  grin-starsfa-grin-starsf587  grin-tearsfa-grin-tearsf588  grin-tonguefa-grin-tonguef589  grin-tongue-squintfa-grin-tongue-squintf58a  grin-tongue-winkfa-grin-tongue-winkf58b  grin-winkfa-grin-winkf58c  grip-horizontalfa-grip-horizontalf58d  grip-linesfa-grip-linesf7a4  grip-lines-verticalfa-grip-lines-verticalf7a5  grip-verticalfa-grip-verticalf58e  guitarfa-guitarf7a6  h-squarefa-h-squaref0fd  hamburgerfa-hamburgerf805  hammerfa-hammerf6e3  hamsafa-hamsaf665  hand-holdingfa-hand-holdingf4bd  hand-holding-heartfa-hand-holding-heartf4be  hand-holding-usdfa-hand-holding-usdf4c0  hand-lizardfa-hand-lizardf258  hand-middle-fingerfa-hand-middle-fingerf806  hand-paperfa-hand-paperf256  hand-peacefa-hand-peacef25b  hand-point-downfa-hand-point-downf0a7  hand-point-leftfa-hand-point-leftf0a5  hand-point-rightfa-hand-point-rightf0a4  hand-point-upfa-hand-point-upf0a6  hand-pointerfa-hand-pointerf25a  hand-rockfa-hand-rockf255  hand-scissorsfa-hand-scissorsf257  hand-spockfa-hand-spockf259  handsfa-handsf4c2  hands-helpingfa-hands-helpingf4c4  handshakefa-handshakef2b5  hanukiahfa-hanukiahf6e6  hard-hatfa-hard-hatf807  hashtagfa-hashtagf292  hat-wizardfa-hat-wizardf6e8  haykalfa-haykalf666  hddfa-hddf0a0  headingfa-headingf1dc  headphonesfa-headphonesf025  headphones-altfa-headphones-altf58f  headsetfa-headsetf590  heartfa-heartf004  heart-brokenfa-heart-brokenf7a9  heartbeatfa-heartbeatf21e  helicopterfa-helicopterf533  highlighterfa-highlighterf591  hikingfa-hikingf6ec  hippofa-hippof6ed  historyfa-historyf1da  hockey-puckfa-hockey-puckf453  holly-berryfa-holly-berryf7aa  homefa-homef015  horsefa-horsef6f0  horse-headfa-horse-headf7ab  hospitalfa-hospitalf0f8  hospital-altfa-hospital-altf47d  hospital-symbolfa-hospital-symbolf47e  hot-tubfa-hot-tubf593  hotdogfa-hotdogf80f  hotelfa-hotelf594  hourglassfa-hourglassf254  hourglass-endfa-hourglass-endf253  hourglass-halffa-hourglass-halff252  hourglass-startfa-hourglass-startf251  house-damagefa-house-damagef6f1  hryvniafa-hryvniaf6f2  i-cursorfa-i-cursorf246  ice-creamfa-ice-creamf810  iciclesfa-iciclesf7ad  iconsfa-iconsf86d  id-badgefa-id-badgef2c1  id-cardfa-id-cardf2c2  id-card-altfa-id-card-altf47f  igloofa-igloof7ae  imagefa-imagef03e  imagesfa-imagesf302  inboxfa-inboxf01c  indentfa-indentf03c  industryfa-industryf275  infinityfa-infinityf534  infofa-infof129  info-circlefa-info-circlef05a  italicfa-italicf033  jedifa-jedif669  jointfa-jointf595  journal-whillsfa-journal-whillsf66a  kaabafa-kaabaf66b  keyfa-keyf084  keyboardfa-keyboardf11c  khandafa-khandaf66d  kissfa-kissf596  kiss-beamfa-kiss-beamf597  kiss-wink-heartfa-kiss-wink-heartf598  kiwi-birdfa-kiwi-birdf535  landmarkfa-landmarkf66f  languagefa-languagef1ab  laptopfa-laptopf109  laptop-codefa-laptop-codef5fc  laptop-medicalfa-laptop-medicalf812  laughfa-laughf599  laugh-beamfa-laugh-beamf59a  laugh-squintfa-laugh-squintf59b  laugh-winkfa-laugh-winkf59c  layer-groupfa-layer-groupf5fd  leaffa-leaff06c  lemonfa-lemonf094  less-thanfa-less-thanf536  less-than-equalfa-less-than-equalf537  level-down-altfa-level-down-altf3be  level-up-altfa-level-up-altf3bf  life-ringfa-life-ringf1cd  lightbulbfa-lightbulbf0eb  linkfa-linkf0c1  lira-signfa-lira-signf195  listfa-listf03a  list-altfa-list-altf022  list-olfa-list-olf0cb  list-ulfa-list-ulf0ca  location-arrowfa-location-arrowf124  lockfa-lockf023  lock-openfa-lock-openf3c1  long-arrow-alt-downfa-long-arrow-alt-downf309  long-arrow-alt-leftfa-long-arrow-alt-leftf30a  long-arrow-alt-rightfa-long-arrow-alt-rightf30b  long-arrow-alt-upfa-long-arrow-alt-upf30c  low-visionfa-low-visionf2a8  luggage-cartfa-luggage-cartf59d  magicfa-magicf0d0  magnetfa-magnetf076  mail-bulkfa-mail-bulkf674  malefa-malef183  mapfa-mapf279  map-markedfa-map-markedf59f  map-marked-altfa-map-marked-altf5a0  map-markerfa-map-markerf041  map-marker-altfa-map-marker-altf3c5  map-pinfa-map-pinf276  map-signsfa-map-signsf277  markerfa-markerf5a1  marsfa-marsf222  mars-doublefa-mars-doublef227  mars-strokefa-mars-strokef229  mars-stroke-hfa-mars-stroke-hf22b  mars-stroke-vfa-mars-stroke-vf22a  maskfa-maskf6fa  medalfa-medalf5a2  medkitfa-medkitf0fa  mehfa-mehf11a  meh-blankfa-meh-blankf5a4  meh-rolling-eyesfa-meh-rolling-eyesf5a5  memoryfa-memoryf538  menorahfa-menorahf676  mercuryfa-mercuryf223  meteorfa-meteorf753  microchipfa-microchipf2db  microphonefa-microphonef130  microphone-altfa-microphone-altf3c9  microphone-alt-slashfa-microphone-alt-slashf539  microphone-slashfa-microphone-slashf131  microscopefa-microscopef610  minusfa-minusf068  minus-circlefa-minus-circlef056  minus-squarefa-minus-squaref146  mittenfa-mittenf7b5  mobilefa-mobilef10b  mobile-altfa-mobile-altf3cd  money-billfa-money-billf0d6  money-bill-altfa-money-bill-altf3d1  money-bill-wavefa-money-bill-wavef53a  money-bill-wave-altfa-money-bill-wave-altf53b  money-checkfa-money-checkf53c  money-check-altfa-money-check-altf53d  monumentfa-monumentf5a6  moonfa-moonf186  mortar-pestlefa-mortar-pestlef5a7  mosquefa-mosquef678  motorcyclefa-motorcyclef21c  mountainfa-mountainf6fc  mouse-pointerfa-mouse-pointerf245  mug-hotfa-mug-hotf7b6  musicfa-musicf001  network-wiredfa-network-wiredf6ff  neuterfa-neuterf22c  newspaperfa-newspaperf1ea  not-equalfa-not-equalf53e  notes-medicalfa-notes-medicalf481  object-groupfa-object-groupf247  object-ungroupfa-object-ungroupf248  oil-canfa-oil-canf613  omfa-omf679  otterfa-otterf700  outdentfa-outdentf03b  pagerfa-pagerf815  paint-brushfa-paint-brushf1fc  paint-rollerfa-paint-rollerf5aa  palettefa-palettef53f  palletfa-palletf482  paper-planefa-paper-planef1d8  paperclipfa-paperclipf0c6  parachute-boxfa-parachute-boxf4cd  paragraphfa-paragraphf1dd  parkingfa-parkingf540  passportfa-passportf5ab  pastafarianismfa-pastafarianismf67b  pastefa-pastef0ea  pausefa-pausef04c  pause-circlefa-pause-circlef28b  pawfa-pawf1b0  peacefa-peacef67c  penfa-penf304  pen-altfa-pen-altf305  pen-fancyfa-pen-fancyf5ac  pen-nibfa-pen-nibf5ad  pen-squarefa-pen-squaref14b  pencil-altfa-pencil-altf303  pencil-rulerfa-pencil-rulerf5ae  people-carryfa-people-carryf4ce  pepper-hotfa-pepper-hotf816  percentfa-percentf295  percentagefa-percentagef541  person-boothfa-person-boothf756  phonefa-phonef095  phone-altfa-phone-altf879  phone-slashfa-phone-slashf3dd  phone-squarefa-phone-squaref098  phone-square-altfa-phone-square-altf87b  phone-volumefa-phone-volumef2a0  photo-videofa-photo-videof87c  piggy-bankfa-piggy-bankf4d3  pillsfa-pillsf484  pizza-slicefa-pizza-slicef818  place-of-worshipfa-place-of-worshipf67f  planefa-planef072  plane-arrivalfa-plane-arrivalf5af  plane-departurefa-plane-departuref5b0  playfa-playf04b  play-circlefa-play-circlef144  plugfa-plugf1e6  plusfa-plusf067  plus-circlefa-plus-circlef055  plus-squarefa-plus-squaref0fe  podcastfa-podcastf2ce  pollfa-pollf681  poll-hfa-poll-hf682  poofa-poof2fe  poo-stormfa-poo-stormf75a  poopfa-poopf619  portraitfa-portraitf3e0  pound-signfa-pound-signf154  power-offfa-power-offf011  prayfa-prayf683  praying-handsfa-praying-handsf684  prescriptionfa-prescriptionf5b1  prescription-bottlefa-prescription-bottlef485  prescription-bottle-altfa-prescription-bottle-altf486  printfa-printf02f  proceduresfa-proceduresf487  project-diagramfa-project-diagramf542  puzzle-piecefa-puzzle-piecef12e  qrcodefa-qrcodef029  questionfa-questionf128  question-circlefa-question-circlef059  quidditchfa-quidditchf458  quote-leftfa-quote-leftf10d  quote-rightfa-quote-rightf10e  quranfa-quranf687  radiationfa-radiationf7b9  radiation-altfa-radiation-altf7ba  rainbowfa-rainbowf75b  randomfa-randomf074  receiptfa-receiptf543  recyclefa-recyclef1b8  redofa-redof01e  redo-altfa-redo-altf2f9  registeredfa-registeredf25d  remove-formatfa-remove-formatf87d  replyfa-replyf3e5  reply-allfa-reply-allf122  republicanfa-republicanf75e  restroomfa-restroomf7bd  retweetfa-retweetf079  ribbonfa-ribbonf4d6  ringfa-ringf70b  roadfa-roadf018  robotfa-robotf544  rocketfa-rocketf135  routefa-routef4d7  rssfa-rssf09e  rss-squarefa-rss-squaref143  ruble-signfa-ruble-signf158  rulerfa-rulerf545  ruler-combinedfa-ruler-combinedf546  ruler-horizontalfa-ruler-horizontalf547  ruler-verticalfa-ruler-verticalf548  runningfa-runningf70c  rupee-signfa-rupee-signf156  sad-cryfa-sad-cryf5b3  sad-tearfa-sad-tearf5b4  satellitefa-satellitef7bf  satellite-dishfa-satellite-dishf7c0  savefa-savef0c7  schoolfa-schoolf549  screwdriverfa-screwdriverf54a  scrollfa-scrollf70e  sd-cardfa-sd-cardf7c2  searchfa-searchf002  search-dollarfa-search-dollarf688  search-locationfa-search-locationf689  search-minusfa-search-minusf010  search-plusfa-search-plusf00e  seedlingfa-seedlingf4d8  serverfa-serverf233  shapesfa-shapesf61f  sharefa-sharef064  share-altfa-share-altf1e0  share-alt-squarefa-share-alt-squaref1e1  share-squarefa-share-squaref14d  shekel-signfa-shekel-signf20b  shield-altfa-shield-altf3ed  shipfa-shipf21a  shipping-fastfa-shipping-fastf48b  shoe-printsfa-shoe-printsf54b  shopping-bagfa-shopping-bagf290  shopping-basketfa-shopping-basketf291  shopping-cartfa-shopping-cartf07a  showerfa-showerf2cc  shuttle-vanfa-shuttle-vanf5b6  signfa-signf4d9  sign-in-altfa-sign-in-altf2f6  sign-languagefa-sign-languagef2a7  sign-out-altfa-sign-out-altf2f5  signalfa-signalf012  signaturefa-signaturef5b7  sim-cardfa-sim-cardf7c4  sitemapfa-sitemapf0e8  skatingfa-skatingf7c5  skiingfa-skiingf7c9  skiing-nordicfa-skiing-nordicf7ca  skullfa-skullf54c  skull-crossbonesfa-skull-crossbonesf714  slashfa-slashf715  sleighfa-sleighf7cc  sliders-hfa-sliders-hf1de  smilefa-smilef118  smile-beamfa-smile-beamf5b8  smile-winkfa-smile-winkf4da  smogfa-smogf75f  smokingfa-smokingf48d  smoking-banfa-smoking-banf54d  smsfa-smsf7cd  snowboardingfa-snowboardingf7ce  snowflakefa-snowflakef2dc  snowmanfa-snowmanf7d0  snowplowfa-snowplowf7d2  socksfa-socksf696  solar-panelfa-solar-panelf5ba  sortfa-sortf0dc  sort-alpha-downfa-sort-alpha-downf15d  sort-alpha-down-altfa-sort-alpha-down-altf881  sort-alpha-upfa-sort-alpha-upf15e  sort-alpha-up-altfa-sort-alpha-up-altf882  sort-amount-downfa-sort-amount-downf160  sort-amount-down-altfa-sort-amount-down-altf884  sort-amount-upfa-sort-amount-upf161  sort-amount-up-altfa-sort-amount-up-altf885  sort-downfa-sort-downf0dd  sort-numeric-downfa-sort-numeric-downf162  sort-numeric-down-altfa-sort-numeric-down-altf886  sort-numeric-upfa-sort-numeric-upf163  sort-numeric-up-altfa-sort-numeric-up-altf887  sort-upfa-sort-upf0de  spafa-spaf5bb  space-shuttlefa-space-shuttlef197  spell-checkfa-spell-checkf891  spiderfa-spiderf717  spinnerfa-spinnerf110  splotchfa-splotchf5bc  spray-canfa-spray-canf5bd  squarefa-squaref0c8  square-fullfa-square-fullf45c  square-root-altfa-square-root-altf698  stampfa-stampf5bf  starfa-starf005  star-and-crescentfa-star-and-crescentf699  star-halffa-star-halff089  star-half-altfa-star-half-altf5c0  star-of-davidfa-star-of-davidf69a  star-of-lifefa-star-of-lifef621  step-backwardfa-step-backwardf048  step-forwardfa-step-forwardf051  stethoscopefa-stethoscopef0f1  sticky-notefa-sticky-notef249  stopfa-stopf04d  stop-circlefa-stop-circlef28d  stopwatchfa-stopwatchf2f2  storefa-storef54e  store-altfa-store-altf54f  streamfa-streamf550  street-viewfa-street-viewf21d  strikethroughfa-strikethroughf0cc  stroopwafelfa-stroopwafelf551  subscriptfa-subscriptf12c  subwayfa-subwayf239  suitcasefa-suitcasef0f2  suitcase-rollingfa-suitcase-rollingf5c1  sunfa-sunf185  superscriptfa-superscriptf12b  surprisefa-surprisef5c2  swatchbookfa-swatchbookf5c3  swimmerfa-swimmerf5c4  swimming-poolfa-swimming-poolf5c5  synagoguefa-synagoguef69b  syncfa-syncf021  sync-altfa-sync-altf2f1  syringefa-syringef48e  tablefa-tablef0ce  table-tennisfa-table-tennisf45d  tabletfa-tabletf10a  tablet-altfa-tablet-altf3fa  tabletsfa-tabletsf490  tachometer-altfa-tachometer-altf3fd  tagfa-tagf02b  tagsfa-tagsf02c  tapefa-tapef4db  tasksfa-tasksf0ae  taxifa-taxif1ba  teethfa-teethf62e  teeth-openfa-teeth-openf62f  temperature-highfa-temperature-highf769  temperature-lowfa-temperature-lowf76b  tengefa-tengef7d7  terminalfa-terminalf120  text-heightfa-text-heightf034  text-widthfa-text-widthf035  thfa-thf00a  th-largefa-th-largef009  th-listfa-th-listf00b  theater-masksfa-theater-masksf630  thermometerfa-thermometerf491  thermometer-emptyfa-thermometer-emptyf2cb  thermometer-fullfa-thermometer-fullf2c7  thermometer-halffa-thermometer-halff2c9  thermometer-quarterfa-thermometer-quarterf2ca  thermometer-three-quartersfa-thermometer-three-quartersf2c8  thumbs-downfa-thumbs-downf165  thumbs-upfa-thumbs-upf164  thumbtackfa-thumbtackf08d  ticket-altfa-ticket-altf3ff  timesfa-timesf00d  times-circlefa-times-circlef057  tintfa-tintf043  tint-slashfa-tint-slashf5c7  tiredfa-tiredf5c8  toggle-offfa-toggle-offf204  toggle-onfa-toggle-onf205  toiletfa-toiletf7d8  toilet-paperfa-toilet-paperf71e  toolboxfa-toolboxf552  toolsfa-toolsf7d9  toothfa-toothf5c9  torahfa-torahf6a0  torii-gatefa-torii-gatef6a1  tractorfa-tractorf722  trademarkfa-trademarkf25c  traffic-lightfa-traffic-lightf637  trainfa-trainf238  tramfa-tramf7da  transgenderfa-transgenderf224  transgender-altfa-transgender-altf225  trashfa-trashf1f8  trash-altfa-trash-altf2ed  trash-restorefa-trash-restoref829  trash-restore-altfa-trash-restore-altf82a  treefa-treef1bb  trophyfa-trophyf091  truckfa-truckf0d1  truck-loadingfa-truck-loadingf4de  truck-monsterfa-truck-monsterf63b  truck-movingfa-truck-movingf4df  truck-pickupfa-truck-pickupf63c  tshirtfa-tshirtf553  ttyfa-ttyf1e4  tvfa-tvf26c  umbrellafa-umbrellaf0e9  umbrella-beachfa-umbrella-beachf5ca  underlinefa-underlinef0cd  undofa-undof0e2  undo-altfa-undo-altf2ea  universal-accessfa-universal-accessf29a  universityfa-universityf19c  unlinkfa-unlinkf127  unlockfa-unlockf09c  unlock-altfa-unlock-altf13e  uploadfa-uploadf093  userfa-userf007  user-altfa-user-altf406  user-alt-slashfa-user-alt-slashf4fa  user-astronautfa-user-astronautf4fb  user-checkfa-user-checkf4fc  user-circlefa-user-circlef2bd  user-clockfa-user-clockf4fd  user-cogfa-user-cogf4fe  user-editfa-user-editf4ff  user-friendsfa-user-friendsf500  user-graduatefa-user-graduatef501  user-injuredfa-user-injuredf728  user-lockfa-user-lockf502  user-mdfa-user-mdf0f0  user-minusfa-user-minusf503  user-ninjafa-user-ninjaf504  user-nursefa-user-nursef82f  user-plusfa-user-plusf234  user-secretfa-user-secretf21b  user-shieldfa-user-shieldf505  user-slashfa-user-slashf506  user-tagfa-user-tagf507  user-tiefa-user-tief508  user-timesfa-user-timesf235  usersfa-usersf0c0  users-cogfa-users-cogf509  utensil-spoonfa-utensil-spoonf2e5  utensilsfa-utensilsf2e7  vector-squarefa-vector-squaref5cb  venusfa-venusf221  venus-doublefa-venus-doublef226  venus-marsfa-venus-marsf228  vialfa-vialf492  vialsfa-vialsf493  videofa-videof03d  video-slashfa-video-slashf4e2  viharafa-viharaf6a7  voicemailfa-voicemailf897  volleyball-ballfa-volleyball-ballf45f  volume-downfa-volume-downf027  volume-mutefa-volume-mutef6a9  volume-offfa-volume-offf026  volume-upfa-volume-upf028  vote-yeafa-vote-yeaf772  vr-cardboardfa-vr-cardboardf729  walkingfa-walkingf554  walletfa-walletf555  warehousefa-warehousef494  waterfa-waterf773  wave-squarefa-wave-squaref83e  weightfa-weightf496  weight-hangingfa-weight-hangingf5cd  wheelchairfa-wheelchairf193  wififa-wifif1eb  windfa-windf72e  window-closefa-window-closef410  window-maximizefa-window-maximizef2d0  window-minimizefa-window-minimizef2d1  window-restorefa-window-restoref2d2  wine-bottlefa-wine-bottlef72f  wine-glassfa-wine-glassf4e3  wine-glass-altfa-wine-glass-altf5ce  won-signfa-won-signf159  wrenchfa-wrenchf0ad  x-rayfa-x-rayf497  yen-signfa-yen-signf157  yin-yangfa-yin-yangf6ad   Font Awesome Icons List - Regular Icons  Icon Code CSS Content Code   address-bookfa-address-bookf2b9  address-cardfa-address-cardf2bb  angryfa-angryf556  arrow-alt-circle-downfa-arrow-alt-circle-downf358  arrow-alt-circle-leftfa-arrow-alt-circle-leftf359  arrow-alt-circle-rightfa-arrow-alt-circle-rightf35a  arrow-alt-circle-upfa-arrow-alt-circle-upf35b  bellfa-bellf0f3  bell-slashfa-bell-slashf1f6  bookmarkfa-bookmarkf02e  buildingfa-buildingf1ad  calendarfa-calendarf133  calendar-altfa-calendar-altf073  calendar-checkfa-calendar-checkf274  calendar-minusfa-calendar-minusf272  calendar-plusfa-calendar-plusf271  calendar-timesfa-calendar-timesf273  caret-square-downfa-caret-square-downf150  caret-square-leftfa-caret-square-leftf191  caret-square-rightfa-caret-square-rightf152  caret-square-upfa-caret-square-upf151  chart-barfa-chart-barf080  check-circlefa-check-circlef058  check-squarefa-check-squaref14a  circlefa-circlef111  clipboardfa-clipboardf328  clockfa-clockf017  clonefa-clonef24d  closed-captioningfa-closed-captioningf20a  commentfa-commentf075  comment-altfa-comment-altf27a  comment-dotsfa-comment-dotsf4ad  commentsfa-commentsf086  compassfa-compassf14e  copyfa-copyf0c5  copyrightfa-copyrightf1f9  credit-cardfa-credit-cardf09d  dizzyfa-dizzyf567  dot-circlefa-dot-circlef192  editfa-editf044  envelopefa-envelopef0e0  envelope-openfa-envelope-openf2b6  eyefa-eyef06e  eye-slashfa-eye-slashf070  filefa-filef15b  file-altfa-file-altf15c  file-archivefa-file-archivef1c6  file-audiofa-file-audiof1c7  file-codefa-file-codef1c9  file-excelfa-file-excelf1c3  file-imagefa-file-imagef1c5  file-pdffa-file-pdff1c1  file-powerpointfa-file-powerpointf1c4  file-videofa-file-videof1c8  file-wordfa-file-wordf1c2  flagfa-flagf024  flushedfa-flushedf579  folderfa-folderf07b  folder-openfa-folder-openf07c  frownfa-frownf119  frown-openfa-frown-openf57a  futbolfa-futbolf1e3  gemfa-gemf3a5  grimacefa-grimacef57f  grinfa-grinf580  grin-altfa-grin-altf581  grin-beamfa-grin-beamf582  grin-beam-sweatfa-grin-beam-sweatf583  grin-heartsfa-grin-heartsf584  grin-squintfa-grin-squintf585  grin-squint-tearsfa-grin-squint-tearsf586  grin-starsfa-grin-starsf587  grin-tearsfa-grin-tearsf588  grin-tonguefa-grin-tonguef589  grin-tongue-squintfa-grin-tongue-squintf58a  grin-tongue-winkfa-grin-tongue-winkf58b  grin-winkfa-grin-winkf58c  hand-lizardfa-hand-lizardf258  hand-paperfa-hand-paperf256  hand-peacefa-hand-peacef25b  hand-point-downfa-hand-point-downf0a7  hand-point-leftfa-hand-point-leftf0a5  hand-point-rightfa-hand-point-rightf0a4  hand-point-upfa-hand-point-upf0a6  hand-pointerfa-hand-pointerf25a  hand-rockfa-hand-rockf255  hand-scissorsfa-hand-scissorsf257  hand-spockfa-hand-spockf259  handshakefa-handshakef2b5  hddfa-hddf0a0  heartfa-heartf004  hospitalfa-hospitalf0f8  hourglassfa-hourglassf254  id-badgefa-id-badgef2c1  id-cardfa-id-cardf2c2  imagefa-imagef03e  imagesfa-imagesf302  keyboardfa-keyboardf11c  kissfa-kissf596  kiss-beamfa-kiss-beamf597  kiss-wink-heartfa-kiss-wink-heartf598  laughfa-laughf599  laugh-beamfa-laugh-beamf59a  laugh-squintfa-laugh-squintf59b  laugh-winkfa-laugh-winkf59c  lemonfa-lemonf094  life-ringfa-life-ringf1cd  lightbulbfa-lightbulbf0eb  list-altfa-list-altf022  mapfa-mapf279  mehfa-mehf11a  meh-blankfa-meh-blankf5a4  meh-rolling-eyesfa-meh-rolling-eyesf5a5  minus-squarefa-minus-squaref146  money-bill-altfa-money-bill-altf3d1  moonfa-moonf186  newspaperfa-newspaperf1ea  object-groupfa-object-groupf247  object-ungroupfa-object-ungroupf248  paper-planefa-paper-planef1d8  pause-circlefa-pause-circlef28b  play-circlefa-play-circlef144  plus-squarefa-plus-squaref0fe  question-circlefa-question-circlef059  registeredfa-registeredf25d  sad-cryfa-sad-cryf5b3  sad-tearfa-sad-tearf5b4  savefa-savef0c7  share-squarefa-share-squaref14d  smilefa-smilef118  smile-beamfa-smile-beamf5b8  smile-winkfa-smile-winkf4da  snowflakefa-snowflakef2dc  squarefa-squaref0c8  starfa-starf005  star-halffa-star-halff089  sticky-notefa-sticky-notef249  stop-circlefa-stop-circlef28d  sunfa-sunf185  surprisefa-surprisef5c2  thumbs-downfa-thumbs-downf165  thumbs-upfa-thumbs-upf164  times-circlefa-times-circlef057  tiredfa-tiredf5c8  trash-altfa-trash-altf2ed  userfa-userf007  user-circlefa-user-circlef2bd  window-closefa-window-closef410  window-maximizefa-window-maximizef2d0  window-minimizefa-window-minimizef2d1  window-restorefa-window-restoref2d2   Font Awesome Icons List - Brand Icons  Name Code CSS Content Code   500pxfa-500pxf26e  accessible-iconfa-accessible-iconf368  accusoftfa-accusoftf369  acquisitions-incorporatedfa-acquisitions-incorporatedf6af  adnfa-adnf170  adobefa-adobef778  adversalfa-adversalf36a  affiliatethemefa-affiliatethemef36b  airbnbfa-airbnbf834  algoliafa-algoliaf36c  alipayfa-alipayf642  amazonfa-amazonf270  amazon-payfa-amazon-payf42c  amiliafa-amiliaf36d  androidfa-androidf17b  angellistfa-angellistf209  angrycreativefa-angrycreativef36e  angularfa-angularf420  app-storefa-app-storef36f  app-store-iosfa-app-store-iosf370  apperfa-apperf371  applefa-applef179  apple-payfa-apple-payf415  artstationfa-artstationf77a  asymmetrikfa-asymmetrikf372  atlassianfa-atlassianf77b  audiblefa-audiblef373  autoprefixerfa-autoprefixerf41c  avianexfa-avianexf374  aviatofa-aviatof421  awsfa-awsf375  bandcampfa-bandcampf2d5  battle-netfa-battle-netf835  behancefa-behancef1b4  behance-squarefa-behance-squaref1b5  bimobjectfa-bimobjectf378  bitbucketfa-bitbucketf171  bitcoinfa-bitcoinf379  bityfa-bityf37a  black-tiefa-black-tief27e  blackberryfa-blackberryf37b  bloggerfa-bloggerf37c  blogger-bfa-blogger-bf37d  bluetoothfa-bluetoothf293  bluetooth-bfa-bluetooth-bf294  bootstrapfa-bootstrapf836  btcfa-btcf15a  bufferfa-bufferf837  buromobelexpertefa-buromobelexpertef37f  buyselladsfa-buyselladsf20d  canadian-maple-leaffa-canadian-maple-leaff785  cc-amazon-payfa-cc-amazon-payf42d  cc-amexfa-cc-amexf1f3  cc-apple-payfa-cc-apple-payf416  cc-diners-clubfa-cc-diners-clubf24c  cc-discoverfa-cc-discoverf1f2  cc-jcbfa-cc-jcbf24b  cc-mastercardfa-cc-mastercardf1f1  cc-paypalfa-cc-paypalf1f4  cc-stripefa-cc-stripef1f5  cc-visafa-cc-visaf1f0  centercodefa-centercodef380  centosfa-centosf789  chromefa-chromef268  chromecastfa-chromecastf838  cloudscalefa-cloudscalef383  cloudsmithfa-cloudsmithf384  cloudversifyfa-cloudversifyf385  codepenfa-codepenf1cb  codiepiefa-codiepief284  confluencefa-confluencef78d  connectdevelopfa-connectdevelopf20e  contaofa-contaof26d  cpanelfa-cpanelf388  creative-commonsfa-creative-commonsf25e  creative-commons-byfa-creative-commons-byf4e7  creative-commons-ncfa-creative-commons-ncf4e8  creative-commons-nc-eufa-creative-commons-nc-euf4e9  creative-commons-nc-jpfa-creative-commons-nc-jpf4ea  creative-commons-ndfa-creative-commons-ndf4eb  creative-commons-pdfa-creative-commons-pdf4ec  creative-commons-pd-altfa-creative-commons-pd-altf4ed  creative-commons-remixfa-creative-commons-remixf4ee  creative-commons-safa-creative-commons-saf4ef  creative-commons-samplingfa-creative-commons-samplingf4f0  creative-commons-sampling-plusfa-creative-commons-sampling-plusf4f1  creative-commons-sharefa-creative-commons-sharef4f2  creative-commons-zerofa-creative-commons-zerof4f3  critical-rolefa-critical-rolef6c9  css3fa-css3f13c  css3-altfa-css3-altf38b  cuttlefishfa-cuttlefishf38c  d-and-dfa-d-and-df38d  d-and-d-beyondfa-d-and-d-beyondf6ca  dashcubefa-dashcubef210  deliciousfa-deliciousf1a5  deploydogfa-deploydogf38e  deskprofa-deskprof38f  devfa-devf6cc  deviantartfa-deviantartf1bd  dhlfa-dhlf790  diasporafa-diasporaf791  diggfa-diggf1a6  digital-oceanfa-digital-oceanf391  discordfa-discordf392  discoursefa-discoursef393  dochubfa-dochubf394  dockerfa-dockerf395  draft2digitalfa-draft2digitalf396  dribbblefa-dribbblef17d  dribbble-squarefa-dribbble-squaref397  dropboxfa-dropboxf16b  drupalfa-drupalf1a9  dyalogfa-dyalogf399  earlybirdsfa-earlybirdsf39a  ebayfa-ebayf4f4  edgefa-edgef282  elementorfa-elementorf430  ellofa-ellof5f1  emberfa-emberf423  empirefa-empiref1d1  envirafa-enviraf299  erlangfa-erlangf39d  ethereumfa-ethereumf42e  etsyfa-etsyf2d7  evernotefa-evernotef839  expeditedsslfa-expeditedsslf23e  facebookfa-facebookf09a  facebook-ffa-facebook-ff39e  facebook-messengerfa-facebook-messengerf39f  facebook-squarefa-facebook-squaref082  fantasy-flight-gamesfa-fantasy-flight-gamesf6dc  fedexfa-fedexf797  fedorafa-fedoraf798  figmafa-figmaf799  firefoxfa-firefoxf269  first-orderfa-first-orderf2b0  first-order-altfa-first-order-altf50a  firstdraftfa-firstdraftf3a1  flickrfa-flickrf16e  flipboardfa-flipboardf44d  flyfa-flyf417  font-awesomefa-font-awesomef2b4  font-awesome-altfa-font-awesome-altf35c  font-awesome-flagfa-font-awesome-flagf425  fonticonsfa-fonticonsf280  fonticons-fifa-fonticons-fif3a2  fort-awesomefa-fort-awesomef286  fort-awesome-altfa-fort-awesome-altf3a3  forumbeefa-forumbeef211  foursquarefa-foursquaref180  free-code-campfa-free-code-campf2c5  freebsdfa-freebsdf3a4  fulcrumfa-fulcrumf50b  galactic-republicfa-galactic-republicf50c  galactic-senatefa-galactic-senatef50d  get-pocketfa-get-pocketf265  ggfa-ggf260  gg-circlefa-gg-circlef261  gitfa-gitf1d3  git-altfa-git-altf841  git-squarefa-git-squaref1d2  githubfa-githubf09b  github-altfa-github-altf113  github-squarefa-github-squaref092  gitkrakenfa-gitkrakenf3a6  gitlabfa-gitlabf296  gitterfa-gitterf426  glidefa-glidef2a5  glide-gfa-glide-gf2a6  goforefa-goforef3a7  goodreadsfa-goodreadsf3a8  goodreads-gfa-goodreads-gf3a9  googlefa-googlef1a0  google-drivefa-google-drivef3aa  google-playfa-google-playf3ab  google-plusfa-google-plusf2b3  google-plus-gfa-google-plus-gf0d5  google-plus-squarefa-google-plus-squaref0d4  google-walletfa-google-walletf1ee  gratipayfa-gratipayf184  gravfa-gravf2d6  gripfirefa-gripfiref3ac  gruntfa-gruntf3ad  gulpfa-gulpf3ae  hacker-newsfa-hacker-newsf1d4  hacker-news-squarefa-hacker-news-squaref3af  hackerrankfa-hackerrankf5f7  hipsfa-hipsf452  hire-a-helperfa-hire-a-helperf3b0  hoolifa-hoolif427  hornbillfa-hornbillf592  hotjarfa-hotjarf3b1  houzzfa-houzzf27c  html5fa-html5f13b  hubspotfa-hubspotf3b2  imdbfa-imdbf2d8  instagramfa-instagramf16d  intercomfa-intercomf7af  internet-explorerfa-internet-explorerf26b  invisionfa-invisionf7b0  ioxhostfa-ioxhostf208  itch-iofa-itch-iof83a  itunesfa-itunesf3b4  itunes-notefa-itunes-notef3b5  javafa-javaf4e4  jedi-orderfa-jedi-orderf50e  jenkinsfa-jenkinsf3b6  jirafa-jiraf7b1  jogetfa-jogetf3b7  joomlafa-joomlaf1aa  jsfa-jsf3b8  js-squarefa-js-squaref3b9  jsfiddlefa-jsfiddlef1cc  kagglefa-kagglef5fa  keybasefa-keybasef4f5  keycdnfa-keycdnf3ba  kickstarterfa-kickstarterf3bb  kickstarter-kfa-kickstarter-kf3bc  korvuefa-korvuef42f  laravelfa-laravelf3bd  lastfmfa-lastfmf202  lastfm-squarefa-lastfm-squaref203  leanpubfa-leanpubf212  lessfa-lessf41d  linefa-linef3c0  linkedinfa-linkedinf08c  linkedin-infa-linkedin-inf0e1  linodefa-linodef2b8  linuxfa-linuxf17c  lyftfa-lyftf3c3  magentofa-magentof3c4  mailchimpfa-mailchimpf59e  mandalorianfa-mandalorianf50f  markdownfa-markdownf60f  mastodonfa-mastodonf4f6  maxcdnfa-maxcdnf136  medappsfa-medappsf3c6  mediumfa-mediumf23a  medium-mfa-medium-mf3c7  medrtfa-medrtf3c8  meetupfa-meetupf2e0  megaportfa-megaportf5a3  mendeleyfa-mendeleyf7b3  microsoftfa-microsoftf3ca  mixfa-mixf3cb  mixcloudfa-mixcloudf289  mizunifa-mizunif3cc  modxfa-modxf285  monerofa-monerof3d0  napsterfa-napsterf3d2  neosfa-neosf612  nimblrfa-nimblrf5a8  nodefa-nodef419  node-jsfa-node-jsf3d3  npmfa-npmf3d4  ns8fa-ns8f3d5  nutritionixfa-nutritionixf3d6  odnoklassnikifa-odnoklassnikif263  odnoklassniki-squarefa-odnoklassniki-squaref264  old-republicfa-old-republicf510  opencartfa-opencartf23d  openidfa-openidf19b  operafa-operaf26a  optin-monsterfa-optin-monsterf23c  osifa-osif41a  page4fa-page4f3d7  pagelinesfa-pagelinesf18c  palfedfa-palfedf3d8  patreonfa-patreonf3d9  paypalfa-paypalf1ed  penny-arcadefa-penny-arcadef704  periscopefa-periscopef3da  phabricatorfa-phabricatorf3db  phoenix-frameworkfa-phoenix-frameworkf3dc  phoenix-squadronfa-phoenix-squadronf511  phpfa-phpf457  pied-piperfa-pied-piperf2ae  pied-piper-altfa-pied-piper-altf1a8  pied-piper-hatfa-pied-piper-hatf4e5  pied-piper-ppfa-pied-piper-ppf1a7  pinterestfa-pinterestf0d2  pinterest-pfa-pinterest-pf231  pinterest-squarefa-pinterest-squaref0d3  playstationfa-playstationf3df  product-huntfa-product-huntf288  pushedfa-pushedf3e1  pythonfa-pythonf3e2  qqfa-qqf1d6  quinscapefa-quinscapef459  quorafa-quoraf2c4  r-projectfa-r-projectf4f7  raspberry-pifa-raspberry-pif7bb  ravelryfa-ravelryf2d9  reactfa-reactf41b  reacteuropefa-reacteuropef75d  readmefa-readmef4d5  rebelfa-rebelf1d0  red-riverfa-red-riverf3e3  redditfa-redditf1a1  reddit-alienfa-reddit-alienf281  reddit-squarefa-reddit-squaref1a2  redhatfa-redhatf7bc  renrenfa-renrenf18b  replydfa-replydf3e6  researchgatefa-researchgatef4f8  resolvingfa-resolvingf3e7  revfa-revf5b2  rocketchatfa-rocketchatf3e8  rockrmsfa-rockrmsf3e9  safarifa-safarif267  salesforcefa-salesforcef83b  sassfa-sassf41e  schlixfa-schlixf3ea  scribdfa-scribdf28a  searchenginfa-searchenginf3eb  sellcastfa-sellcastf2da  sellsyfa-sellsyf213  servicestackfa-servicestackf3ec  shirtsinbulkfa-shirtsinbulkf214  shopwarefa-shopwaref5b5  simplybuiltfa-simplybuiltf215  sistrixfa-sistrixf3ee  sithfa-sithf512  sketchfa-sketchf7c6  skyatlasfa-skyatlasf216  skypefa-skypef17e  slackfa-slackf198  slack-hashfa-slack-hashf3ef  slidesharefa-slidesharef1e7  snapchatfa-snapchatf2ab  snapchat-ghostfa-snapchat-ghostf2ac  snapchat-squarefa-snapchat-squaref2ad  soundcloudfa-soundcloudf1be  sourcetreefa-sourcetreef7d3  speakapfa-speakapf3f3  speaker-deckfa-speaker-deckf83c  spotifyfa-spotifyf1bc  squarespacefa-squarespacef5be  stack-exchangefa-stack-exchangef18d  stack-overflowfa-stack-overflowf16c  stackpathfa-stackpathf842  staylinkedfa-staylinkedf3f5  steamfa-steamf1b6  steam-squarefa-steam-squaref1b7  steam-symbolfa-steam-symbolf3f6  sticker-mulefa-sticker-mulef3f7  stravafa-stravaf428  stripefa-stripef429  stripe-sfa-stripe-sf42a  studiovinarifa-studiovinarif3f8  stumbleuponfa-stumbleuponf1a4  stumbleupon-circlefa-stumbleupon-circlef1a3  superpowersfa-superpowersf2dd  supplefa-supplef3f9  susefa-susef7d6  symfonyfa-symfonyf83d  teamspeakfa-teamspeakf4f9  telegramfa-telegramf2c6  telegram-planefa-telegram-planef3fe  tencent-weibofa-tencent-weibof1d5  the-red-yetifa-the-red-yetif69d  themecofa-themecof5c6  themeislefa-themeislef2b2  think-peaksfa-think-peaksf731  trade-federationfa-trade-federationf513  trellofa-trellof181  tripadvisorfa-tripadvisorf262  tumblrfa-tumblrf173  tumblr-squarefa-tumblr-squaref174  twitchfa-twitchf1e8  twitterfa-twitterf099  twitter-squarefa-twitter-squaref081  typo3fa-typo3f42b  uberfa-uberf402  ubuntufa-ubuntuf7df  uikitfa-uikitf403  uniregistryfa-uniregistryf404  untappdfa-untappdf405  upsfa-upsf7e0  usbfa-usbf287  uspsfa-uspsf7e1  ussunnahfa-ussunnahf407  vaadinfa-vaadinf408  viacoinfa-viacoinf237  viadeofa-viadeof2a9  viadeo-squarefa-viadeo-squaref2aa  viberfa-viberf409  vimeofa-vimeof40a  vimeo-squarefa-vimeo-squaref194  vimeo-vfa-vimeo-vf27d  vinefa-vinef1ca  vkfa-vkf189  vnvfa-vnvf40b  vuejsfa-vuejsf41f  wazefa-wazef83f  weeblyfa-weeblyf5cc  weibofa-weibof18a  weixinfa-weixinf1d7  whatsappfa-whatsappf232  whatsapp-squarefa-whatsapp-squaref40c  whmcsfa-whmcsf40d  wikipedia-wfa-wikipedia-wf266  windowsfa-windowsf17a  wixfa-wixf5cf  wizards-of-the-coastfa-wizards-of-the-coastf730  wolf-pack-battalionfa-wolf-pack-battalionf514  wordpressfa-wordpressf19a  wordpress-simplefa-wordpress-simplef411  wpbeginnerfa-wpbeginnerf297  wpexplorerfa-wpexplorerf2de  wpformsfa-wpformsf298  wpressrfa-wpressrf3e4  xboxfa-xboxf412  xingfa-xingf168  xing-squarefa-xing-squaref169  y-combinatorfa-y-combinatorf23b  yahoofa-yahoof19e  yammerfa-yammerf840  yandexfa-yandexf413  yandex-internationalfa-yandex-internationalf414  yarnfa-yarnf7e3  yelpfa-yelpf1e9  yoastfa-yoastf2b1  youtubefa-youtubef167  youtube-squarefa-youtube-squaref431  zhihufa-zhihuf63f   ","date":1563066065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563124688,"objectID":"b7f7e0ae504756d98044b99bb4f65411","permalink":"https://www.angularjswiki.com/angular/font-awesome-icons-list-usage-css-content-values/","publishdate":"2019-07-14T01:01:05Z","relpermalink":"/angular/font-awesome-icons-list-usage-css-content-values/","section":"angular","summary":"This post contains complete font awesome icons list with their CSS content values and step by step tutorial to use font awesome icons in our webpages","tags":null,"title":"Font Awesome Icons list \u0026 Font Awesome CSS content values cheatsheet","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular date pipe used to format dates in angular according to the given date formats,timezone and country locale information.\nUsing date pipe, we can convert a date object, a number (milliseconds from UTC) or an ISO date strings according to given predefined angular date formats or custom angular date formats.\nTable of Contents\r   How to Use Angular Date Pipe Angular Date Pipe Examples List of all predefined date formats in Angular Angular date pipe timezone example How to display UTC date time in angular using date pipe Angular date pipe example with country locale Creating Custom Date Pipe in Angular Defining Custom date formats in Angular   \rHow to Use Angular Date Pipe Angular date pipe accpets three parameters\n Format Timezone Locale  {{ date_Value | date [ : format [ : timezone [ : locale ] ] ] }}    Parameter Description     format We can pass predefined angular date formats or our custom date format as a parameter. The default value is 'mediumDate' (Optional parameter)   timezone The default timezone is local system timezone of the user's machine. To change the timezone we can pass timezone offset ('0530') or standard UTC/GMT (IST) or continental US timezone abbreviation and it is an optional parameter   locale represents locale format rules to use. Default value is our project locale (en_US) if set or undefined.Optional parameter     Angular Date Pipe Examples Now we will go through few angular date pipe examples to understand it further.\nI have created a date pipe component in my Angular project and added current datetime values in different formats like milliseconds,date object,datetime string,ISO datetime string.\nimport { Component, OnInit } from '@angular/core'; @Component({ selector: 'app-datepipe', templateUrl: './datepipe.component.html', styleUrls: ['./datepipe.component.scss'] }) export class DatepipeComponent implements OnInit { todayNumber: number = Date.now(); todayDate : Date = new Date(); todayString : string = new Date().toDateString(); todayISOString : string = new Date().toISOString(); constructor() { } ngOnInit() { } }  Now in my component I am displaying them using angular date pipe as shown below.\n\u0026lt;p\u0026gt;DateTime as Milliseconds : {{todayNumber}} datepipe:{{todayNumber | date}}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;DateTime as object : {{todayDate}} datepipe:{{todayDate | date}}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;DateTime as string : {{todayString}} datepipe:{{todayString | date}}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;DateTime as iso string : {{todayISOString}} datepipe:{{todayISOString | date}}\u0026lt;/p\u0026gt; Output: DateTime as Milliseconds : 1560617468681 datepipe:Jun 15, 2019 DateTime as object : Sat Jun 15 2019 22:21:08 GMT+0530 (India Standard Time) datepipe:Jun 15, 2019 DateTime as string : Sat Jun 15 2019 datepipe:Jun 15, 2019 DateTime as iso string : 2019-06-15T16:51:08.681Z datepipe:Jun 15, 2019  All types of datetime values displays the date in \u0026lsquo;MMM d, y\u0026rsquo; format which is default Angular date format \u0026lsquo;mediumDate\u0026rsquo;\nTo change the datetime format in angular we have to pass date time format parameter to the angular pipe as shown below\n{{ date_value | date :'short'}} // 6/15/19, 5:24 PM  The format \u0026lsquo;short\u0026rsquo; is one of the predefined date formats in angular which converts our date value to \u0026rsquo;M/d/yy, h:mm a\u0026rsquo; format.\nList of all predefined date formats in Angular   Date Format Angular datepipe code Result     M/d/yy, h:mm a {{todayDate | date:'short'}} 6/15/19, 10:54 PM   MMM d, y, h:mm:ss a {{todayDate | date:'medium'}} Jun 15, 2019, 10:54:25 PM   MMMM d, y, h:mm:ss a z {{todayDate | date:'long'}} June 15, 2019 at 10:54:25 PM GMT+5   EEEE, MMMM d, y, h:mm:ss a zzzz {{todayDate | date:'full'}} Saturday, June 15, 2019 at 10:54:25 PM GMT+05:30   M/d/yy {{todayDate | date:'shortDate'}} 6/15/19   MMM d, y {{todayDate | date:'mediumDate'}} Jun 15, 2019   MMMM d, y {{todayDate | date:'longDate'}} June 15, 2019   EEEE, MMMM d, y {{todayDate | date:'fullDate'}} Saturday, June 15, 2019   h:mm a {{todayDate | date:'shortTime'}} 10:54 PM   h:mm:ss a {{todayDate | date:'mediumTime'}} 10:54:25 PM   h:mm:ss a z {{todayDate | date:'longTime'}} 10:54:25 PM GMT+5   h:mm:ss a zzzz {{todayDate | date:'fullTime'}} 10:54:25 PM GMT+05:30     Angular date pipe has 12 predefined date formats as shown in above table.\nWe have to pass first parameter \u0026ldquo;format\u0026rdquo; as quoted string with the predefined date format names listed below.\n short medium long full shortDate mediumDate longDate fullDate shortTime mediumTime longTime fullTime  Angular date pipe timezone example In addition to the date format we can pass timezone as a parameter to date pipe to display date in particular timezone.\nThe timezone parameter can be timezone offset (\u0026lsquo;0530\u0026rsquo;) or standard UTC/GMT (IST) or continental US timezone abbreviation.\nFor example to display to time in IST timezone\nToday is {{todayDate | date:'short':'IST'}} Today is {{todayDate | date:'short':'+0530'}} Result: Today is 6/19/19, 12:29 PM  How to display UTC date time in angular using date pipe To display UTC date and time in Angular we have to pass timezone parameters as \u0026lsquo;UTC\u0026rsquo; or timezone offset as \u0026lsquo;+0000\u0026rsquo; as shown below\nToday is {{todayDate | date:'short':'UTC'}} Today is {{todayDate | date:'short':'+0000'}} Result: Today is 6/19/19, 11:11 AM  Angular date pipe example with country locale To display date according to country locale format rules, We have to pass country locale code as a third parameter to angular date pipe as shown below.\nFor example France follows \u0026ldquo;Central European Summer Time\u0026rdquo; and it has a timezone offset \u0026lsquo;+0200\u0026rsquo;.\nTo display date time in french locale in Angular use locale code \u0026lsquo;fr\u0026rsquo; as parameter as shown below\n\u0026lt;p\u0026gt;French date time is {{todayDate | date:'full':'+0200':'fr'}}\u0026lt;/p\u0026gt; Result: French date time is mercredi 19 juin 2019 Ã  13:25:15 GMT+02:00  But the above code returns the error in console saying Missing locale data for the locale âfrâ.\nIn our application we dont have locale information for \u0026lsquo;fr\u0026rsquo;\nTo add the country locale information refer Angular currency pipe article\nCreating Custom Date Pipe in Angular The default date format in Angular is \u0026lsquo;mediumDate\u0026rsquo;.\nWhat if we want to change it and replace it with our own custom format like \u0026lsquo;EEEE d MMMM y h:mm a\u0026rsquo;\nWhich displays time as \u0026lsquo;Wednesday 19 June 2019 8:33 PM\u0026rsquo;.\nIn our angular projects, we will be displaying dates very frequently and each time we need to pass the format parameter.\nTo avoid this We can create our own custom date pipe with the above format, use it across the application as shown below.\n{{ todayDate | customDate }} Result: Wednesday 19 June 2019 8:33 PM  To create a custom date pipe follow the below steps\nCreate a file named custom.datepipe.ts add the below code.\n import { Pipe, PipeTransform } from '@angular/core'; import { DatePipe } from '@angular/common'; @Pipe({ name: 'customDate' }) export class CustomDatePipe extends DatePipe implements PipeTransform { transform(value: any, args?: any): any { return super.transform(value, \u0026quot;EEEE d MMMM y h:mm a\u0026quot;); } }  And import CustomDatePipe in app.module.ts and add it in declaration array of AppModule.\n import {CustomDatePipe} from './custom.datepipe'; @NgModule({ declarations: [ CustomDatePipe ]);  Now we can use our custom date pipe in component file as shown below\n {{todayDate | customDate}} Result: Thursday 20 June 2019 4:15 AM  Defining Custom date formats in Angular In addition to the above date time formats,we can define our own custom datetime formats using the below symbols.\nFor example {{today | date:'GGGG'}} displays the era of time \u0026ldquo;Anno Domini\u0026rdquo;\nWe can combine these symbols to display our own date formats as shown below.\n{{today | date:'EEEE d MMMM y GGGG'}} // Tuesday 18 June 2019 Anno Domini  Format Name Format specifier Eg. Result   Era G, GG \u0026amp; GGG(Abbreviated) AD   GGGG(Wide) Anno Domini   GGGGG(Narrow) A  Year y(Numeric: minimum digits) 2019   yy(Numeric: 2 digits + zero padded) 19   yyy(Numeric: 3 digits + zero padded) 2019   yyyy(Numeric: 4 digits or more + zero padded) 2019  Month M(Numeric: 1 digit) 6   MM(Numeric: 2 digits + zero padded) 06   MMM(Abbreviated) Jun   MMMM(Wide) June   MMMMM(Narrow) J  Month standalone L(Numeric: 1 digit) 6   LL(Numeric: 2 digits + zero padded) 06   LLL(Abbreviated) Jun   LLLL(Wide) June   LLLLL(Narrow) J  Week of year w(Numeric: minimum digits) 25   ww(Numeric: 2 digits + zero padded) 25  Week of month W(Numeric: 1 digit) 4  Day of month d(Numeric: minimum digits) 16   dd(Numeric: 2 digits + zero padded) 16  Week day E, EE \u0026amp; EEE(Abbreviated) Sun   EEEE(Wide) Sunday   EEEEE(Narrow) S   EEEEEE(Short) Su  Period a, aa \u0026amp; aaa(Abbreviated) PM   aaaa(Wide) PM   aaaaa(Narrow) p  Period* B, BB \u0026amp; BBB Abbreviated mid   BBBB Wide am, pm, midnight, noon, morning, afternoon, evening, night   BBBBB Narrow md  Period standalone* b, bb \u0026amp; bbb Abbreviated mid   bbbb Wide am, pm, midnight, noon, morning, afternoon, evening, night   bbbbb Narrow mid  Hour 1-12 h(Numeric: minimum digits) 10   hh(Numeric: 2 digits + zero padded) 10  Hour 0-23 H(Numeric: minimum digits) 22   HH(Numeric: 2 digits + zero padded) 22  Minute m(Numeric: minimum digits) 35   mm(Numeric: 2 digits + zero padded) 35  Second s(Numeric: minimum digits [0 to 59]) 28   ss(Numeric: 2 digits + zero padded [00 to 59]) 28  Fractional seconds S(Numeric: 1 digit [0 to 9]) 1   SS(Numeric: 2 digits + zero padded [00 to 99]) 13   SSS(Numeric: 3 digits + zero padded [000 to 9999 milliseconds]) 135  Zone z, zz \u0026amp; zzz(Short specific non location format) GMT+5   zzzz(Long specific non location format (fallback to OOOO)) GMT+05:30   Z, ZZ \u0026amp; ZZZ(ISO8601 basic format) +0530   ZZZZ(Long localized GMT format) GMT+05:30   ZZZZZ(ISO8601 extended format + Z indicator for offset 0 (= XXXXX)) +05:30   O, OO \u0026amp; OOO(Short localized GMT format) GMT+5   OOOO(Long localized GMT format) GMT+05:30     ","date":1560906065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560967805,"objectID":"baa5078a7e83dabd9720a0f1c6aaccef","permalink":"https://www.angularjswiki.com/angular/angular-date-pipe-formatting-date-times-in-angular-with-examples/","publishdate":"2019-06-19T01:01:05Z","relpermalink":"/angular/angular-date-pipe-formatting-date-times-in-angular-with-examples/","section":"angular","summary":"Angular date pipe used to format dates in angular according to the given date formats,timezone and country locale information.","tags":null,"title":"Angular Date Pipe \u0026 formatting dates in Angular with examples","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" In this tutorial I will explain how to use Font Awesome icons in Angular applications.\nFirst we will learn basic Font Awesome icons rendering in Angular and then we will go through some cool Font Awesome features like animations,layering,transforming etc..\nTable of Contents\r   Installing free version Font Awesome icons in Angular Installing pro version Font Awesome icons in Angular Global level configuration Project level configuration Using Font Awesome icons in Angular applications Using Font Awesome Icon library Available icon styles in Font Awesome Changing Font Awesome Icons color and stroke in Angular Changing default icon style in Font Awesome Angular Font Awesome icons features Changing size of Font Awesome icons in Angular Fixed width Font Awesome icons in Angular Rotating Font Awesome icons in Angular Mirroring Font Awesome icons in Angular Animating Font Awesome icons in Angular Pulled Font Awesome Icons Transform Font Awesome icons in Angular Combine two icons using Font Awesome mask Layering, Text, \u0026amp; Counters Font Awesome icons Adding text to Font Awesome icons in Angular Adding counters to Font Awesome icons in Angular   \rInstalling free version Font Awesome icons in Angular To install Font Awesome icons in Angular applications use the below npm or yarn commands\nnpm install @fortawesome/fontawesome-svg-core npm install @fortawesome/free-brands-svg-icons npm install @fortawesome/free-regular-svg-icons npm install @fortawesome/free-solid-svg-icons npm install @fortawesome/angular-fontawesome yarn add @fortawesome/fontawesome-svg-core yarn add @fortawesome/free-brands-svg-icons yarn add @fortawesome/free-regular-svg-icons yarn add @fortawesome/free-solid-svg-icons yarn add @fortawesome/angular-fontawesome  Installing pro version Font Awesome icons in Angular To install pro version Font Awesome icons follow the below steps\n Configure npm registry to install icons from Font Awesome npm package. If you buy a license for Font Awesome icons you will be given an authentication token through which you can set your npm registry.  This configuration can be done at global level or per project level\nGlobal level configuration To use Font Awesome icons across all the angular projects add @fortawesome scope to use Font Awesome pro npm package source i.e., npm.fontawesome.com\nnpm config set \u0026quot;@fortawesome:registry\u0026quot; https://npm.fontawesome.com/ \u0026amp;\u0026amp; \\ npm config set \u0026quot;//npm.fontawesome.com/:_authToken\u0026quot; TOKEN  TOKEN will be given when you buy a professional license.\nProject level configuration To use Font Awesome icons in a single project create a .npmrc file at project root level and set the below configuration\n@fortawesome:registry=https://npm.fontawesome.com/ //npm.fontawesome.com/:_authToken=TOKEN  After the configurations install the pro Font Awesome icons by using below npm commands\nnpm install --save-dev @fortawesome/fontawesome-pro npm install @fortawesome/pro-solid-svg-icons npm install @fortawesome/pro-regular-svg-icons npm install @fortawesome/pro-light-svg-icons  Using Font Awesome icons in Angular applications We can use Font Awesome icons in Angular applications two ways depending upon our requirements\n Using Explicitly in Component Using Icon library  Steps to use Font Awesome icons at component level\n In app.module.ts file import FontAwesomeModule from @fortawesome package as shown below\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'  And then add FontAwesomeModuel in imports array as shown below\n  @NgModule({ declarations: [ AppComponent, FontawesomeDemoComponent ], imports: [ BrowserModule, AppRoutingModule, FontAwesomeModule ], providers: [], bootstrap: [AppComponent] })  I have created a component called FontAwesomeDemo in my angular application to use Font Awesome icons\nImport the required icons from @fortawesome/free-solid-svg-icons file as shown below. In this example I am importing Film Icon.\nimport { Component, OnInit } from '@angular/core'; import { faFilm } from '@fortawesome/free-solid-svg-icons'; @Component({ selector: 'app-fontawesome-demo', templateUrl: './fontawesome-demo.component.html', styleUrls: ['./fontawesome-demo.component.scss'] }) export class FontawesomeDemoComponent implements OnInit { filmIcon = faFilm; constructor() { } ngOnInit() { } }  I have created a variable called coffeeIcon and assign it to the faCoffee imported from free svg icons package.\nIn the component html render using fa-icon selector show below\n\u0026lt;fa-icon [icon]=\u0026quot;filmIcon\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rfontawesome film icon\r\r\rThis approach is good when you are using Font Awesome icons in a single component. But most of the times this is not the case We will be using icons across the applications.\nSo each time importing icons in individual components is not a good idea.\nThat\u0026rsquo;s where Icon library very useful.\nWe can import all necessary icons in one place and use them across the application. Go through the below example\nUsing Font Awesome Icon library To use Font Awesome icons across the application follow the below steps.\n In app.module.ts file Import { FontAwesomeModule } from \u0026lsquo;@fortawesome/angular-fontawesome\u0026rsquo; Next add FontAwesomeModule to imports array as shown above. To use the icon library Import { library } from \u0026lsquo;@fortawesome/fontawesome-svg-core\u0026rsquo; Import required icons for example { faFilm } from \u0026lsquo;@fortawesome/free-solid-svg-icons\u0026rsquo; And finally Add them the library with library.add(faFilm) Ideally we will be using more than one icon, so to add multiple icons just pass them to library.add method as comma separated values.  import { BrowserModule } from '@angular/platform-browser'; import { NgModule } from '@angular/core'; import { AppComponent } from './app.component'; import { FontAwesomeModule } from '@fortawesome/angular-fontawesome'; import { library } from '@fortawesome/fontawesome-svg-core'; import { faFilm } from '@fortawesome/free-solid-svg-icons'; @NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, FontAwesomeModule ], providers: [], bootstrap: [AppComponent] }) export class AppModule { constructor() { library.add(faFilm); } }  To add the multiple icons to Font Awesome library use the following code snippet.\nimport { faFilm } from '@fortawesome/free-solid-svg-icons'; import { faFish } from '@fortawesome/free-solid-svg-icons'; //Adding to the library library.add(faFilm,faFish);  After setting up library icons now we can use icons directly in our component file using their name as shown below\n\u0026lt;fa-icon icon=\u0026quot;film\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  The default icon style in Font Awesome is \u0026lsquo;fas\u0026rsquo; i.e., font awesome solid style.\nIf you want to change the icon style we can pass the style to icon attribute as shown below. (You need to import corresponding icon style)\n\u0026lt;fa-icon [icon]=\u0026quot;['far', 'film']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  far means font awesome regular styles.\nAs the icons are not managed by component file, if you remove the icons from library at app module level the components which are using those icons will break.\nIf you want to use all available icons, You can add them to library as shown below\nimport { library } from '@fortawesome/fontawesome-svg-core'; import { fas } from '@fortawesome/free-solid-svg-icons'; import { far } from '@fortawesome/free-regular-svg-icons'; library.add(fas, far);  Here I am adding bothe regular and solid styles to the library. Now we can use all free icons within our project.\nThe only disadvantage of this approach is angular project bundle size will increase.\nSo it is better to add necessary icons to the library instead of adding all icons.\nAvailable icon styles in Font Awesome There are four different types of icon styles available in Font Awesome\n regular icons (imported from @fortawesome/free-solid-svg-icons) solid icons (imported from @fortawesome/free-regular-svg-icons) brand icons (imported from @fortawesome/free-brands-svg-icons) pro light icons (imported from @fortawesome/pro-light-svg-icons)  To use regular icons use the prefix \u0026lsquo;far\u0026rsquo;\n\u0026lt;fa-icon [icon]=\u0026quot;['far', 'bell']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  To use solid icons use the prefix \u0026lsquo;fas\u0026rsquo;\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'bell']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  To use brand icons such as twitter,facebook etc use the prefix \u0026lsquo;fab\u0026rsquo;\n\u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'twitter']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'facebook']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rfontawesome brand icons\r\r\rTo use the pro only light icons use the prefix \u0026lsquo;fal\u0026rsquo;\n\u0026lt;fa-icon [icon]=\u0026quot;['fal', 'calendar']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  In some cases we might need to add same icon from different kinds of styles.\nTo use same icon from multiple styles, we have to import icons using alias names as shown below.\nimport { faBell as farBell } from '@fortawesome/free-regular-svg-icons'; import { faBell as fasBell } from '@fortawesome/free-solid-svg-icons'; library.add(farBell, fasBell);  Now we can use bell icon in our component file as shown below\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'bell']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['far', 'bell']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rRegular vs solid icons\r\r\rChanging Font Awesome Icons color and stroke in Angular To change the Font Awesome Icons color and stroke we can use style attribute of fa-icon selector as shown below\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'film']\u0026quot; [styles]=\u0026quot;{'stroke': 'red', 'color': 'red'}\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  Changing default icon style in Font Awesome Angular To change the default icon style in Font Awesome we have to inject FaIconService and change the defaultPrefix property as shown below\nThe default icon style in Font Awesome is fas\nimport { FaIconService } from '@fortawesome/angular-fontawesome'; export class AppComponent { constructor(private faIconService: FaIconService) { this.faIconService.defaultPrefix = 'far'; } }  Font Awesome icons features Angular Font Awesome icons comes up with useful features like\n Changing icons size Fixed width icons Rotating icons Mirroring icons Animating icons Adding border to the icons Pulled icons Changing default styles of icons like color and stroke  Changing size of Font Awesome icons in Angular We can change the size of Font Awesome icons in Angular using size property of fa-icon selector.\nNormally Font Awesome icons inherit the size of parent container. By using size property we can relatively increase or decrease the size of icons with respect to the inherited font-size.\n\u0026lt;div style=\u0026quot;font-size:15px;color:red\u0026quot;\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;xs\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;sm\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;lg\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;2x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;3x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;5x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;6x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;7x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'angular']\u0026quot; size=\u0026quot;10x\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/div\u0026gt;  \r\r\rfontawesome icon different sizes\r\r\rFixed width Font Awesome icons in Angular Font Awesome icons contains more than 1500+ free icons and 3500+ pro icons. But all the icons are not of same size.\nTo force the icons to render in a fixed size we can use fixedWidth property of \u0026lt;fa-icon\u0026gt;\nThis fixedWidth property is very useful when we want vertically align a series of icons in a list or navigation menu.\nTo understand it further I have added android,apple brand icons which are of different width and rendered them normally and with fixedWidth.\nI have added background color to Font Awesome icons for visual indication of icons width.\n\u0026lt;div style=\u0026quot;font-size:5em\u0026quot;\u0026gt; \u0026lt;fa-icon class=\u0026quot;normal\u0026quot; [icon]=\u0026quot;['fab', 'android']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;fa-icon class=\u0026quot;normal\u0026quot; [icon]=\u0026quot;['fab', 'apple']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;fa-icon class=\u0026quot;fixed\u0026quot; [icon]=\u0026quot;['fab', 'android']\u0026quot; [fixedWidth]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;fa-icon class=\u0026quot;fixed\u0026quot; [icon]=\u0026quot;['fab', 'apple']\u0026quot; [fixedWidth]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/div\u0026gt; //Adding background color to see the width of the icons .normal{ background-color: red; color:white; } .fixed{ background-color: red; color:white; }  \r\r\rfixed width fontawesome icons\r\r\rAs you can see, the icons rendered with fixedWidth are vertically aligned with same width\nOften in our projects we might need to rotate,flip or mirror an icon depending upon the project design.\nFont Awesome angular comes up with handy utilities to help us in such scenarios.\nRotating Font Awesome icons in Angular We can rotate the Font Awesome icons in Angular using rotate property of \u0026lt;fa-icon\u0026gt;\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; rotate=\u0026quot;90\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; rotate=\u0026quot;180\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; rotate=\u0026quot;270\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rRotating fontawesome icons\r\r\rMirroring Font Awesome icons in Angular We can mirror the Font Awesome icons using flip property as shown below\nAllowed values for flip property are\n horizontal : mirrors icon horizontally vertical : mirrors icon vertically both : mirrors icon vertically and horizontally (requires 5.7.0 or greater)  \u0026lt;h3\u0026gt;horizontal\u0026lt;/h3\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; flip=\u0026quot;horizontal\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt;\u0026lt;br/\u0026gt; \u0026lt;h3\u0026gt;Vertically\u0026lt;/h3\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;\u0026lt;br/\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; flip=\u0026quot;vertical\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt;\u0026lt;br/\u0026gt; \u0026lt;h3\u0026gt;Both Vertical and horizontal\u0026lt;/h3\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; flip=\u0026quot;both\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rMirroring fontawesome icons\r\r\rAnimating Font Awesome icons in Angular One of the beautiful features of Font Awesome icons is the ability to add animation to the icons.\nThis feature very useful when we want to add loading or status communicating symbols.\nIn Font Awesome Angular we can use spin and pulse to animate the icons.\nHave a look at the rotating fan icon\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'fan']\u0026quot; [spin]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'fan']\u0026quot; [pulse]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  And spinner and sync icons are usually used along with animations.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'spinner']\u0026quot; [spin]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'spinner']\u0026quot; [pulse]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'sync']\u0026quot; [spin]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'sync']\u0026quot; [pulse]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;   The real fun is we can bind the spin and pulse values to angular component variables. As shown below\nI have created a variable called isAnimated and binding it to the fa-icon spin property. On clicking the icon Iam toggling the isAnimated value\n\u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'volleyball-ball']\u0026quot; [spin]=\u0026quot;isAnimated\u0026quot; (click)=\u0026quot;isAnimated=!isAnimated\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'walking']\u0026quot; [spin]=\u0026quot;isAnimated\u0026quot; (click)=\u0026quot;isAnimated=!isAnimated\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'biking']\u0026quot; [spin]=\u0026quot;isAnimated\u0026quot; (click)=\u0026quot;isAnimated=!isAnimated\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'car-crash']\u0026quot; [spin]=\u0026quot;isAnimated\u0026quot; (click)=\u0026quot;isAnimated=!isAnimated\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'fighter-jet']\u0026quot; [spin]=\u0026quot;isAnimated\u0026quot; (click)=\u0026quot;isAnimated=!isAnimated\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt;   Pulled Font Awesome Icons Usually notes and tips are wrapped around the single quotes or double quotes to give us some visual distinction.\nWe can use pull property of Font Awesome angular to wrap text around icons.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'quote-left']\u0026quot; pull=\u0026quot;left\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; If You Are Working On Something That You Really Care About, You Donât Have To Be Pushed. The Vision Pulls You \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'quote-right']\u0026quot; pull=\u0026quot;right\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  The allowed values of pull are left,right.\n\r\r\rfontawesome pulled icons\r\r\rTransform Font Awesome icons in Angular we can scale,position,flip and rotate icons using transform attribute of Font Awesome selector in Angular.\nAnd further we can combine them for some beautiful effects.\nTo scale Font Awesome icons using transform attribute use shrink-x or grow-x. Where x is any numeric value including decimals.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;shrink-5\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;grow-5\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt;  \r\r\rscaling fontawesome icons\r\r\rTo position the icons i.e., to move icons up, down, left, or right, use up-x, down-x, left-x, and right-x where x any numeric value, including decimals.\n \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;up-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;left-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;down-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;right-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rfontawesome position icons\r\r\rNow we will combine both position and scaling as shown below.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;shrink-10 up-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;shrink-10 down-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;shrink-10 left-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;shrink-10 right-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rpositioning fontawesome icons\r\r\rTo rotate the icons using Font Awesome transform property use rotate-x. Where x is degrees to rotate and negative values also allowed.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;rotate-90\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;rotate--90\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;rotate-180\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;rotate-270\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rfontawesome icons transform rotate\r\r\rWe can bind rotate values to our component variables to create animatation effect. Have a look at the below jumping horse animation.\n \u0026lt;fa-icon size=\u0026quot;5x\u0026quot; [icon]=\u0026quot;['fas', 'horse']\u0026quot; transform=\u0026quot;rotate-{{rotation}}\u0026quot;\u0026gt; \u0026lt;/fa-icon\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;input type='range' min=\u0026quot;-15\u0026quot; max=\u0026quot;0\u0026quot; [value]=\u0026quot;rotation\u0026quot; (input)=\u0026quot;rotation=$event.target.value\u0026quot;/\u0026gt;  I have created a range input with minimum value as -15 and maximum value as 0. And bound it to rotation value of horse icon.\nThe horse icon will jump from -15 to 0 angle whenever we change the range.\nTo mirror or flip the icons we can use flip-h (horizontal) or flip-v (vertical) or we can use both flip-h flip-v to flip both horizontally and vertically.\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;flip-h\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;flip-v\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;flip-v flip-h\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rtransform fontawesome icons flipping\r\r\rWe can use all of them in one tranform as shown below\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'snowboarding']\u0026quot; transform=\u0026quot;flip-h rotate-90 shrink-10 up-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  \r\r\rTransform fontawesome icons\r\r\rCombine two icons using Font Awesome mask We can combine two icons into one single color icons using mask property for fa-icon as shown below\n\u0026lt;fa-icon [icon]=\u0026quot;['fas', 'headphones']\u0026quot; transform=\u0026quot;shrink-6\u0026quot; [mask]=\u0026quot;['fas', 'square']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'pencil-alt']\u0026quot; transform=\u0026quot;shrink-6\u0026quot; [mask]=\u0026quot;['fas', 'comment']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt;  mask icon i.e., outer icon acts like background to the actual icon as shown below. transform property will be applied on actual icon.\nIn the above example headphones and pencil-alt are actual icons. Whereas square and comment icons acts like background.\n\r\r\rmasking fontawesome icons\r\r\rLayering, Text, \u0026amp; Counters Font Awesome icons Font Awesome layers have some cool features like\n we can place multiple icons on top of each other. We can add text on top of icons. We can add counters to the icons.  Angular Font Awesome has a selector called fa-layers which is used to place icons on top of each other.\nWe will try to place twitter icon on top of square icon. To achieve this use the below code snippet\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'square']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'twitter']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  The above code first renders square icon (layer one) on top of that it will add one more layer with twitter icon.\nBut if you see the output you won\u0026rsquo;t see anything other than square icon because both icon layers are of same color.\nSo if you give some other color to the twitter icons it will be visible\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'square']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fab', 'twitter']\u0026quot; style=\u0026quot;color:yellow\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  Or instead of giving color you can use inverse attribute to create knock-out looking effect.\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'square']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [inverse]=\u0026quot;true\u0026quot; [icon]=\u0026quot;['fab', 'twitter']\u0026quot; \u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  Further we can use transform to shrink and position the twitter icon exactly middle of square icon.\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'square']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [inverse]=\u0026quot;true\u0026quot; [icon]=\u0026quot;['fab', 'twitter']\u0026quot; transform=\u0026quot;right-1 shrink-5\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  \r\r\rfontawesome icons layers\r\r\rNow we will see how to combine more than two icons into one icon using Font Awesome layers\n \u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'play']\u0026quot; transform=\u0026quot;rotate--90 grow-2\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [inverse]=\u0026quot;true\u0026quot; [icon]=\u0026quot;['fas', 'sun']\u0026quot; transform=\u0026quot;shrink-10 up-2\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [inverse]=\u0026quot;true\u0026quot; [icon]=\u0026quot;['fas', 'moon']\u0026quot; transform=\u0026quot;shrink-11 down-4.2 left-4\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [inverse]=\u0026quot;true\u0026quot; [icon]=\u0026quot;['fas', 'star']\u0026quot; transform=\u0026quot;shrink-11 down-4.2 right-4\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  I am placing sun,moon,star on top of rotated play icon (i.e., triangle). I have used transform property to align them properly as shown below\n\r\r\rfontawesome multiple icons\r\r\rPlacing multiple icons on top of each other has several real world use cases.\nFor example banning cellphones and camera symbols icons.\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'camera']\u0026quot; transform=\u0026quot;shrink-7\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'ban']\u0026quot; style=\u0026quot;color:red\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'mobile-alt']\u0026quot; transform=\u0026quot;shrink-7\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'ban']\u0026quot; style=\u0026quot;color:red\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;/fa-layers\u0026gt;  \r\r\rfontawesome ban icons\r\r\rAdding text to Font Awesome icons in Angular To add text to the icon we can use fa-layers-text selector inside fa-layer as shown below\nHere we are adding date to the calendar icons using fa-layer-text.\n\u0026lt;fa-layers\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'calendar']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-layers-text content=\u0026quot;16\u0026quot; style=\u0026quot;color: white;font-weight: bold\u0026quot; transform=\u0026quot;shrink-5 down-3\u0026quot;\u0026gt;\u0026lt;/fa-layers-text\u0026gt; \u0026lt;/fa-layers\u0026gt;  \r\r\rfontawesome icons layer text\r\r\rAdding counters to Font Awesome icons in Angular To add counters to Font Awesome icons in Angular we can use fa-layers-counter along with fa-layer.\nThis feature very useful while showing notification counters or email counters.\n\u0026lt;fa-layers size=\u0026quot;5x\u0026quot;\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'envelope']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-layers-counter content=\u0026quot;100+\u0026quot;\u0026gt;\u0026lt;/fa-layers-counter\u0026gt; \u0026lt;/fa-layers\u0026gt; \u0026lt;fa-layers size=\u0026quot;5x\u0026quot;\u0026gt; \u0026lt;fa-icon [icon]=\u0026quot;['fas', 'bell']\u0026quot;\u0026gt;\u0026lt;/fa-icon\u0026gt; \u0026lt;fa-layers-counter content=\u0026quot;\u0026quot;\u0026gt;\u0026lt;/fa-layers-counter\u0026gt; \u0026lt;/fa-layers\u0026gt;  \r\r\rfontawesome icons layer counter\r\r\r","date":1560042065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1560086151,"objectID":"a857f183cf89cc390b0da294380d11d1","permalink":"https://www.angularjswiki.com/angular/how-to-use-font-awesome-icons-in-angular-applications/","publishdate":"2019-06-09T01:01:05Z","relpermalink":"/angular/how-to-use-font-awesome-icons-in-angular-applications/","section":"angular","summary":"Step by step tutotial to use Font Awesome icons in Angular applications","tags":null,"title":"How To Use Font Awesome icons in Angular Applications","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular flex layout features divided into two main categories\n Static API Responsive API  Each API has its own directives or APIs which can be applied on flexbox container or flexbox child elements.\nIn this section we will learn about basic flex layout directives\nAngular flex layout directives for flexbox containers The following API or directives are used on flexbox container\n fxLayout fxLayoutGap fxLayoutAlign  fxLayout  fxLayout is a directive used to define the layout of the HTML elements. i.e., it decides the flow of children elements within a flexbox container fxLayout should be applied on the parent DOM element i.e., flexbox container.And fxLayout directive case sensitive. The allowed values of fxLayout are row,coumn,row-reverse,column-reverse.  \u0026lt;div fxLayout=\u0026quot;row\u0026quot; fxLayout.xs=\u0026quot;column\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;child-1\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026quot;child-2\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;  fxLayoutGap fxLayoutGap is a directive that defines the gap between the children items within a flexbox container.\n\u0026lt;div fxLayoutGap=\u0026quot;5px\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  fxLayoutAlign fxLayoutAlign directive defines alignment of children element within the flexbox parent container.\nWe can set the alignment of both main-axis and cross axis as shown below.\n\u0026lt;div fxLayout=\u0026quot;row\u0026quot; fxLayoutAlign=\u0026quot;\u0026lt;main-axis\u0026gt; \u0026lt;cross-axis\u0026gt;\u0026quot; \u0026gt; \u0026lt;/div\u0026gt;  You will understand it further while going through the example.\nAngular flex layout directives for flexbox children: The following directives are applicable to flexbox children elements\n fxFlex fxFlexOrderfx FlexOffset fxFlexAlign fxFlexFill  fxFlex This markup specifies the resizing of its host element within a flexbox container flow\n\u0026lt;div fxFlex=\u0026quot;1 2 calc(15em + 20px)\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  fxFlexOrder Defines the order of a flexbox item\n\u0026lt;div fxFlexOrder=\u0026quot;2\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  fxFlexOffset Offset a flexbox item in its parent container flow layout\n\u0026lt;div fxFlexOffset=\u0026quot;20px\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  fxFlexAlign Works like fxLayoutAlign, but applies only to a single flexbox item, instead of all of them\n\u0026lt;div fxFlexAlign=\u0026quot;center\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;  fxFlexFill Maximizes width and height of element in a layout container\n\u0026lt;div fxFlexFill\u0026gt;\u0026lt;/div\u0026gt;  Angular Flex Layout desktop API Angular flex static API contains a list HTML attributes that can be applied on layout containers and elements to build responsive HTML layouts.\nIt is called as desktop API becauseÂ it provides UX that will adjust element sizes and positions as the browser window width changes.\nWe will understand each one of them using simple examples.\nAngular Flex layout Examples Angular Flex layout has four differenct types of layout options as listed below\n row column row-reverse column-reverse  Angular Flex Layout row example After installing angular flex layout, we will create a component called angular-flex-layout in our project.\nng generate component angular-flex-layout  And in the template file add the below code\n\u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;flex-container\u0026quot; fxLayout=\u0026quot;row\u0026quot;\u0026gt; \u0026lt;mat-card class=\u0026quot;child-1\u0026quot;\u0026gt;1. One\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-2\u0026quot;\u0026gt;2. Two\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-3\u0026quot;\u0026gt;3. Three\u0026lt;/mat-card\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;  Add fxLayout attribute to the flexbox container.\nTo understand the behaviour of flexbox items we will background color to to the children element.\nHere I have used material card as flexbox items.\n.child-1{ background-color: orange; } .child-2{ background-color: yellow; } .child-3{ background-color: green; } .container{ margin: 15px; height:200px; border:2px solid red; }  The above flex layout code generates output as shown below\nOne thing you need to understand is alignment of elements.\nElements are positioned across main axis (horizontal incase of row layout) and cross axis (vertical incase of row layout)\nIn angular flex layout row alignment by default elements are positioned at start of the flex container and expanded (streched) vertically as shown above.\nWe can chane this alignment using fxLayoutAlign API.\nfxLayoutAlign is an API used to change the alignment of children elements in flex box container.\nWe can give different kinds of values to fxLayoutAlign attribute as shown below.\nMain Axis values\n start center end space-around space-between space-evenly  Cross Axis values\n start center end stretch  See the below flex layout row demo to understand how to align children elements inside the flex box container.\n Angular Flex Layout column example Now we will go through the column layout example.\nJust add fxLayoutÂ attribute value as columnÂ as shown below.\n\u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;flex-container\u0026quot; fxLayout=\u0026quot;column\u0026quot;\u0026gt; \u0026lt;mat-card class=\u0026quot;child-1\u0026quot;\u0026gt;1. One\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-2\u0026quot;\u0026gt;2. Two\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-3\u0026quot;\u0026gt;3. Three\u0026lt;/mat-card\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;  Similarly we can change the alignment of children element using fxLayoutAlign attribute.\n Angular Flex Layout responsive API Using Angular flex layout responsive API engine we can easily change the UX layout to adopt different sizes devices.\nResponsive engine has some predefined breakpoint aliasesÂ with its mediaquery values.\nWe have to extend the static flex layout API by using these breakpoint aliases.\nList of Available Breakpoints in Angular Flex Layout Go through the below list of breakpoint aliases and its media query values.\n   breakpoint mediaQuery     xs: extra small \u0026lsquo;screen and (max-width: 599px)\u0026rsquo;   sm: small medium \u0026lsquo;screen and (min-width: 600px) and (max-width: 959px)\u0026rsquo;   md: medium \u0026lsquo;screen and (min-width: 960px) and (max-width: 1279px)\u0026rsquo;   lg: large \u0026lsquo;screen and (min-width: 1280px) and (max-width: 1919px)\u0026rsquo;   xl: extra large \u0026lsquo;screen and (min-width: 1920px) and (max-width: 5000px)\u0026rsquo;   lt-sm: less than small medium \u0026lsquo;screen and (max-width: 599px)\u0026rsquo;   lt-md: less than medium \u0026lsquo;screen and (max-width: 959px)\u0026rsquo;   lt-lg: less than large \u0026lsquo;screen and (max-width: 1279px)\u0026rsquo;   lt-xl: less than extra large \u0026lsquo;screen and (max-width: 1919px)\u0026rsquo;   gt-xs: greater than extra large \u0026lsquo;screen and (min-width: 600px)\u0026rsquo;   gt-sm: greater than small medium \u0026lsquo;screen and (min-width: 960px)\u0026rsquo;   gt-md: greater than medium \u0026lsquo;screen and (min-width: 1280px)\u0026rsquo;   gt-lg: greater than large \u0026lsquo;screen and (min-width: 1920px)\u0026rsquo;    Now we will take an example of row layout\nUsually the elements in row layout are aligned horizontally as explained above.\nBut in mobile devices we cannot show all the elements in row layout as the width of the mobile device is small.\nIn this case we need to change flexbox elements layout from row to column incase of mobile devices.\nThe suitable breakpoint aliase is extra small i.e., xs maximum width is 599px.\n\u0026lt;div class=\u0026quot;container\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;flex-container\u0026quot; fxLayout=\u0026quot;row\u0026quot; fxLayout.xs=\u0026quot;column\u0026quot;\u0026gt; \u0026lt;mat-card class=\u0026quot;child-1\u0026quot;\u0026gt;1. One\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-2\u0026quot;\u0026gt;2. Two\u0026lt;/mat-card\u0026gt; \u0026lt;mat-card class=\u0026quot;child-3\u0026quot;\u0026gt;3. Three\u0026lt;/mat-card\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;  I have added an extra attribute fxLayout.xs with values as column.\nSo basically we are giving instructions to flex layout engine saying if the device width is extra small follow the column layout otherwise default layout i.e., row layout.\n ","date":1556044200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556047800,"objectID":"01b417f19c86d4a9c2a0dd0654c52c30","permalink":"https://www.angularjswiki.com/flexlayout/basics/","publishdate":"2019-04-24T00:00:00+05:30","relpermalink":"/flexlayout/basics/","section":"flexlayout","summary":"Tutorial explains basics of Angular flex layout and flex layout directives with examples","tags":null,"title":"Angular flex layout basics","type":"docs"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular Currency Pipe is one of the bulit in pipe in Angular used to format currency value according to given country code,currency,decimal,locale information.\nTable of Contents\r   Angular Currency Pipe Syntax Angular Currency Pipe example Angular Currency Pipe without symbol Angular Currency Pipe No Decimal Angular Currency Pipe example with locale Display Currency symbol to the right using Angular Currency Pipe Creating Custom Angular Currency Pipe List of All Countries currency codes of Angular Currency Pipes   \rAngular Currency Pipe Syntax Angular Currency Pipe takes currency value as input and currencyCode,display,digitsInfo and locale as parameters as shown below\n{{currency_value|currency[:currencyCode[:display[:digitsInfo[:locale]]]]}}    Parameter Description     currencyCode ISO 4217 currency code.Of type string default value undefined,Optional   display We can display Currency 'symbol' or 'code' or 'symbol-narrow' or our own string.Of type string, Optional Default value is 'symbol'   digitsInfo Represents Decimal representation of currency value.Of type string default value undefined,Optional   locale represents locale format rules. Default value is our project locale if set or undefined.Optional      Angular Currency Pipe example We will go through few examples to understand Angular Currency Pipe.For example we have Currency of Value 100.23.\n\u0026lt;!--output '$100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency}}\u0026lt;/p\u0026gt; \u0026lt;!--output 'â¹100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'INR'}}\u0026lt;/p\u0026gt;  If you are not passing any parameters then it displays the default currency as USD i.e., dollors.\nWe can change this default currency as explained below.\nIf we are passing currency code to the angular currency pipe.It will display the corresponding default currency symbol.\nI am passingÂ currency code as \u0026ldquo;INR\u0026rdquo; and Rupee symbol will be displayed.\nAngular Currency Pipe without symbol If you want to display your own name instead of default currency symbol you have to pass display parameter.\nThe display parameter can be \u0026ldquo;code\u0026rdquo; (currencycode will be displayed) or \u0026ldquo;symbol\u0026rdquo; or \u0026ldquo;symbol-narrow\u0026rdquo; or any other custom value.\n\u0026lt;!--output 'INR100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'INR':'code'}}\u0026lt;/p\u0026gt; \u0026lt;!--output 'CA$100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'CAD':'symbol'}}\u0026lt;/p\u0026gt; \u0026lt;!--output '$100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value |currency:'CAD':'symbol-narrow'}}\u0026lt;/p\u0026gt; \u0026lt;!--output 'â¹100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value |currency:'INR':'symbol-narrow'}}\u0026lt;/p\u0026gt; \u0026lt;!--output 'Indian Rupee100.23'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'INR':'Indian Rupee'}}\u0026lt;/p\u0026gt;  Few countries likeÂ Canada have two currency codes like symbolÂ CA$ and symbol-narrow $. If the country locale does not have symbol-narrow, default symbol will be displayed.\nIndian rupee does not have symbol-narrow so the default rupee symbol displayed.\nIf you want to display your own custom name as symbol you can pass as a paramter as shown in last example.I am passing \u0026#8216;Indian Rupee\u0026#8217; as display parameter.\nAngular Currency Pipe No Decimal If you want to customize the decimal points of currency value. You need to pass digitInfo parameter.\nThe syntax of the digitInfo parameter is \u0026ldquo;numberOfInteger:minimumFractions-maxFractions\u0026rdquo;.\n\u0026lt;!--output 'â¹0,100.35'--\u0026gt; \u0026lt;p\u0026gt;{{Value |currency:'INR':'symbol':'4.2-2'}}\u0026lt;/p\u0026gt; \u0026lt;!--output 'â¹100.2'--\u0026gt; \u0026lt;p\u0026gt;{{Value |currency:'INR':'symbol':'3.1-1'}}\u0026lt;/p\u0026gt;  The first example displayed as \u0026ldquo;â¹0,100.35\u0026rdquo; because we are telling the currency pipe to display at least 4 digits. Remaining one digit adjusted with 0.\nAnd after the decimal point minimum 2 fractions and maximum 2 fractions are displayed.\nIn the second example I am passing fractions as \u0026lsquo;1-1\u0026rsquo;. So it displayed as \u0026ldquo;â¹100.2\u0026rdquo;.\nAngular Currency Pipe by default displays two decimal points irrespective of currency type. If currency is 100.\n\u0026lt;!--â¹100.00--\u0026gt; \u0026lt;p\u0026gt;{{IntegerValue |currency:'INR':'symbol'}}\u0026lt;/p\u0026gt;  To remove decimal points from the Angular currency pipe, we need to passÂ digitInfo parameter fractions as zero.\nâ¹100 \u0026lt;p\u0026gt;{{IntegerValue |currency:'INR':'symbol':'3.0'}}\u0026lt;/p\u0026gt;  \rFew country currencies does not support cent values in that case decimal points are truncated. For exampleÂ Chilean peso Currency CLP does not support cents. So if the currency value is 100.23. It is displayed as 100.\n\r\rYou can see the below table for list of such countries.\nCLP100 \u0026lt;p\u0026gt;{{Value | currency:'CLP':'symbol'}}\u0026lt;/p\u0026gt;  Angular Currency Pipe example with locale We can pass local as parameter to Angular currency Pipe as shown below.\n\u0026lt;p\u0026gt;{{Value | currency:'CAD':'symbol':'4.2-2':'fr'}}\u0026lt;/p\u0026gt;  But the above code returns the error in console saying Missing locale data for the locale \u0026ldquo;fr\u0026rdquo;.\nWe are passing french locale information as \u0026ldquo;fr\u0026rdquo;. But in our application we dont have locale information for french.\nWe need to register the locale information.\nimport { registerLocaleData } from '@angular/common'; import localeFr from '@angular/common/locales/fr'; registerLocaleData(localeFr, 'fr');  Follow the below steps to use Angular Currency Pipe with locale.\n Import theÂ registerLocaleData fromÂ @angular/common Import locale Information fromÂ @angular/common/locales/fr. And Finally register the information usingÂ registerLocaleData method.  \u0026lt;!--output '0 100,23 $CA'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'CAD':'symbol':'4.2-2':'fr'}}\u0026lt;/p\u0026gt; \u0026lt;!--output '100,23 $CA'--\u0026gt; \u0026lt;p\u0026gt;{{Value | currency:'CAD':'symbol':'3.2-2':'fr'}}\u0026lt;/p\u0026gt;  Display Currency symbol to the right using Angular Currency Pipe A lot of european countries use the currency symbol at the right side of currency value (France, Germany, Spain, Italy countries).\nIf you pass the locale information the symbol will be automatically displayed at the right side of value as shown in above french locale.\nBut the remaining currencies without locale still displays currency symbol to the left only.\nimport {NgModule, LOCALE_ID} from '@angular/core'; @NgModule({ providers: [{ provide: LOCALE_ID, useValue: 'fr' // 'de' for Germany, 'fr' for France ... }] })  Import LOCALE_ID from \u0026lsquo;@angular/core\u0026rsquo; and pass it to the provides as shown above.\nBut this will change the locale across the application. So this approach is acceptable only if your site is using single locale information.\nAnd the decission to show the currency symbol to the left or right should be based upon locale information only.\nSo its better to pass locale information to the Angular Currency Pipe whenever required.\nCreating Custom Angular Currency Pipe What if we want to change default parameters of Angular Currecny Pipe like default currency code,default currency symbol, default decimal locations and default locale?\nFor example we have a fixed currency format across the application as shown below.\n{{ Value | currency:'EUR':'symbol':'3.2-2':'fr' }} 100,23 â¬  Each time I do not want to pass the other parameters and set the above parameters as default parameters so that the below code should display the required format.\n{{ Value | currency }} 100,23 â¬  There is no way we can set the default parameters in Angular Currency Pipe. But we can define our own custom Angular currency Pipe to do the same.\nCreate a new file called custom.currencypipe.ts file and add the below code to it. You can change the paramters as per your requirements.\nimport { Pipe, PipeTransform } from '@angular/core'; import { formatCurrency, getCurrencySymbol } from '@angular/common'; @Pipe({ name: 'mycurrency', }) export class MycurrencyPipe implements PipeTransform { transform( value: number, currencyCode: string = 'EUR', display: | 'code' | 'symbol' | 'symbol-narrow' | string | boolean = 'symbol', digitsInfo: string = '3.2-2', locale: string = 'fr', ): string | null { return formatCurrency( value, locale, getCurrencySymbol(currencyCode, 'wide'), currencyCode, digitsInfo, ); } }  And after declaring _MyCurrencyPipe._Â Import it in app.module.ts file and add it in declaration array of _app.module.ts.Â _As shown below.\nimport {MycurrencyPipe} from './custom.currencypipe'; @NgModule({ declarations: [ MycurrencyPipe ]);  Now i can use my custom currency pipe as show below.\n{{ Value | mycurrency }} 100,23 â¬  List of All Countries currency codes of Angular Currency Pipes   Country Currency Angular Currency Pipe Code Eg: Result     Andorran peseta Currency {{Value|currency:\"ADP\":\"symbol\"}} ADP100   Afghan afghani Currency {{Value|currency:\"AFN\":\"symbol\"}} AFN100   Albanian lek Currency {{Value|currency:\"ALL\":\"symbol\"}} ALL100   Armenian dram Currency {{Value|currency:\"AMD\":\"symbol\"}} AMD100   Angolan kwanza Currency {{Value|currency:\"AOA\":\"symbol\"}} Kz100.00   Argentine peso Currency {{Value|currency:\"ARS\":\"symbol\"}} $100.00   Australian dollar Currency {{Value|currency:\"AUD\":\"symbol\"}} $100.00   Bosnia and Herzegovina convertible mark Currency {{Value|currency:\"BAM\":\"symbol\"}} KM100.00   Barbados dollar Currency {{Value|currency:\"BBD\":\"symbol\"}} $100.00   Bangladeshi taka Currency {{Value|currency:\"BDT\":\"symbol\"}} à§³100.00   Bahraini dinar Currency {{Value|currency:\"BHD\":\"symbol\"}} BHD100.000   Burundian franc Currency {{Value|currency:\"BIF\":\"symbol\"}} BIF100   Bermudian dollar Currency {{Value|currency:\"BMD\":\"symbol\"}} $100.00   Brunei dollar Currency {{Value|currency:\"BND\":\"symbol\"}} $100.00   Boliviano Currency {{Value|currency:\"BOB\":\"symbol\"}} Bs100.00   Brazilian real Currency {{Value|currency:\"BRL\":\"symbol\"}} R$100.00   Bahamian dollar Currency {{Value|currency:\"BSD\":\"symbol\"}} $100.00   Botswana pula Currency {{Value|currency:\"BWP\":\"symbol\"}} P100.00   Belarusian ruble Currency {{Value|currency:\"BYN\":\"symbol\"}} Ñ.100.00   Belarusian ruble Currency {{Value|currency:\"BYR\":\"symbol\"}} BYR100   Belize dollar Currency {{Value|currency:\"BZD\":\"symbol\"}} $100.00   Canadian dollar Currency {{Value|currency:\"CAD\":\"symbol\"}} $100.00   Swiss franc Currency {{Value|currency:\"CHF\":\"symbol\"}} CHF100.00   Unidad de Fomento Currency {{Value|currency:\"CLF\":\"symbol\"}} CLF100.0000   Chilean peso Currency {{Value|currency:\"CLP\":\"symbol\"}} $100   RenminbiRenminbi (Chinese) yuan Currency {{Value|currency:\"CNY\":\"symbol\"}} Â¥100.00   Colombian peso Currency {{Value|currency:\"COP\":\"symbol\"}} $100   Costa Rican colon Currency {{Value|currency:\"CRC\":\"symbol\"}} â¡100.00   Cuban convertible peso Currency {{Value|currency:\"CUC\":\"symbol\"}} $100.00   Cuban peso Currency {{Value|currency:\"CUP\":\"symbol\"}} $100.00   Czech koruna Currency {{Value|currency:\"CZK\":\"symbol\"}} KÄ100.00   Djiboutian franc Currency {{Value|currency:\"DJF\":\"symbol\"}} DJF100   Danish krone Currency {{Value|currency:\"DKK\":\"symbol\"}} kr100.00   Dominican peso Currency {{Value|currency:\"DOP\":\"symbol\"}} $100.00   Egyptian pound Currency {{Value|currency:\"EGP\":\"symbol\"}} EÂ£100.00   Spanish peseta Currency {{Value|currency:\"ESP\":\"symbol\"}} â§100   Euro Currency {{Value|currency:\"EUR\":\"symbol\"}} â¬100.00   Fijian dollarFiji dollar Currency {{Value|currency:\"FJD\":\"symbol\"}} $100.00   Falkland Islands pound Currency {{Value|currency:\"FKP\":\"symbol\"}} Â£100.00   Pound sterling Currency {{Value|currency:\"GBP\":\"symbol\"}} Â£100.00   Georgian lari Currency {{Value|currency:\"GEL\":\"symbol\"}} â¾100.00   Gibraltar pound Currency {{Value|currency:\"GIP\":\"symbol\"}} Â£100.00   Guinean franc Currency {{Value|currency:\"GNF\":\"symbol\"}} FG100   Guatemalan quetzal Currency {{Value|currency:\"GTQ\":\"symbol\"}} Q100.00   Guyanese dollar Currency {{Value|currency:\"GYD\":\"symbol\"}} $100   Hong Kong dollar Currency {{Value|currency:\"HKD\":\"symbol\"}} $100.00   Honduran lempira Currency {{Value|currency:\"HNL\":\"symbol\"}} L100.00   Croatian kuna Currency {{Value|currency:\"HRK\":\"symbol\"}} kn100.00   Hungarian forint Currency {{Value|currency:\"HUF\":\"symbol\"}} Ft100.00   Indonesian rupiah Currency {{Value|currency:\"IDR\":\"symbol\"}} Rp100   Israeli new shekel Currency {{Value|currency:\"ILS\":\"symbol\"}} âª100.00   Indian rupee Currency {{Value|currency:\"INR\":\"symbol\"}} â¹100.00   Iraqi dinar Currency {{Value|currency:\"IQD\":\"symbol\"}} IQD100   Iranian rial Currency {{Value|currency:\"IRR\":\"symbol\"}} IRR100   Icelandic krona Currency {{Value|currency:\"ISK\":\"symbol\"}} kr100   Italian lira Currency {{Value|currency:\"ITL\":\"symbol\"}} ITL100   Jamaican dollar Currency {{Value|currency:\"JMD\":\"symbol\"}} $100.00   Jordanian dinar Currency {{Value|currency:\"JOD\":\"symbol\"}} JOD100.000   Japanese yen Currency {{Value|currency:\"JPY\":\"symbol\"}} Â¥100   Cambodian riel Currency {{Value|currency:\"KHR\":\"symbol\"}} á100.00   Comoro franc Currency {{Value|currency:\"KMF\":\"symbol\"}} CF100   North Korean won Currency {{Value|currency:\"KPW\":\"symbol\"}} â©100   South Korean won Currency {{Value|currency:\"KRW\":\"symbol\"}} â©100   Kuwaiti dinar Currency {{Value|currency:\"KWD\":\"symbol\"}} KWD100.000   Cayman Islands dollar Currency {{Value|currency:\"KYD\":\"symbol\"}} $100.00   Kazakhstani tenge Currency {{Value|currency:\"KZT\":\"symbol\"}} â¸100.00   Lao kip Currency {{Value|currency:\"LAK\":\"symbol\"}} â­100   Lebanese pound Currency {{Value|currency:\"LBP\":\"symbol\"}} LÂ£100   Sri Lankan rupee Currency {{Value|currency:\"LKR\":\"symbol\"}} Rs100.00   Liberian dollar Currency {{Value|currency:\"LRD\":\"symbol\"}} $100.00   Lithuanian litas Currency {{Value|currency:\"LTL\":\"symbol\"}} Lt100.00   Luxembourg franc Currency {{Value|currency:\"LUF\":\"symbol\"}} LUF100   Latvian lats Currency {{Value|currency:\"LVL\":\"symbol\"}} Ls100.00   Libyan dinar Currency {{Value|currency:\"LYD\":\"symbol\"}} LYD100.000   Malagasy ariary Currency {{Value|currency:\"MGA\":\"symbol\"}} Ar100   Malagasy franc Currency {{Value|currency:\"MGF\":\"symbol\"}} MGF100   Myanmar kyat Currency {{Value|currency:\"MMK\":\"symbol\"}} K100   Mongolian tugrik Currency {{Value|currency:\"MNT\":\"symbol\"}} â®100   Mauritanian Ouguiya Currency {{Value|currency:\"MRO\":\"symbol\"}} MRO100   Mauritian rupee Currency {{Value|currency:\"MUR\":\"symbol\"}} Rs100   Mexican peso Currency {{Value|currency:\"MXN\":\"symbol\"}} $100.00   Malaysian ringgit Currency {{Value|currency:\"MYR\":\"symbol\"}} RM100.00   Namibian dollar Currency {{Value|currency:\"NAD\":\"symbol\"}} $100.00   Nigerian naira Currency {{Value|currency:\"NGN\":\"symbol\"}} â¦100.00   Nicaraguan cordoba Currency {{Value|currency:\"NIO\":\"symbol\"}} C$100.00   Norwegian krone Currency {{Value|currency:\"NOK\":\"symbol\"}} kr100.00   Nepalese rupee Currency {{Value|currency:\"NPR\":\"symbol\"}} Rs100.00   New Zealand dollar Currency {{Value|currency:\"NZD\":\"symbol\"}} $100.00   Omani rial Currency {{Value|currency:\"OMR\":\"symbol\"}} OMR100.000   Philippine peso Currency {{Value|currency:\"PHP\":\"symbol\"}} â±100.00   Pakistani rupee Currency {{Value|currency:\"PKR\":\"symbol\"}} Rs100   Polish zloty Currency {{Value|currency:\"PLN\":\"symbol\"}} zÅ100.00   Paraguayan guarani Currency {{Value|currency:\"PYG\":\"symbol\"}} â²100   Romanian leu Currency {{Value|currency:\"RON\":\"symbol\"}} lei100.00   Serbian dinar Currency {{Value|currency:\"RSD\":\"symbol\"}} RSD100   Russian ruble Currency {{Value|currency:\"RUB\":\"symbol\"}} â½100.00   Russian ruble Currency {{Value|currency:\"RUR\":\"symbol\"}} Ñ.100.00   Rwandan franc Currency {{Value|currency:\"RWF\":\"symbol\"}} RF100   Solomon Islands dollar Currency {{Value|currency:\"SBD\":\"symbol\"}} $100.00   Swedish krona/kronor Currency {{Value|currency:\"SEK\":\"symbol\"}} kr100.00   Singapore dollar Currency {{Value|currency:\"SGD\":\"symbol\"}} $100.00   Saint Helena pound Currency {{Value|currency:\"SHP\":\"symbol\"}} Â£100.00   Sierra Leonean leone Currency {{Value|currency:\"SLL\":\"symbol\"}} SLL100   Somali shilling Currency {{Value|currency:\"SOS\":\"symbol\"}} SOS100   Surinamese dollar Currency {{Value|currency:\"SRD\":\"symbol\"}} $100.00   South Sudanese pound Currency {{Value|currency:\"SSP\":\"symbol\"}} Â£100.00   Sao Tome/Principe Dobra Currency {{Value|currency:\"STD\":\"symbol\"}} STD100   Sao Tome/Principe Dobra Currency {{Value|currency:\"STN\":\"symbol\"}} Db100.00   Syrian pound Currency {{Value|currency:\"SYP\":\"symbol\"}} Â£100   Thai baht Currency {{Value|currency:\"THB\":\"symbol\"}} à¸¿100.00   Turkmenistani manat Currency {{Value|currency:\"TMM\":\"symbol\"}} TMM100   Tunisian dinar Currency {{Value|currency:\"TND\":\"symbol\"}} TND100.000   Tongan paanga Currency {{Value|currency:\"TOP\":\"symbol\"}} T$100.00   Turkish lira Currency {{Value|currency:\"TRL\":\"symbol\"}} TRL100   Turkish lira Currency {{Value|currency:\"TRY\":\"symbol\"}} âº100.00   Trinidad and Tobago dollar Currency {{Value|currency:\"TTD\":\"symbol\"}} $100.00   New Taiwan dollar Currency {{Value|currency:\"TWD\":\"symbol\"}} $100.00   Tanzanian shilling Currency {{Value|currency:\"TZS\":\"symbol\"}} TZS100   Ukrainian hryvnia Currency {{Value|currency:\"UAH\":\"symbol\"}} â´100.00   Ugandan shilling Currency {{Value|currency:\"UGX\":\"symbol\"}} UGX100   United States dollar Currency {{Value|currency:\"USD\":\"symbol\"}} $100.00   Uruguay Peso en Unidades Indexadas Currency {{Value|currency:\"UYI\":\"symbol\"}} UYI100   Uruguayan peso Currency {{Value|currency:\"UYU\":\"symbol\"}} $100.00   Uzbekistan som Currency {{Value|currency:\"UZS\":\"symbol\"}} UZS100   Venezuelan bolivar Currency {{Value|currency:\"VEF\":\"symbol\"}} Bs100.00   Vietnamese dong Currency {{Value|currency:\"VND\":\"symbol\"}} â«100   Vanuatu vatu Currency {{Value|currency:\"VUV\":\"symbol\"}} VUV100   CFA franc BEAC Currency {{Value|currency:\"XAF\":\"symbol\"}} FCFA100   East Caribbean dollar Currency {{Value|currency:\"XCD\":\"symbol\"}} $100.00   CFA franc BCEAO Currency {{Value|currency:\"XOF\":\"symbol\"}} CFA100   CFP franc (franc Pacifique) Currency {{Value|currency:\"XPF\":\"symbol\"}} CFPF100   Yemeni rial Currency {{Value|currency:\"YER\":\"symbol\"}} YER100   South African rand Currency {{Value|currency:\"ZAR\":\"symbol\"}} R100.00   Zambian kwacha Currency {{Value|currency:\"ZMK\":\"symbol\"}} ZMK100   Zambian kwacha Currency {{Value|currency:\"ZMW\":\"symbol\"}} ZK100.00   Zimbabwean dollar Currency {{Value|currency:\"ZWD\":\"symbol\"}} ZWD100     ","date":1549674065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549806049,"objectID":"c53740fd344cf1b00952215071cc7500","permalink":"https://www.angularjswiki.com/angular/angular-currency-pipe-formatting-currency-in-angular/","publishdate":"2019-02-09T01:01:05Z","relpermalink":"/angular/angular-currency-pipe-formatting-currency-in-angular/","section":"angular","summary":"Angular Currency Pipe is one of the bulit in pipe in Angular used to format currency value according to given country code,currency,decimal,locale information.","tags":null,"title":"Angular Currency Pipe \u0026 Formatting Currency In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" To capitalize first letter of each word in Angular use Angular\u0026rsquo;sÂ TitleCasePipe.We have to pass input to the titlecase pipe as shown below\n\u0026lt;p\u0026gt;{{'titleCasePipe capitalizes first letter of each word in angular' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- Output --\u0026gt; \u0026lt;!--TitleCasePipe Capitalizes First Letter Of Each Word In Angular--\u0026gt;  Angular TitleCasePipe is one of the built in pipes which converts text to titlecase.\nTable of Contents\r   Angular TitleCasePipe Syntax Angular TitleCasePipe Examples   \rAngular TitleCasePipe Syntax The syntax is very simple Just we need to pass input of type string to titlecase pipe\n{{ value_expression | titlecase }} And words in a text determined based upon theÂ white space delimiters such as space,tab orÂ line-feed character.\nAngular TitleCasePipe Examples We go through the differentÂ Angular TitleCasePipe examples to understand it further.\nWe will create a component called titlecase component in our Angular project. And test the different kind of inputs\n\u0026lt;p\u0026gt;{{'angular titlecase' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular Titlecase\u0026quot; --\u0026gt; \u0026lt;p\u0026gt;{{'anGuLaR tITLEcASE' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular Titlecase\u0026quot; --\u0026gt; \u0026lt;p\u0026gt;{{'angular title-case' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular Title-case\u0026quot; --\u0026gt; \u0026lt;p\u0026gt;{{'angular,titlecase' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular,titlecase\u0026quot; --\u0026gt; \u0026lt;p\u0026gt;{{'angular|titlecase' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular|titlecase\u0026quot; --\u0026gt; \u0026lt;p\u0026gt;{{'angular-titlecase' | titlecase}}\u0026lt;/p\u0026gt; \u0026lt;!-- output is \u0026quot;Angular-titlecase\u0026quot; --\u0026gt;  Even though if you pass mixed case text to Angular titlecase pipe, It will convert the first letter of each word to uppercase and remaining letters to lowercase.\nAnd the delimiter should be whitespace only. Commas,Pipes,hyphens etc are not considered asÂ delimiters.\nThat is why in above example \u0026lsquo;angular-titlecase\u0026rsquo; is displayed as \u0026ldquo;Angular-titlecase\u0026rdquo; instead of \u0026ldquo;Angular-Titlecase\u0026rdquo;\n","date":1549674065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1563819005,"objectID":"6fee164a17d76e6feb99e1a830a994e3","permalink":"https://www.angularjswiki.com/angular/how-to-capitalize-first-letter-of-each-word-in-angular/","publishdate":"2019-02-09T01:01:05Z","relpermalink":"/angular/how-to-capitalize-first-letter-of-each-word-in-angular/","section":"angular","summary":"To capitalize first letter of each word in Angular use Angular\u0026#039;s TitleCasePipe.We have to pass input to the titlecase pipe.","tags":null,"title":"Angular TitleCase Pipe:Capitalize First Letter Of Each Word In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":"Steps to delete a component in Angular\n Remove the import line reference from Angular app.module.ts file. Remove the component declaration from @NgModule declaration array inÂ app.module.ts file And then manually delete the component folder from Angular project. Finally Delete all the references of component manually from the Angular project.  In Angular CLI,there is no command available to delete a component created by Angular CLI as of now.\nThere is noÂ ng delete component command as part of Angular CLI.\nIf you want to know what will happen at the time of component creation. you can try --dry--run flag\nng generate component test --dry--run CREATE src/app/test/test.component.html (23 bytes) CREATE src/app/test/test.component.spec.ts (614 bytes) CREATE src/app/test/test.component.ts (261 bytes) CREATE src/app/test/test.component.css (0 bytes) UPDATE src/app/app.module.ts (914 bytes) NOTE: The \u0026quot;dryRun\u0026quot; flag means no changes were made.  No changes being made to the project.\n","date":1549587665,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549687477,"objectID":"2472932f14e00b213d56acc47c8b6f31","permalink":"https://www.angularjswiki.com/angular/how-to-delete-a-component-in-angular/","publishdate":"2019-02-08T01:01:05Z","relpermalink":"/angular/how-to-delete-a-component-in-angular/","section":"angular","summary":"Steps to delete a component in Angular1.Remove the import line reference from Angular app.module.ts file2.Remove the component declaration from @NgModule declaration array in app.module.ts file 3.And then manually delete the component folder from Angular project. 4.Finally Delete all the references of component manually from the Angular project.","tags":null,"title":"How To Delete A Component In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" jQuery plugin in Angular will be very useful while we are doing DOM manipulations.In this tutorial I will be explaining how to install and use jquery in Angular Projects\nTable of Contents\r   Install and Use jquery in Angular Install and Use jquery in Angular with typescript jquery @types Should I use jquery in Angular Projects   \rInstall and Use jquery in Angular To install jquery in Angular use the following node npm command\nnpm install jquery -- save  \r\r\rInstalling jquery in Angular\r\r\rIn your local angular development setup you can see jquery folder under node_modules\nAnd then add the reference to jquery file in Angular.json or Angular-cli.json depending upon the version of Angular\nIn Latest versions like Angular 7 or Angular 6 it is Angular.json file.\n\u0026quot;scripts\u0026quot;: [ \u0026quot;node_modules/jquery/dist/jquery.min.js\u0026quot; ]  Add the reference in scripts array of Angular.json\nAnd finally declare a variable called jQuery or $ in the angular component where you want to use jQuery plugin as shown below.\nimport { Component, OnInit } from '@angular/core'; declare var $: any; @Component({ selector: 'app-jquery-example', templateUrl: './jquery-example.component.html', styleUrls: ['./jquery-example.component.css'] }) export class JqueryExampleComponent implements OnInit { constructor() { } ngOnInit() { $(document).ready(function() { alert('I am Called From jQuery'); }); } }  Now you can see the alert saying I am Called from jQuery in the UI.\ndeclare var $: any; or declare var jQuery: any;  But this is not a good practice at all.\nAs typescript does not know anything about a third party plugin like jquery which is written in JavaScript.\nIt cannot perform static type checking, further it cannot discover the errors written in jQuery.\nTo satisfy typescript compiler, we are declaring $ or jQuery variable in Angular component so that at runtime as all typescript files are converted to js files, whenever it encounters $ or jQuery it will perform jQuery operations.\nWe will understand the problem with this kind of approach in Angular with an example.\nI have added a button in Angular component html file and on clicking on it we will display a message\n\u0026lt;button id=\u0026quot;my-button\u0026quot;\u0026gt;Click me\u0026lt;/button\u0026gt; // In JqueryExampleComponent ts file ngOnInit() { $(document).ready(function() { $('#my-button').click(1); }); }  Ideally jquery click function excepts a parameter as function, but i wrote a buggy code $('#my-button').click(1); (passing an integer to it).\nAnd typescript compiler does not know the defination of jquery click function and the code will compile and at runtime it will throw an error whenever click the angular buttons.\nMoreover we wont be getting intellisense in visual code editor.\nTo avoid such kind of errors in Angular, we need to have type defination files for every third party library we use in typescript or angular projects in this case jQuery.\nLuckily we have jquery type definations are available as part of separate npm packages.\nInstall and Use jquery in Angular with typescript jquery @types To install jQuery type definations file in Angular projects use the following command.\nnpm install --save jquery npm install --save @types/jquery  After successful installation you will see a folder inside the node_modules/@types with jQuery type defination files.\n\r\r\rjquery types installation in angular project\r\r\rIf you use jquery @types no need to add jquery.min.js file reference in angular.json file.\nAnd in the Angular component file import the jquery as shown below.\nimport * as $ from 'jquery';  And if you hover over the $ element you will see the defination of jquery object as shown below.\nAnd we can also you give your own name for jQuery imports as shown below. In previous example it is not the case.\nimport * as myjQuery from 'jquery';  \r\r\rjquery types definations in Angular\r\r\rAnd now the same code wont compile at all it will return an error saying.\n\rArgument of type \u0026lsquo;1\u0026rsquo; is not assignable to parameter of type \u0026lsquo;false | EventHandlerBase HTMLElement, ClickEvent HTMLElement, null, HTMLElement, HTMLElement\u0026rsquo;.\n\r\r\r\r\rjquery types definations example in Angular\r\r\rSee the above defination of click function in visual studio code intellisense.\nSo we are catching error before running the applications, that\u0026#8217;s what typescript known for.\nShould I use jquery in Angular Projects There is no straight away answers for this. It is upto the developers to decide whether to use jquery in Angular or not.\nBut generally it is not a good practice to use jQuery in Angular projects because\n In Angular it is not advisable to manipulate the DOM directly that is what jquery does. If you manipulate dom elements that are not part of component template model then it will not create a problem but it you are changing elements that are part of component template model it might cause errors and performence issues. Everything you want to do with jquery can be done with Angular as well, it is just the learning curve  It is only my personal opinion.\n","date":1549069265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549082677,"objectID":"4e31fd63b24ca685378faf2c328189e8","permalink":"https://www.angularjswiki.com/angular/how-to-install-and-use-jquery-in-angular-projects/","publishdate":"2019-02-02T01:01:05Z","relpermalink":"/angular/how-to-install-and-use-jquery-in-angular-projects/","section":"angular","summary":"Use below commands to install and use jquery in Angular with jquery types npm install --save jquery; npm install --save @types/jquery","tags":null,"title":"How To Install And Use JQuery In Angular Projects","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular Material Divider component _mat-divider_Â a simple line divider that groups elements in list and layout by following material design styles.\nTable of Contents\r   Importing mat-divider module Angular Material Divider mat-divider types SimpleÂ mat-divider example mat-divider Inset example mat-divider vertical example mat-divider style mat-divider color mat-divider thickness mat-divider properties mat-divider not showing mat-divider vertical not working mat-divider is not a known element   \rImporting mat-divider module To use mat-divider we have to import MatDividerModule from angular material module.\nDirective is MatDivider and selector is mat-divider.\nimport {MatDividerModule} from '@angular/material/divider';  Angular Material Divider mat-divider types We have three types of material dividers depending upon our usage.\n Simple divider Inset divider Vertical divider  SimpleÂ mat-divider example Just add \u0026lt;mat-divider\u0026gt; it will display a simple divider i.e., horizontaal line\n\u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt;  Usually we can use the mat-divider inside a list to separate the contents.\n\u0026lt;mat-list\u0026gt; \u0026lt;mat-list-item\u0026gt;One\u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;Two\u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;Three\u0026lt;/mat-list-item\u0026gt; \u0026lt;/mat-list\u0026gt;  \r\r\rSimple Mat Divider example\r\r\rmat-divider Inset example We can set inset attribute to true to display inset divider\n\u0026lt;mat-divider [inset]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/mat-divider\u0026gt;  Here is the complete example which shows the difference between simple divider and inset divider\n\u0026lt;mat-list\u0026gt; \u0026lt;mat-list-item\u0026gt;One\u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;Two\u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider inset=âtrueâ\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;Three\u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;/mat-list\u0026gt;  \r\r\rmat-divider inset example\r\r\rmat-divider vertical example To set the orientaion of the mat-divider horizontal or vertical, we can use vertical attribute.\n\u0026lt;mat-divider [vertical]=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/mat-divider\u0026gt;  mat-divider style Whenever we use material divider i.e., mat-divider, angular framework adds a class named mat-divider to the element as shown below\n\u0026lt;mat-divider _ngcontent-c1=\u0026quot;\u0026quot; class=\u0026quot;mat-divider mat-divider-horizontal\u0026quot; role=\u0026quot;separator\u0026quot; aria-orientation=\u0026quot;horizontal\u0026quot;\u0026gt; \u0026lt;/mat-divider\u0026gt;  And the corresponding CSS for the class .mat-divider is\n.mat-divider { display: block; margin: 0; border-top-width: 1px; border-top-style: solid; }  And the color of the .mat-divider depending upon the theme we use for instance I am using Angular Material _indigo-pink.css.Â _The color of the mat-divider is rgba(0,0,0,.12).\n.mat-divider{ border-top-color: rgba(0,0,0,.12); }  We can override these css classes to change the color or thickness of the mat-divider.\nBut change the color according toÂ material design specifications\nmat-divider color To change the color mat-divider simply change the border-top-color property of .mat-divider class.\n.mat-divider { border-top-color: red; }  \r\r\rmat-divider color example\r\r\rmat-divider thickness To change the thickness of the mat-divider, override the defaultÂ border-top-width orÂ border-top-style properties of .mat-divider class.\n.mat-divider{ border-top-width: 2px; border-top-style: dashed; }  \r\r\rmat-divider thickness example\r\r\rAdditionally we can change style of the mat-divider by overridingÂ border-top-style property.\n\r\r\rmat-divider dashed style\r\r\rmat-divider properties    mat-divider property description     inset to use inset divider set the property value to true.   vertical to use vertical divider set the property value to true    mat-divider not showing If you are using older versions of Angular Material i.e., version 5.1 below, mat-divider available as part of MatListModule.\nSo in the below example mat-divider visible only if we are using MatListModule.\n\u0026lt;p\u0026gt; No \u0026quot;mat-list\u0026quot; in component html \u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;Sample text before mat-divider\u0026lt;/p\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;p\u0026gt;Sample text After mat-divider\u0026lt;/p\u0026gt;  In the above case mat-divider will not show as we are not using MatListModule.\n\u0026lt;p\u0026gt; \u0026quot;mat-list\u0026quot; in component html \u0026lt;/p\u0026gt; \u0026lt;mat-list\u0026gt; \u0026lt;mat-list-item\u0026gt;Sample List\u0026lt;/mat-list-item\u0026gt; \u0026lt;/mat-list\u0026gt; \u0026lt;p\u0026gt;Sample text before mat-divider\u0026lt;/p\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;p\u0026gt;Sample text After mat-divider\u0026lt;/p\u0026gt;  mat-divider is visible in this case because we are using MatListModules.\nAs part of Angular Material 5.1 version they moved mat-divider out of mat-list.\nmat-divider vertical not working It seems mat-divider vertical is not working as expected. There is a open git issue regarding this issue.\nmat-divider is not a known element If you miss importing MatDividerModule from @angular/material you will get an error saying mat-divider is not a known element.\nAs explained in angular material tutorial it is better to create a separate module for material components and Add the required modules whenever required.\n","date":1548723665,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548824329,"objectID":"8c27639757f0a3ce20a42aef264e2e07","permalink":"https://www.angularjswiki.com/angular/angular-material-divider-mat-divider-example/","publishdate":"2019-01-29T01:01:05Z","relpermalink":"/angular/angular-material-divider-mat-divider-example/","section":"angular","summary":"Angular Material Divider component mat-divider a simple line divider that groups elements in list and layout by following material design styles.","tags":null,"title":"Angular Material Divider : Mat-Divider Example","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" To update the Angular CLI version to 7 simply use the below command.\nng update @angular/cli  But this command might not work, if you are using older version of Angular CLI. We will start with checking of Angular CLI version and update the Angular CLI package accordingly\nTable of Contents\r   Angular CLI version check Update Angular CLI version Globally Your global Angular CLI version is greater than your local version.The local Angular CLI version is used Update Angular CLI version Locally Update Angular CLI version to 6 Update Angular CLI version to 7 ng update @angular/cli not working   \rAngular CLI version check To check the Angular CLI version use to below command\nng -version\nUpdate Angular CLI version Globally To update Angular CLI version globally in your system use the below commands\nnpm uninstall -g angular-cli npm cache clean or npm cache verify (if npm \u0026amp;gt; 5) npm install -g @angular/cli@latest  First you need to uninstall the existing angular cli packages followed by npm cache verify command to clear the cache related problems.\nAnd the install the Angular CLI version again by using npm install -g @angular/cli@latest\nIf you are using MAC or linux systems you might need to add the prefix before npm\nsudo npm uninstall -g angular-cli sudo npm cache clean or sudo npm cache verify (if npm \u0026gt; 5) sudo npm install -g @angular/cli@latest  Your global Angular CLI version is greater than your local version.The local Angular CLI version is used After updating Angular CLI globally you might get this warning if your local project\u0026rsquo;s angular cli version less than the global angular cli version.\nAs local packages have more priority than global packages you will get Your global Angular CLI version is greater than your local version.The local Angular CLI version is used\nSo mostly you need to update your local Angular CLI version as well\nUpdate Angular CLI version Locally To update Angular CLI version in your local projects use the following commands. Navigate to your local Angular project and execute the below commands.\nrm -rf node_modules npm uninstall --save-dev angular-cli npm install --save-dev @angular/cli@latest npm install  Update Angular CLI version to 6 If you are migrating from older Angular CLI versions like 1.x to latest Angular version 6. You need to do few additional checks apart from above commands.\nFirst of all you need to convertÂ angular-cli.json file older Angular CLI version to latest angular.json used in version 6.\nTo convert it use the following command\nng update @angular/cli --from=1.7.4 --migrate-only  To convert angular-cli.json file pass the current version to ng update by using from flag and additionally use \u0026ndash;migrate-only. The migrate onlyÂ flag makes sure that it will do only a migration but does not update the Angular CLI.\nAnd if you RxJs you need to update it as well use the below command\nng update rxjs\nIt will update the RxJs version to 6. To support older RxJs imports the above command automatically installs theÂ rxjs-compat package. If you get any error try manual installation.\nnpm i rxjs-compat npm i @angular-devkit/build-angular  And Angular CLI version 6 no longer usesÂ intl in _polyfills.ts.Â _You can remove the below lines from polyfills.ts\nimport 'intl'; import 'intl/locale-data/jsonp/en';  And additionally you need to update the @angular core modules as well\nng update @angular/core\nUpdate Angular CLI version to 7 Once you upgraded to Angular CLI version 6. Its very easy to update it to the current latest Angular CLI version 7.\nTo update Angular CLI version to 7. Just run the following commands\nng update @angular/cli @angular/core\nThe above command updates Angular cli as well as angular core packages.\nIn addition to that you can refactor the TypeScript code so that it does not depend on rxjs-compat modules(as explained above).\nTo refactor TypeScript code run following command\nnpm install -g rxjs-tslint rxjs-5-to-6-migrate -p src/tsconfig.app.json  Once all of your dependencies have updated to latest RxJS 6, remove rxjs-compat package as it increases bundle size.\nnpm uninstall rxjs-compat\nng update @angular/cli not working If you follow the above steps carefully mostly Angular cli version will be updated without any problems. And do not forgot to add @latest suffix.\nng update @angular/cli@latest\n","date":1548118865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549737918,"objectID":"e99efe50bdf43ca5a25a539cf9dfdfb7","permalink":"https://www.angularjswiki.com/angular/update-angular-cli-version-ng-update-to-latest-6-7-versions/","publishdate":"2019-01-22T01:01:05Z","relpermalink":"/angular/update-angular-cli-version-ng-update-to-latest-6-7-versions/","section":"angular","summary":"To update Angular CLI versions to latest Angular CLI versions 7 and 6 use below command ng update @angular/cli@latest.","tags":null,"title":"How To Update Angular CLI Version To Latest Versions","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" We can import or read local JSON files in Angular,several different ways depending upon the Angular version we are using.\nIn this post I am listing out different methods with examples on how to read JSON files in Angular.\nTable of Contents\r   Reading local JSON files in Angular 7 and Angular 6.1 Reading local JSON files in Angular 5 or Angular 4 Reading local JSON files in Angular 2+ versions Reading local JSON files in Offline Angular Applications   \rReading local JSON files in Angular 7 and Angular 6.1 Angular framework supports TypeScript 2.9 from 6.1 version onwards.In typescript 2.9 with the help of resolveJsonModule we can import local JSON files just like modules\nI have added a sample JSON file in assets folder of Angular App. Have a look at the sample json example\n{ \u0026quot;Post\u0026quot;: \u0026quot;Angular Json Files\u0026quot;, \u0026quot;CanEdit\u0026quot;: true, \u0026quot;Version\u0026quot;: 7 }  I have imported sampleJson.json in our ReadingJsonFilesComponent as shown below\nimport { Component, OnInit } from '@angular/core'; import SampleJson from '../../assets/SampleJson.json'; @Component({ selector: 'app-reading-json-files', templateUrl: './reading-json-files.component.html', styleUrls: ['./reading-json-files.component.css'] }) export class ReadingJsonFilesComponent implements OnInit { constructor() { console.log('Reading local json files'); console.log(SampleJson); } ngOnInit() {} }  Now If you build the application you will get the following error\n\rERROR in src/app/reading-json-files/reading-json-files.component.ts(2,24): error TS2732: Cannot find module \u0026lsquo;../../assets/SampleJson.json\u0026rsquo;. Consider using \u0026lsquo;âresolveJsonModule\u0026rsquo; to import module with \u0026lsquo;.json\u0026rsquo; extension\n\r\rTo remove the above error,In tsconfig.json file under compiler options we need to add \u0026ldquo;resolveJsonModule\u0026rdquo; andÂ \u0026rdquo;esModuleInterop\u0026rdquo; configurations as true as shown below.\n{ \u0026quot;compilerOptions\u0026quot;: { \u0026quot;resolveJsonModule\u0026quot;: true, \u0026quot;esModuleInterop\u0026quot;: true } }  One more thing you need to understand is the the imported JSON file contents are typesafe. In the above json version is a number. So if you tried to change the version to string it will throw error.\nSampleJson.Version= \u0026quot;Seven\u0026quot;; //throws error as Version is of type number  Reading local JSON files in Angular 5 or Angular 4 In earlier versions of Angular like Angular 5 or Angular 4 to read local json files, we need to use HttpClient from \u0026lsquo;@angular/common/http\u0026rsquo; and Observable from \u0026lsquo;rxjs/Observable\u0026rsquo; as shows below.\nWe need to inject HttpClient in constructor.\nimport { HttpClient } from '@angular/common/http'; import { Observable } from 'rxjs'; @Component({ selector: 'app-reading', templateUrl: './reading.component.html', styleUrls: ['./reading.component.css'] }) export class ReadingComponent implements OnInit { private _jsonURL = 'assets/SampleJson.json'; constructor(private http: HttpClient) { this.getJSON().subscribe(data =\u0026gt; { console.log(data); }); } public getJSON(): Observable\u0026lt;any\u0026gt; { return this.http.get(this._jsonURL); } ngOnInit() { } }  HttpClient is introduced in Angular 4.3, If you are using Angular version 4.3 below use the below method to read the JSON files\nReading local JSON files in Angular 2+ versions We need to useÂ Http from \u0026ldquo;@angular/http\u0026rdquo; to import JSON files in Angular version 4.3 below and Angular 2 +.\nimport { Component, Input } from '@angular/core'; import { Injectable } from '@angular/core'; import { Http, Response, Headers, RequestOptions } from '@angular/http'; import {Observable} from 'rxjs/Rx'; import 'rxjs/add/operator/map'; import 'rxjs/add/operator/catch'; @Injectable() export class ReadingJsonService{ private _jsonURL = 'assets/SampleJson.json'; constructor(private http: Http) { var object; this.getJSON().subscribe(data =\u0026gt; object=data, error =\u0026gt; console.log(error)); } public getJSON(): Observable\u0026lt;any\u0026gt; { return this.http.get(_jsonURL) .map((response:any) =\u0026gt; response.json()) .catch((error:any) =\u0026gt; console.log(error)); } }  Reading local JSON files in Offline Angular Applications Angular Http will not work if the application goes offline. In that case we have an alternate way of importing JSON files We need to add a new file json-typings.d.ts in app folder along with index.html file\ndeclare module \u0026quot;*.json\u0026quot; { const value: any; export default value; }  And then we can import JSON files just like latest versions of Angular\nimport * as SampleJson from \u0026quot;../../assets/SampleJson.json\u0026quot;;\n","date":1541120465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542114951,"objectID":"25b9871dfcdf2a17580361f92b5ee8ec","permalink":"https://www.angularjswiki.com/angular/how-to-read-local-json-files-in-angular/","publishdate":"2018-11-02T01:01:05Z","relpermalink":"/angular/how-to-read-local-json-files-in-angular/","section":"angular","summary":"We can import or read local JSON files in Angular,several different ways depending upon the Angular version we are using.In this post I am listing out different methods with examples to read JSON files","tags":null,"title":"How To Read Local JSON Files In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":"To avoid Angular EXCEPTION: No provider for Http! error we need to importÂ HttpClientModule fromÂ @angular/common/http.\nimport { HttpClientModule } from '@angular/common/http'; @NgModule({ imports: [ BrowserModule, HttpClientModule, ], declarations: [ AppComponent ], bootstrap: [ AppComponent ] }) export class AppModule { }  And thisÂ HttpClientModule introduced in Angular 4.3.\nIf you are using earlier versions of Angular import HttpModule from @angular/http to fix EXCEPTION: No provider for Http!\nimport { HttpModule } from '@angular/http'; @NgModule({ imports: [ BrowserModule, HttpModule ], declarations: [ AppComponent ], bootstrap: [ AppComponent ] }) export class AppModule { }  And this HttpModule is deprecated from Angular 5.2 version.\n","date":1536541265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541304007,"objectID":"9e254b2d21741f70ecbce7bb7697eee5","permalink":"https://www.angularjswiki.com/angular/angular-exception-no-provider-for-http-error-fix/","publishdate":"2018-09-10T01:01:05Z","relpermalink":"/angular/angular-exception-no-provider-for-http-error-fix/","section":"angular","summary":"To avoid Angular EXCEPTION: No provider for Http! error we need to import HttpClientModule from @angular/common/http.","tags":null,"title":"Angular EXCEPTION: No Provider For Http! Error Fix","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular Material button module MatButtonModule(mat-button,mat-raised-button,mat-icon-button,mat-fab,mat-mini-fab) enhances the user experience of normal buttons (\u0026lt;button\u0026gt;) and anchor (\u0026lt;a\u0026gt;)tags by following Material design principles.\nWhen you want to perform an action in webpage use button and use anÂ anchor tag to navigate to other pages.\nButtons are placed anywhere in webpage and also places like:\n Dialogs Modalwindows Forms Cards Toolbars  Table of Contents\r   Import mat button module MatButton Directive MatAnchor Directive Types of Angular Material Buttons  Text buttons Outlined Buttons Contained buttons Floating action buttons  mat-button example mat-stroked-button example mat-flat-button example mat-raised-buttonÂ example mat-icon-button example mat-button with icon and text example mat-fab example mat-mini-fab example mat button api mat-button color change and theming mat-button disabled mat-button disableRipple mat-button isIconButton mat-buttonÂ isRoundButton mat-buttonÂ ripple mat-button focus method Angular Materials Buttons Demo mat button not a known element   \rImport mat button module To import Mat Button Module use the following code.\nimport {MatButtonModule} from '@angular/material';\nMatButtonModule contains two directives\n MatButton MatAnchor  MatButton Directive MatButton Directive contains defination for material design button and exported as matButton;\nAnd the selector is\nbutton[mat-button], button[mat-raised-button], button[mat-icon-button], button[mat-fab], button[mat-mini-fab], button[mat-stroked-button], button[mat-flat-button]  MatAnchor Directive MatAnchor directive extends MatButton contains defination for raised material design button and exported as matAnchor or matButton.\nAnd the selector is\na[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab] a[mat-stroked-button] a[mat-flat-button]  Types of Angular Material Buttons MatButtonModule comes up with seven different types of buttons. Depending upon the importance of actions.\nText buttons  Text buttons generally used for low significant actions. mat-button is an example of text button  Outlined Buttons  Outlined buttons are used for medium significant actions,outlined with border. The actions are important but not primary actions on the page. mat-stroked-button is an example of outlined button  Contained buttons  Contained buttons have more significant than other buttons, and they are filled with color and shadow. And these actions are primary actions on the page. mat-flat-button is an example of contained button filled with color mat-raised-button is an example of contained button filled with color and has a shadow  Floating action buttons  Floating action button represents the primary single most important action in a Website. As the name suggests It appears in front of all screen content(floating) It is a circular shape button with an icon in its center. We have three types of FABs regular, mini, and extended. mat-fab is a regular FAB button,mat-mini-fab is a mini FAB button. FAB buttons should be used for constructive actions such as create,share etc. FAB button should not contain regular text and icon should clearly represent the action being performed. FAB extended button contains text label with icon.  Button type should be given as attribute to button or anchor tag.\n mat-button (Text Button) mat-stroked-button (outlined button) mat-flat-button (Contained button with color) mat-raised-button (Contained button with color and shadow) mat-icon-button mat-fab (Normal floating action button) mat-mini-fab (Mini floating action button)  Most of the google products are developed in Angular material. One of the product isÂ express google.\nGoogle express uses all kinds of material buttons in its website.\nmat-button example mat-button is a simple text button generally used for less important actions. Actions like Dismiss,Learn More,Got it are usually text buttons.\n\u0026lt;h3\u0026gt;mat-button example\u0026lt;/h3\u0026gt; \u0026lt;button mat-button\u0026gt;Dismiss\u0026lt;/button\u0026gt; \u0026lt;button mat-button\u0026gt;Learn More\u0026lt;/button\u0026gt; \u0026lt;button mat-button\u0026gt;Got It\u0026lt;/button\u0026gt; \u0026lt;a mat-button routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt;mat-button\u0026lt;/a\u0026gt;  For a shopping website like Google express remoing items from shopping cart is less important action. So it uses mat-button to remove the items from cart.\n\r\r\rmat-button example\r\r\rmat-stroked-button example mat-stroked-button is an outlined button i.e., button contains border. Generally used more important actions than text buttons.\n\u0026lt;h3\u0026gt;mat-stroked-button example\u0026lt;/h3\u0026gt; \u0026lt;button mat-stroked-button\u0026gt;Add to Cart\u0026lt;/button\u0026gt; \u0026lt;a mat-stroked-button routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; mat-stroked-button\u0026lt;/a\u0026gt;  In Google express home page displays the list of products by department, with add to cart button for every product. Add to Cart button uses mat-stroked-button because all the products has same priority, Each add to card button has same importance.And this Add to cart button is not a primary action in the home page.\n\r\r\rmat-stroked-button example\r\r\rmat-flat-button example mat-flat-button is a contained button filled with color.It should be used for primary actions in a page.\n\u0026lt;h3\u0026gt;mat-flat-button example\u0026lt;/h3\u0026gt; \u0026lt;button mat-flat-button\u0026gt;mat-flat-button\u0026lt;/button\u0026gt; \u0026lt;a mat-flat-button routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; mat-flat-button\u0026lt;/a\u0026gt;  mat-raised-buttonÂ example mat-raised-button is a contained button filled with color and has shadow. And has more visibility than flat button. And we can use it in place of mat-flat-button to represent primary action in the web page.\n\u0026lt;h3\u0026gt;mat-raised-button example\u0026lt;/h3\u0026gt; \u0026lt;button mat-raised-button\u0026gt;mat-raised-button\u0026lt;/button\u0026gt; \u0026lt;a mat-raised-button routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; mat-raised-button\u0026lt;/a\u0026gt;  If you open the single product page in Google express,Add to cart button is primary action on the page. So it is contained button.mat-raised-button is used in this case.\n\r\r\rmat-raised-button example\r\r\rmat-icon-button example We can use angular material icons as buttons. We need to add mat-icon-button attribute to button and use mat-icon tag to display icon.\n\u0026lt;h3\u0026gt;mat-icon-button example\u0026lt;/h3\u0026gt; \u0026lt;button mat-icon-button\u0026gt;\u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/\u0026lt;mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;a mat-icon-button routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; \u0026lt;mat-icon\u0026gt;love\u0026lt;/\u0026lt;mat-icon\u0026gt;\u0026lt;/a\u0026gt;  In Google express website uses mat-icon-button to display the shopping cart and help buttons in top of the webpage.\n\u0026lt;i class=\u0026quot;material-icons\u0026quot;\u0026gt;helpÂ \u0026lt;/i\u0026gt;\u0026lt;i class=\u0026quot;material-icons\u0026quot;\u0026gt;shopping_cart\u0026lt;/i\u0026gt;  mat-button with icon and text example To add the icon to mat-button text, we need to add mat-icon before the text of button as shown below\n\u0026lt;h3\u0026gt;mat-button with icon and text\u0026lt;/h3\u0026gt; \u0026lt;button mat-raised-button color=\u0026quot;primary\u0026quot;\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; Add to Cart \u0026lt;/button\u0026gt;  mat-fab example mat-fab is a regular floating action button. Generally used for most important action in the screen.\n\u0026lt;button mat-fab\u0026gt;mat-fab\u0026lt;/button\u0026gt; \u0026lt;a mat-fab routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; mat-fab\u0026lt;/a\u0026gt;  Only one floating action button is recommended per screen and it should represent the single most primary action in screen. Otherwise we should not use it.\nGoogle products like Google+,Contacts,Google docs uses floating action buttons.\nGoogle ContactsÂ use FAB button to add a new contact, because add contact is single most important action in the screen.\nIn Google docs adding a new document is the primary action, so FAB button is used.\nIn Google+ adding a new post button displayed at bottom right of the page which is a floating action button.\nDefault size of regular fab button is 56*56\nAs of now there is no direct way to implement FAB extended button using Angular Material. There is an open issue about this in github\n\r\r\rmat fab buttons\r\r\rNew Gmalis Compose button uses extended FAB button.\nmat-mini-fab example mat-mini-fab is a floating action button with size less than regular FAB button. Should be used in small screens.\n\u0026lt;button mat-mini-fab\u0026gt;mat-mini-fab\u0026lt;/button\u0026gt; \u0026lt;a mat-mini-fab routerLink=\u0026quot;https://www.arungudelli.com\u0026quot;\u0026gt; mat-mini-fab\u0026lt;/a\u0026gt;  mat-mini-fab size is 40*40.\nmat button api   Property Description     color  Of type ThemePalette   disabled  of type boolean   disableRipple  of type boolean   isIconButton  Readonly, of type boolean   isRoundButton  Readonly, of type boolean   ripple  of type MatRipple     mat-button color change and theming To change the color of mat-button color use color property. We can changeÂ the background color to primary, accent, or warn.\n\u0026lt;button mat-button color=\u0026quot;primary\u0026quot;\u0026gt;Primary\u0026lt;/button\u0026gt;  mat-button disabled To disable the mat-button we can use mat-button disabled property.\n\u0026lt;button mat-button disabled\u0026gt;Disabled\u0026lt;/button\u0026gt;  mat-button disableRipple To disable the ripple animation of mat-button use disableRipple property.\n\u0026lt;button mat-raised-button color=\u0026quot;primary\u0026quot; disableRipple=true\u0026gt;Primary\u0026lt;/button\u0026gt;  mat-button isIconButton mat-button isIconButton property is a readonly attribute which represents whether the button is icon button.\nmat-buttonÂ isRoundButton mat-button isRoundButton property is a readonly attribute which tells whether the button is FAB button i.e., rounded button.\nmat-buttonÂ ripple Using ripple attribute we get the instance ofÂ MatRipple.\nmat-button focus method We can set the focus of mat-button programmatically using focus method.\nIn the below example mat-checkbox change event will dynamically focus the mat-button using focus button.\n\u0026lt;mat-checkbox (change)=\u0026quot;changeEvent($event)\u0026quot;\u0026gt;\u0026lt;/mat-checkbox\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;p\u0026gt;On Change event focuses the button\u0026lt;/p\u0026gt; \u0026lt;button mat-button #submitButton\u0026gt;Basic\u0026lt;/button\u0026gt;  And in our button.component.ts file\n@ViewChild('submitButton') submitButton; changeEvent($event){ this.submitButton.focus(); }  Angular Materials Buttons Demo We will create new component in our project to test different types of material buttons.\nexport class ButtonComponent implements OnInit { constructor() { } @ViewChild('submitButton') submitButton; ngOnInit() { } changeEvent(){ this.submitButton.focus(); } }  And the component html file is\n\u0026lt;h3\u0026gt;mat-buttons examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-button\u0026gt;Basic\u0026lt;/button\u0026gt; \u0026lt;button mat-button color=\u0026quot;primary\u0026quot;\u0026gt;Primary\u0026lt;/button\u0026gt; \u0026lt;button mat-button color=\u0026quot;accent\u0026quot;\u0026gt;Accent\u0026lt;/button\u0026gt; \u0026lt;button mat-button color=\u0026quot;warn\u0026quot;\u0026gt;Warn\u0026lt;/button\u0026gt; \u0026lt;button mat-button disabled\u0026gt;Disabled\u0026lt;/button\u0026gt; \u0026lt;button mat-button disableRipple=true\u0026gt;disableRipple\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-raised-buttons examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-raised-button\u0026gt;Basic\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button color=\u0026quot;primary\u0026quot;\u0026gt;Primary\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button color=\u0026quot;accent\u0026quot;\u0026gt;Accent\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button color=\u0026quot;warn\u0026quot;\u0026gt;Warn\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button disabled\u0026gt;Disabled\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button disableRipple=true\u0026gt;disableRipple\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-stroked-button examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-stroked-button\u0026gt;Basic\u0026lt;/button\u0026gt; \u0026lt;button mat-stroked-button color=\u0026quot;primary\u0026quot;\u0026gt;Primary\u0026lt;/button\u0026gt; \u0026lt;button mat-stroked-button color=\u0026quot;accent\u0026quot;\u0026gt;Accent\u0026lt;/button\u0026gt; \u0026lt;button mat-stroked-button color=\u0026quot;warn\u0026quot;\u0026gt;Warn\u0026lt;/button\u0026gt; \u0026lt;button mat-stroked-button disabled\u0026gt;Disabled\u0026lt;/button\u0026gt; \u0026lt;button mat-stroked-button disableRipple=true\u0026gt;disableRipple\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-flat-button examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-flat-button\u0026gt;Basic\u0026lt;/button\u0026gt; \u0026lt;button mat-flat-button color=\u0026quot;primary\u0026quot;\u0026gt;Primary\u0026lt;/button\u0026gt; \u0026lt;button mat-flat-button color=\u0026quot;accent\u0026quot;\u0026gt;Accent\u0026lt;/button\u0026gt; \u0026lt;button mat-flat-button color=\u0026quot;warn\u0026quot;\u0026gt;Warn\u0026lt;/button\u0026gt; \u0026lt;button mat-flat-button disabled\u0026gt;Disabled\u0026lt;/button\u0026gt; \u0026lt;button mat-flat-button disableRipple=true\u0026gt;disableRipple\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-icon-button examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-icon-button\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button color=\u0026quot;primary\u0026quot;\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button color=\u0026quot;accent\u0026quot;\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button color=\u0026quot;warn\u0026quot;\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button disabled\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button disableRipple=true\u0026gt; \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-fab examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-fab\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab color=\u0026quot;primary\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab color=\u0026quot;accent\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab color=\u0026quot;warn\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab disabled\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab disableRipple=true\u0026gt; \u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt;mat-mini-fab examples\u0026lt;/h3\u0026gt; \u0026lt;div\u0026gt; \u0026lt;button mat-mini-fab\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab color=\u0026quot;primary\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab color=\u0026quot;accent\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab color=\u0026quot;warn\u0026quot;\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab disabled\u0026gt;\u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab disableRipple=true\u0026gt; \u0026lt;mat-icon\u0026gt;add\u0026lt;/mat-icon\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;h3\u0026gt; Focusing \u0026lt;/h3\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;mat-checkbox (change)=\u0026quot;changeEvent($event)\u0026quot;\u0026gt;\u0026lt;/mat-checkbox\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;p\u0026gt;On Change event focuses the button\u0026lt;/p\u0026gt; \u0026lt;button mat-button #submitButton\u0026gt;Basic\u0026lt;/button\u0026gt;  Here is the example demo for Angular material buttons\nmat button not a known element If you miss importing MatButtonModule from @angular/material you will get an error saying mat-button is not a know n element.\nAs explained in angular material tutorial it is better to create a separate module for material components. Add the required modules whenever required.\n","date":1534986065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622167,"objectID":"bf8b07c47877b3f3900b1911fb4930ec","permalink":"https://www.angularjswiki.com/angular/buttons-in-angular-using-material-design-mat-button-example/","publishdate":"2018-08-23T01:01:05Z","relpermalink":"/angular/buttons-in-angular-using-material-design-mat-button-example/","section":"angular","summary":"Angular Material button module MatButtonModule(mat-button,mat-raised-button,mat-icon-button,mat-fab,mat-mini-fab) enhances the user experience of normal buttons () and anchor () tags by following Material design principles.","tags":null,"title":"Angular Material Buttons : Mat-Button Example","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" We can create a beatiful Progress bar in Angular using \u0026lt;mat-progress-bar\u0026gt; which isÂ part of angular material progress bar module called MatProgressBarModule\nIn this tutorial we learn how basics of angular material progress bar and then we will create reading position indicator.\nTable of Contents\r   Angular Material Progress Bar mat-progress-bar example Angular Progress Bar with percentage Reading position indicator in Angular using mat-progress-bar Angular Material progress bar types mat-progress-barÂ determinate mode mat-progress-bar indeterminate mode mat-progress-bar buffer mode mat-progress-bar query mode mat-progress-bar change color mat-progress-bar is not a known element mat-progress-bar properties   \rAngular Material Progress Bar \u0026lt;mat-progress-bar\u0026gt; is a horizontal progress bar in Angular, used to inform users about the progress of ongoing tasks like loading a webpage, reading position indicator of a web page or submitting the form data to the server etc. by following material design specifications.\nmat-progress-bar example To use mat-progress-bar we need to import MatProgressBarModule from @angular/material\nimport {MatProgressBarModule} from '@angular/material' After importing angular material progress bar module. We can use \u0026lt;mat-progress-bar\u0026gt; selector in component html file.\n\u0026lt;mat-progress-bar value=40\u0026gt;\u0026lt;/mat-progress-bar\u0026gt;\nAngular Progress Bar with percentage mat-progress-bar valueÂ property represents the progress of an on going process. The propertyÂ value range is from 0 to 100. Its basically percentage of Angular material progress bar.\nNow go through the below reading position indicator example to understand mat-progress-bar further.\nReading position indicator in Angular using mat-progress-bar We will implement reading position indicator,based upon scroll position of webpage.\nWe should calculate the percentage of scroll position and assign it to angular material progress bar percentage property i.e., value property.\nWe will add a new component in our Angular project called progress-bar\nexport class ProgressBarComponent implements OnInit { progresValue:number; rangeArray:number[]; constructor() { this.progresValue =0; this.rangeArray= new Array(100); } @HostListener(\u0026quot;window:scroll\u0026quot;, []) onWindowScroll() { var element = document.documentElement, body = document.body, scrollTop = 'scrollTop', scrollHeight = 'scrollHeight'; this.progresValue = (element[scrollTop]||body[scrollTop]) / ((element[scrollHeight]||body[scrollHeight]) - element.clientHeight) * 100; } ngOnInit() { } }  progressValue property binds to value property of mat-progress-bar selector. rangArray used to generate dummy content.\nAnd @HostListenerÂ decorator used to track window scroll event. As the value property is between 0 to 100. All we need to do is calculate scroll percentage and assign it to progressValue\n\u0026lt;mat-progress-bar [value]=\u0026quot;progresValue\u0026quot; *ngIf=\u0026quot;progresValue \u0026gt; 0\u0026quot;\u0026gt; \u0026lt;/mat-progress-bar\u0026gt; \u0026lt;div\u0026gt; \u0026lt;p *ngFor=\u0026quot;let i of rangeArray\u0026quot;\u0026gt; Angular Progress Bar \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;  *ngIf used to display mat-progress-bar only when the value is greater than 0. Otherwise an empty progress bar track displayed on top of webpage.\n.mat-progress-bar{ position:fixed; top:0px; }  To fix the progress bar on top of the web page. I have added the above css to .mat-progress-bar class.\nSee the read position indicator demo.\nAngular Material progress bar types Angular material progress bar mat-progress-bar supports four different types of progress bars.\n Determinate mode Indeterminate mode Buffer mode Query mode  mode property used to decide type of progress bar. Default mode is determinate mode. As explained above.\nA progress bar contains two elements\n track indicator  progress bar indicator display progress by animating the indicator along fixed visible track usually width of webpage. The indicatorÂ behavior is dependent on mode property of mat-progress-bar.\nmat-progress-barÂ determinate mode When we know the process completion time before, we use determinate mode. As explained above read position indicator example.\nThe progress bar indicator increases it\u0026rsquo;s width from 0 to 100% on the track, in sync with the process progress.\n\u0026lt;mat-progress-bar mode=\u0026quot;determinate\u0026quot; value=50\u0026gt;\u0026lt;/mat-progress-bar\u0026gt;  value property indicates the progress of the process.\nIn Google Chrome mobile browser loading of webpage usually indicated by determinate progress bar.\nmat-progress-bar indeterminate mode When we don\u0026rsquo;t know how much time it will take to complete the process we will use indeterminate mode.\nSometimes the user is asked to wait from some time, while something finishes like submitting the form data to server or doing some background work.\nIn that cases,Itâs not required to indicate how much time it will take to complete.\n\u0026lt;mat-progress-bar mode=\u0026quot;indeterminate\u0026quot; *ngIf=\u0026quot;IsWait\u0026quot;\u0026gt;\u0026lt;/mat-progress-bar\u0026gt;  We can use *ngIf to display the mat-progress-bar. Ones ngIf condition becoms false. Progress bar will be removed.\nvalue property is ignored in this indeterminate mode.\nGoogle products like adwords uses indeterminate progress bar.\nmat-progress-bar buffer mode buffer mode is useful when we want to display the progress in steps. For example we have a process that is divided into four sub tasks.\nEach task completion represented by buffer indicator. And the overall progress represented by normal progress bar indicator along the track.\n\u0026lt;mat-progress-bar mode=\u0026quot;buffer\u0026quot; value=25 bufferValue=50\u0026gt;\u0026lt;/mat-progress-bar\u0026gt;  bufferValue property indicates buffer indicator progress.\nMake sure bufferValue is greater than value.Otherwise buffer indicator progress hidden by normal progress indicator.\nmat-progress-bar query mode query mode is useful when we want to show pre loading of progress.\nOnce the process loading starts mode should be changed to determinate or indeterminate mode to show the progress of the action.\nIn query mode mat-progress-bar value property is ignored.\n\u0026lt;mat-progress-bar mode=\u0026quot;query\u0026quot;\u0026gt;\u0026lt;/mat-progress-bar\u0026gt;  See the different types of progress modes demo example\nmat-progress-bar change color We can use color property of mat-progress-bar to change the color of the progress bar. The default color is themes primary color. We can change it toÂ accent or warn\nmat-progress-bar is not a known element If you miss importing Angular material progress bar moduleÂ MatProgressBarModule.You will get mat-progress-bar is not a known element error.\nIt is better to import all material module in once place as explained in Angular Material tutorial\nmat-progress-bar properties We will summarise all the mat-progress-bar properties in one place.\n  MatProgressBar property Description     value Indicates the progress bar value. Range is 0 to 100. Default value is 0   mode mode values are determinate,indeterminate,buffer, query. Default mode is determinate.   bufferValue bufferValue indicates value of buffer indicator of buffered progress value   color ThemePalette of the theme. defaults to primary.   progressbarId ID of the material progress bar.     ","date":1534726865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1542301339,"objectID":"0c656be44f1622f1bcb5a3677df6e2a8","permalink":"https://www.angularjswiki.com/angular/progress-bar-in-angular-mat-progress-bar-examplematerial-design/","publishdate":"2018-08-20T01:01:05Z","relpermalink":"/angular/progress-bar-in-angular-mat-progress-bar-examplematerial-design/","section":"angular","summary":"We can create a beatiful Progress bar in Angular using mat-progress-bar which is part of angular material progress bar module called MatProgressBarModule","tags":null,"title":"Angular Material Progress Bar: Mat-Progress-Bar Example","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":["icons"],"content":" \u0026lt;mat-icon\u0026gt; selector used to display Material icons in Angular.We have around 900+ Angular Material icons.To show the below \u0026lt;mat-icon\u0026gt; list icons,We need to load material icons css provided by Google\n\u0026lt;mat-icon\u0026gt; is part of angular material module calledÂ MatIconModule.We can use font ligature as an icon by putting the ligature text in \u0026lt;mat-icon\u0026gt;Â component.\nFor example \u0026lt;mat-icon\u0026gt;home\u0026lt;/mat-icon\u0026gt; displays home icon.\nWe have to import MatIconModule from Angular Material Modules.\nimport {MatIconModule} from '@angular/material/icon'\nThese icons are not limited to angular,In normal webpages just use \u0026lt;i\u0026gt;\u0026lt;/i\u0026gt; in place of \u0026lt;mat-icon\u0026gt; tag.\n\u0026lt;i\u0026gt;home\u0026lt;/i\u0026gt;\nAll the material icons packaged into a single font file. All we need to do is adding the below Google web fonts css in our html page.\n\u0026lt;link href=\u0026quot;https://fonts.googleapis.com/icon?family=Material+Icons\u0026quot; rel=\u0026quot;stylesheet\u0026quot;\u0026gt;\n We have around 900+ icons all from a single, small file(42KB) and divided into 10+ categories. We can serve the file from Google web font server or can be hosted from our own server Material icons mat-icon supported by all modern web browsers We can do all theming like color,size etc using pure CSS\n  Table of Contents\r   Angular Material Icons list categories mat-icon List Category-Action mat-icon List Category-Communication mat-icon List Category-Av mat-icon List Category-Connection mat-icon List Category-Device mat-icon List Category-Editor mat-icon List Category-File mat-icon List Category-Hardware mat-icon List Category-Images mat-icon List Category-Maps mat-icon List Category-Navigation mat-icon List Category-Notification mat-icon List Category-Places mat-icon List Category-Toggle mat-icon List Category-Warning mat-icon List Category-Social Download Angular Material Icons List PDF   \rAngular Material Icons list categories Go through the below material icon list categories\nmat-icon List Category-Action   Icon Name mat-icon code     3d_rotation 3d rotation icon \u0026lt;mat-icon\u0026gt; 3d_rotation \u0026lt;\u0026#47;mat-icon\u0026gt;   accessibility accessibility icon \u0026lt;mat-icon\u0026gt;accessibility\u0026lt;\u0026#47;mat-icon\u0026gt;   accessibility_new accessibility new icon \u0026lt;mat-icon\u0026gt;accessibility_new\u0026lt;\u0026#47;mat-icon\u0026gt;   accessible accessible icon \u0026lt;mat-icon\u0026gt;accessible\u0026lt;\u0026#47;mat-icon\u0026gt;   accessible_forward accessible forward icon \u0026lt;mat-icon\u0026gt;accessible_forward\u0026lt;\u0026#47;mat-icon\u0026gt;   account_balance account balance icon \u0026lt;mat-icon\u0026gt;account_balance\u0026lt;\u0026#47;mat-icon\u0026gt;   account_balance_wallet account balance wallet icon \u0026lt;mat-icon\u0026gt;account_balance_wallet\u0026lt;\u0026#47;mat-icon\u0026gt;   account_box account box icon \u0026lt;mat-icon\u0026gt;account_box\u0026lt;\u0026#47;mat-icon\u0026gt;   account_circle account circle icon \u0026lt;mat-icon\u0026gt;account_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   add_shopping_cart add shopping cart icon \u0026lt;mat-icon\u0026gt;add_shopping_cart\u0026lt;\u0026#47;mat-icon\u0026gt;   alarm alarm icon \u0026lt;mat-icon\u0026gt;alarm\u0026lt;\u0026#47;mat-icon\u0026gt;   alarm_add alarm add icon \u0026lt;mat-icon\u0026gt;alarm_add\u0026lt;\u0026#47;mat-icon\u0026gt;   alarm_off alarm off icon \u0026lt;mat-icon\u0026gt;alarm_off\u0026lt;\u0026#47;mat-icon\u0026gt;   alarm_on alarm on icon \u0026lt;mat-icon\u0026gt;alarm_on\u0026lt;\u0026#47;mat-icon\u0026gt;   all_out all out icon \u0026lt;mat-icon\u0026gt;all_out\u0026lt;\u0026#47;mat-icon\u0026gt;   android android icon \u0026lt;mat-icon\u0026gt;android\u0026lt;\u0026#47;mat-icon\u0026gt;   announcement announcement icon \u0026lt;mat-icon\u0026gt;announcement\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_right_alt arrow right alt icon \u0026lt;mat-icon\u0026gt;arrow_right_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   aspect_ratio aspect ratio icon \u0026lt;mat-icon\u0026gt;aspect_ratio\u0026lt;\u0026#47;mat-icon\u0026gt;   assessment assessment icon \u0026lt;mat-icon\u0026gt;assessment\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment assignment icon \u0026lt;mat-icon\u0026gt;assignment\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment_ind assignment ind icon \u0026lt;mat-icon\u0026gt;assignment_ind\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment_late assignment late icon \u0026lt;mat-icon\u0026gt;assignment_late\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment_return assignment return icon \u0026lt;mat-icon\u0026gt;assignment_return\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment_returned assignment returned icon \u0026lt;mat-icon\u0026gt;assignment_returned\u0026lt;\u0026#47;mat-icon\u0026gt;   assignment_turned_in assignment turned in icon \u0026lt;mat-icon\u0026gt;assignment_turned_in\u0026lt;\u0026#47;mat-icon\u0026gt;   autorenew autorenew icon \u0026lt;mat-icon\u0026gt;autorenew\u0026lt;\u0026#47;mat-icon\u0026gt;   backup backup icon \u0026lt;mat-icon\u0026gt;backup\u0026lt;\u0026#47;mat-icon\u0026gt;   book book icon \u0026lt;mat-icon\u0026gt;book\u0026lt;\u0026#47;mat-icon\u0026gt;   bookmark bookmark icon \u0026lt;mat-icon\u0026gt;bookmark\u0026lt;\u0026#47;mat-icon\u0026gt;   bookmark_border bookmark border icon \u0026lt;mat-icon\u0026gt;bookmark_border\u0026lt;\u0026#47;mat-icon\u0026gt;   bug_report bug report icon \u0026lt;mat-icon\u0026gt;bug_report\u0026lt;\u0026#47;mat-icon\u0026gt;   build build icon \u0026lt;mat-icon\u0026gt;build\u0026lt;\u0026#47;mat-icon\u0026gt;   cached cached icon \u0026lt;mat-icon\u0026gt;cached\u0026lt;\u0026#47;mat-icon\u0026gt;   calendar_today calendar today icon \u0026lt;mat-icon\u0026gt;calendar_today\u0026lt;\u0026#47;mat-icon\u0026gt;   calendar_view_day calendar view day icon \u0026lt;mat-icon\u0026gt;calendar_view_day\u0026lt;\u0026#47;mat-icon\u0026gt;   camera_enhance camera enhance icon \u0026lt;mat-icon\u0026gt;camera_enhance\u0026lt;\u0026#47;mat-icon\u0026gt;   card_giftcard card giftcard icon \u0026lt;mat-icon\u0026gt;card_giftcard\u0026lt;\u0026#47;mat-icon\u0026gt;   card_membership card membership icon \u0026lt;mat-icon\u0026gt;card_membership\u0026lt;\u0026#47;mat-icon\u0026gt;   card_travel card travel icon \u0026lt;mat-icon\u0026gt;card_travel\u0026lt;\u0026#47;mat-icon\u0026gt;   change_history change history icon \u0026lt;mat-icon\u0026gt;change_history\u0026lt;\u0026#47;mat-icon\u0026gt;   check_circle check circle icon \u0026lt;mat-icon\u0026gt;check_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   check_circle_outline check circle outline icon \u0026lt;mat-icon\u0026gt;check_circle_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   chrome_reader_mode chrome reader mode icon \u0026lt;mat-icon\u0026gt;chrome_reader_mode\u0026lt;\u0026#47;mat-icon\u0026gt;   class class icon \u0026lt;mat-icon\u0026gt;class\u0026lt;\u0026#47;mat-icon\u0026gt;   code code icon \u0026lt;mat-icon\u0026gt;code\u0026lt;\u0026#47;mat-icon\u0026gt;   commute commute icon \u0026lt;mat-icon\u0026gt;commute\u0026lt;\u0026#47;mat-icon\u0026gt;   compare_arrows compare arrows icon \u0026lt;mat-icon\u0026gt;compare_arrows\u0026lt;\u0026#47;mat-icon\u0026gt;   contact_support contact support icon \u0026lt;mat-icon\u0026gt;contact_support\u0026lt;\u0026#47;mat-icon\u0026gt;   copyright copyright icon \u0026lt;mat-icon\u0026gt;copyright\u0026lt;\u0026#47;mat-icon\u0026gt;   credit_card credit card icon \u0026lt;mat-icon\u0026gt;credit_card\u0026lt;\u0026#47;mat-icon\u0026gt;   dashboard dashboard icon \u0026lt;mat-icon\u0026gt;dashboard\u0026lt;\u0026#47;mat-icon\u0026gt;   date_range date range icon \u0026lt;mat-icon\u0026gt;date_range\u0026lt;\u0026#47;mat-icon\u0026gt;   delete delete icon \u0026lt;mat-icon\u0026gt;delete\u0026lt;\u0026#47;mat-icon\u0026gt;   delete_forever delete forever icon \u0026lt;mat-icon\u0026gt;delete_forever\u0026lt;\u0026#47;mat-icon\u0026gt;   delete_outline delete outline icon \u0026lt;mat-icon\u0026gt;delete_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   description description icon \u0026lt;mat-icon\u0026gt;description\u0026lt;\u0026#47;mat-icon\u0026gt;   dns dns icon \u0026lt;mat-icon\u0026gt;dns\u0026lt;\u0026#47;mat-icon\u0026gt;   done done icon \u0026lt;mat-icon\u0026gt;done\u0026lt;\u0026#47;mat-icon\u0026gt;   done_all done all icon \u0026lt;mat-icon\u0026gt;done_all\u0026lt;\u0026#47;mat-icon\u0026gt;   done_outline done outline icon \u0026lt;mat-icon\u0026gt;done_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   donut_large donut large icon \u0026lt;mat-icon\u0026gt;donut_large\u0026lt;\u0026#47;mat-icon\u0026gt;   donut_small donut small icon \u0026lt;mat-icon\u0026gt;donut_small\u0026lt;\u0026#47;mat-icon\u0026gt;   drag_indicator drag indicator icon \u0026lt;mat-icon\u0026gt;drag_indicator\u0026lt;\u0026#47;mat-icon\u0026gt;   eject eject icon \u0026lt;mat-icon\u0026gt;eject\u0026lt;\u0026#47;mat-icon\u0026gt;   euro_symbol euro symbol icon \u0026lt;mat-icon\u0026gt;euro_symbol\u0026lt;\u0026#47;mat-icon\u0026gt;   event event icon \u0026lt;mat-icon\u0026gt;event\u0026lt;\u0026#47;mat-icon\u0026gt;   event_seat event seat icon \u0026lt;mat-icon\u0026gt;event_seat\u0026lt;\u0026#47;mat-icon\u0026gt;   exit_to_app exit to app icon \u0026lt;mat-icon\u0026gt;exit_to_app\u0026lt;\u0026#47;mat-icon\u0026gt;   explore explore icon \u0026lt;mat-icon\u0026gt;explore\u0026lt;\u0026#47;mat-icon\u0026gt;   extension extension icon \u0026lt;mat-icon\u0026gt;extension\u0026lt;\u0026#47;mat-icon\u0026gt;   face face icon \u0026lt;mat-icon\u0026gt;face\u0026lt;\u0026#47;mat-icon\u0026gt;   favorite favorite icon \u0026lt;mat-icon\u0026gt;favorite\u0026lt;\u0026#47;mat-icon\u0026gt;   favorite_border favorite border icon \u0026lt;mat-icon\u0026gt;favorite_border\u0026lt;\u0026#47;mat-icon\u0026gt;   feedback feedback icon \u0026lt;mat-icon\u0026gt;feedback\u0026lt;\u0026#47;mat-icon\u0026gt;   find_in_page find in page icon \u0026lt;mat-icon\u0026gt;find_in_page\u0026lt;\u0026#47;mat-icon\u0026gt;   find_replace find replace icon \u0026lt;mat-icon\u0026gt;find_replace\u0026lt;\u0026#47;mat-icon\u0026gt;   fingerprint fingerprint icon \u0026lt;mat-icon\u0026gt;fingerprint\u0026lt;\u0026#47;mat-icon\u0026gt;   flight_land flight land icon \u0026lt;mat-icon\u0026gt;flight_land\u0026lt;\u0026#47;mat-icon\u0026gt;   flight_takeoff flight takeoff icon \u0026lt;mat-icon\u0026gt;flight_takeoff\u0026lt;\u0026#47;mat-icon\u0026gt;   flip_to_back flip to back icon \u0026lt;mat-icon\u0026gt;flip_to_back\u0026lt;\u0026#47;mat-icon\u0026gt;   flip_to_front flip to front icon \u0026lt;mat-icon\u0026gt;flip_to_front\u0026lt;\u0026#47;mat-icon\u0026gt;   g_translate g translate icon \u0026lt;mat-icon\u0026gt;g_translate\u0026lt;\u0026#47;mat-icon\u0026gt;   gavel gavel icon \u0026lt;mat-icon\u0026gt;gavel\u0026lt;\u0026#47;mat-icon\u0026gt;   get_app get app icon \u0026lt;mat-icon\u0026gt;get_app\u0026lt;\u0026#47;mat-icon\u0026gt;   gif gif icon \u0026lt;mat-icon\u0026gt;gif\u0026lt;\u0026#47;mat-icon\u0026gt;   grade grade icon \u0026lt;mat-icon\u0026gt;grade\u0026lt;\u0026#47;mat-icon\u0026gt;   group_work group work icon \u0026lt;mat-icon\u0026gt;group_work\u0026lt;\u0026#47;mat-icon\u0026gt;   help help icon \u0026lt;mat-icon\u0026gt;help\u0026lt;\u0026#47;mat-icon\u0026gt;   help_outline help outline icon \u0026lt;mat-icon\u0026gt;help_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   highlight_off highlight off icon \u0026lt;mat-icon\u0026gt;highlight_off\u0026lt;\u0026#47;mat-icon\u0026gt;   history history icon \u0026lt;mat-icon\u0026gt;history\u0026lt;\u0026#47;mat-icon\u0026gt;   home home icon \u0026lt;mat-icon\u0026gt;home\u0026lt;\u0026#47;mat-icon\u0026gt;   horizontal_split horizontal split icon \u0026lt;mat-icon\u0026gt;horizontal_split\u0026lt;\u0026#47;mat-icon\u0026gt;   hourglass_empty hourglass empty icon \u0026lt;mat-icon\u0026gt;hourglass_empty\u0026lt;\u0026#47;mat-icon\u0026gt;   hourglass_full hourglass full icon \u0026lt;mat-icon\u0026gt;hourglass_full\u0026lt;\u0026#47;mat-icon\u0026gt;   http http icon \u0026lt;mat-icon\u0026gt;http\u0026lt;\u0026#47;mat-icon\u0026gt;   https https icon \u0026lt;mat-icon\u0026gt;https\u0026lt;\u0026#47;mat-icon\u0026gt;   important_devices important devices icon \u0026lt;mat-icon\u0026gt;important_devices\u0026lt;\u0026#47;mat-icon\u0026gt;   info info icon \u0026lt;mat-icon\u0026gt;info\u0026lt;\u0026#47;mat-icon\u0026gt;   input input icon \u0026lt;mat-icon\u0026gt;input\u0026lt;\u0026#47;mat-icon\u0026gt;   invert_colors invert colors icon \u0026lt;mat-icon\u0026gt;invert_colors\u0026lt;\u0026#47;mat-icon\u0026gt;   label label icon \u0026lt;mat-icon\u0026gt;label\u0026lt;\u0026#47;mat-icon\u0026gt;   label_important label important icon \u0026lt;mat-icon\u0026gt;label_important\u0026lt;\u0026#47;mat-icon\u0026gt;   language language icon \u0026lt;mat-icon\u0026gt;language\u0026lt;\u0026#47;mat-icon\u0026gt;   launch launch icon \u0026lt;mat-icon\u0026gt;launch\u0026lt;\u0026#47;mat-icon\u0026gt;   line_style line style icon \u0026lt;mat-icon\u0026gt;line_style\u0026lt;\u0026#47;mat-icon\u0026gt;   line_weight line weight icon \u0026lt;mat-icon\u0026gt;line_weight\u0026lt;\u0026#47;mat-icon\u0026gt;   list list icon \u0026lt;mat-icon\u0026gt;list\u0026lt;\u0026#47;mat-icon\u0026gt;   lock lock icon \u0026lt;mat-icon\u0026gt;lock\u0026lt;\u0026#47;mat-icon\u0026gt;   lock_open lock open icon \u0026lt;mat-icon\u0026gt;lock_open\u0026lt;\u0026#47;mat-icon\u0026gt;   loyalty loyalty icon \u0026lt;mat-icon\u0026gt;loyalty\u0026lt;\u0026#47;mat-icon\u0026gt;   markunread_mailbox markunread mailbox icon \u0026lt;mat-icon\u0026gt;markunread_mailbox\u0026lt;\u0026#47;mat-icon\u0026gt;   maximize maximize icon \u0026lt;mat-icon\u0026gt;maximize\u0026lt;\u0026#47;mat-icon\u0026gt;   minimize minimize icon \u0026lt;mat-icon\u0026gt;minimize\u0026lt;\u0026#47;mat-icon\u0026gt;   motorcycle motorcycle icon \u0026lt;mat-icon\u0026gt;motorcycle\u0026lt;\u0026#47;mat-icon\u0026gt;   note_add note add icon \u0026lt;mat-icon\u0026gt;note_add\u0026lt;\u0026#47;mat-icon\u0026gt;   offline_bolt offline bolt icon \u0026lt;mat-icon\u0026gt;offline_bolt\u0026lt;\u0026#47;mat-icon\u0026gt;   offline_pin offline pin icon \u0026lt;mat-icon\u0026gt;offline_pin\u0026lt;\u0026#47;mat-icon\u0026gt;   opacity opacity icon \u0026lt;mat-icon\u0026gt;opacity\u0026lt;\u0026#47;mat-icon\u0026gt;   open_in_browser open in browser icon \u0026lt;mat-icon\u0026gt;open_in_browser\u0026lt;\u0026#47;mat-icon\u0026gt;   open_in_new open in new icon \u0026lt;mat-icon\u0026gt;open_in_new\u0026lt;\u0026#47;mat-icon\u0026gt;   open_with open with icon \u0026lt;mat-icon\u0026gt;open_with\u0026lt;\u0026#47;mat-icon\u0026gt;   pageview pageview icon \u0026lt;mat-icon\u0026gt;pageview\u0026lt;\u0026#47;mat-icon\u0026gt;   pan_tool pan tool icon \u0026lt;mat-icon\u0026gt;pan_tool\u0026lt;\u0026#47;mat-icon\u0026gt;   payment payment icon \u0026lt;mat-icon\u0026gt;payment\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_camera_mic perm camera mic icon \u0026lt;mat-icon\u0026gt;perm_camera_mic\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_contact_calendar perm contact calendar icon \u0026lt;mat-icon\u0026gt;perm_contact_calendar\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_data_setting perm data setting icon \u0026lt;mat-icon\u0026gt;perm_data_setting\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_device_information perm device information icon \u0026lt;mat-icon\u0026gt;perm_device_information\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_identity perm identity icon \u0026lt;mat-icon\u0026gt;perm_identity\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_media perm media icon \u0026lt;mat-icon\u0026gt;perm_media\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_phone_msg perm phone msg icon \u0026lt;mat-icon\u0026gt;perm_phone_msg\u0026lt;\u0026#47;mat-icon\u0026gt;   perm_scan_wifi perm scan wifi icon \u0026lt;mat-icon\u0026gt;perm_scan_wifi\u0026lt;\u0026#47;mat-icon\u0026gt;   pets pets icon \u0026lt;mat-icon\u0026gt;pets\u0026lt;\u0026#47;mat-icon\u0026gt;   picture_in_picture picture in picture icon \u0026lt;mat-icon\u0026gt;picture_in_picture\u0026lt;\u0026#47;mat-icon\u0026gt;   picture_in_picture_alt picture in picture alt icon \u0026lt;mat-icon\u0026gt;picture_in_picture_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   play_for_work play for work icon \u0026lt;mat-icon\u0026gt;play_for_work\u0026lt;\u0026#47;mat-icon\u0026gt;   polymer polymer icon \u0026lt;mat-icon\u0026gt;polymer\u0026lt;\u0026#47;mat-icon\u0026gt;   power_settings_new power settings new icon \u0026lt;mat-icon\u0026gt;power_settings_new\u0026lt;\u0026#47;mat-icon\u0026gt;   pregnant_woman pregnant woman icon \u0026lt;mat-icon\u0026gt;pregnant_woman\u0026lt;\u0026#47;mat-icon\u0026gt;   print print icon \u0026lt;mat-icon\u0026gt;print\u0026lt;\u0026#47;mat-icon\u0026gt;   query_builder query builder icon \u0026lt;mat-icon\u0026gt;query_builder\u0026lt;\u0026#47;mat-icon\u0026gt;   question_answer question answer icon \u0026lt;mat-icon\u0026gt;question_answer\u0026lt;\u0026#47;mat-icon\u0026gt;   receipt receipt icon \u0026lt;mat-icon\u0026gt;receipt\u0026lt;\u0026#47;mat-icon\u0026gt;   record_voice_over record voice over icon \u0026lt;mat-icon\u0026gt;record_voice_over\u0026lt;\u0026#47;mat-icon\u0026gt;   redeem redeem icon \u0026lt;mat-icon\u0026gt;redeem\u0026lt;\u0026#47;mat-icon\u0026gt;   remove_shopping_cart remove shopping cart icon \u0026lt;mat-icon\u0026gt;remove_shopping_cart\u0026lt;\u0026#47;mat-icon\u0026gt;   reorder reorder icon \u0026lt;mat-icon\u0026gt;reorder\u0026lt;\u0026#47;mat-icon\u0026gt;   report_problem report problem icon \u0026lt;mat-icon\u0026gt;report_problem\u0026lt;\u0026#47;mat-icon\u0026gt;   restore restore icon \u0026lt;mat-icon\u0026gt;restore\u0026lt;\u0026#47;mat-icon\u0026gt;   restore_from_trash restore from trash icon \u0026lt;mat-icon\u0026gt;restore_from_trash\u0026lt;\u0026#47;mat-icon\u0026gt;   restore_page restore page icon \u0026lt;mat-icon\u0026gt;restore_page\u0026lt;\u0026#47;mat-icon\u0026gt;   room room icon \u0026lt;mat-icon\u0026gt;room\u0026lt;\u0026#47;mat-icon\u0026gt;   rounded_corner rounded corner icon \u0026lt;mat-icon\u0026gt;rounded_corner\u0026lt;\u0026#47;mat-icon\u0026gt;   rowing rowing icon \u0026lt;mat-icon\u0026gt;rowing\u0026lt;\u0026#47;mat-icon\u0026gt;   schedule schedule icon \u0026lt;mat-icon\u0026gt;schedule\u0026lt;\u0026#47;mat-icon\u0026gt;   search search icon \u0026lt;mat-icon\u0026gt;search\u0026lt;\u0026#47;mat-icon\u0026gt;   settings settings icon \u0026lt;mat-icon\u0026gt;settings\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_applications settings applications icon \u0026lt;mat-icon\u0026gt;settings_applications\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_backup_restore settings backup restore icon \u0026lt;mat-icon\u0026gt;settings_backup_restore\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_bluetooth settings bluetooth icon \u0026lt;mat-icon\u0026gt;settings_bluetooth\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_brightness settings brightness icon \u0026lt;mat-icon\u0026gt;settings_brightness\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_cell settings cell icon \u0026lt;mat-icon\u0026gt;settings_cell\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_ethernet settings ethernet icon \u0026lt;mat-icon\u0026gt;settings_ethernet\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_input_antenna settings input antenna icon \u0026lt;mat-icon\u0026gt;settings_input_antenna\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_input_component settings input component icon \u0026lt;mat-icon\u0026gt;settings_input_component\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_input_composite settings input composite icon \u0026lt;mat-icon\u0026gt;settings_input_composite\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_input_hdmi settings input hdmi icon \u0026lt;mat-icon\u0026gt;settings_input_hdmi\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_input_svideo settings input svideo icon \u0026lt;mat-icon\u0026gt;settings_input_svideo\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_overscan settings overscan icon \u0026lt;mat-icon\u0026gt;settings_overscan\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_phone settings phone icon \u0026lt;mat-icon\u0026gt;settings_phone\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_power settings power icon \u0026lt;mat-icon\u0026gt;settings_power\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_remote settings remote icon \u0026lt;mat-icon\u0026gt;settings_remote\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_voice settings voice icon \u0026lt;mat-icon\u0026gt;settings_voice\u0026lt;\u0026#47;mat-icon\u0026gt;   shop shop icon \u0026lt;mat-icon\u0026gt;shop\u0026lt;\u0026#47;mat-icon\u0026gt;   shop_two shop two icon \u0026lt;mat-icon\u0026gt;shop_two\u0026lt;\u0026#47;mat-icon\u0026gt;   shopping_basket shopping basket icon \u0026lt;mat-icon\u0026gt;shopping_basket\u0026lt;\u0026#47;mat-icon\u0026gt;   shopping_cart shopping cart icon \u0026lt;mat-icon\u0026gt;shopping_cart\u0026lt;\u0026#47;mat-icon\u0026gt;   speaker_notes speaker notes icon \u0026lt;mat-icon\u0026gt;speaker_notes\u0026lt;\u0026#47;mat-icon\u0026gt;   speaker_notes_off speaker notes off icon \u0026lt;mat-icon\u0026gt;speaker_notes_off\u0026lt;\u0026#47;mat-icon\u0026gt;   spellcheck spellcheck icon \u0026lt;mat-icon\u0026gt;spellcheck\u0026lt;\u0026#47;mat-icon\u0026gt;   stars stars icon \u0026lt;mat-icon\u0026gt;stars\u0026lt;\u0026#47;mat-icon\u0026gt;   store store icon \u0026lt;mat-icon\u0026gt;store\u0026lt;\u0026#47;mat-icon\u0026gt;   subject subject icon \u0026lt;mat-icon\u0026gt;subject\u0026lt;\u0026#47;mat-icon\u0026gt;   supervised_user_circle supervised user circle icon \u0026lt;mat-icon\u0026gt;supervised_user_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   supervisor_account supervisor account icon \u0026lt;mat-icon\u0026gt;supervisor_account\u0026lt;\u0026#47;mat-icon\u0026gt;   swap_horiz swap horiz icon \u0026lt;mat-icon\u0026gt;swap_horiz\u0026lt;\u0026#47;mat-icon\u0026gt;   swap_horizontal_circle swap horizontal circle icon \u0026lt;mat-icon\u0026gt;swap_horizontal_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   swap_vert swap vert icon \u0026lt;mat-icon\u0026gt;swap_vert\u0026lt;\u0026#47;mat-icon\u0026gt;   swap_vertical_circle swap vertical circle icon \u0026lt;mat-icon\u0026gt;swap_vertical_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   tab tab icon \u0026lt;mat-icon\u0026gt;tab\u0026lt;\u0026#47;mat-icon\u0026gt;   tab_unselected tab unselected icon \u0026lt;mat-icon\u0026gt;tab_unselected\u0026lt;\u0026#47;mat-icon\u0026gt;   text_rotate_up text rotate up icon \u0026lt;mat-icon\u0026gt;text_rotate_up\u0026lt;\u0026#47;mat-icon\u0026gt;   text_rotate_vertical text rotate vertical icon \u0026lt;mat-icon\u0026gt;text_rotate_vertical\u0026lt;\u0026#47;mat-icon\u0026gt;   text_rotation_down text rotation down icon \u0026lt;mat-icon\u0026gt;text_rotation_down\u0026lt;\u0026#47;mat-icon\u0026gt;   text_rotation_none text rotation none icon \u0026lt;mat-icon\u0026gt;text_rotation_none\u0026lt;\u0026#47;mat-icon\u0026gt;   theaters theaters icon \u0026lt;mat-icon\u0026gt;theaters\u0026lt;\u0026#47;mat-icon\u0026gt;   thumb_down thumb down icon \u0026lt;mat-icon\u0026gt;thumb_down\u0026lt;\u0026#47;mat-icon\u0026gt;   thumb_up thumb up icon \u0026lt;mat-icon\u0026gt;thumb_up\u0026lt;\u0026#47;mat-icon\u0026gt;   thumbs_up_down thumbs up down icon \u0026lt;mat-icon\u0026gt;thumbs_up_down\u0026lt;\u0026#47;mat-icon\u0026gt;   timeline timeline icon \u0026lt;mat-icon\u0026gt;timeline\u0026lt;\u0026#47;mat-icon\u0026gt;   toc toc icon \u0026lt;mat-icon\u0026gt;toc\u0026lt;\u0026#47;mat-icon\u0026gt;   today today icon \u0026lt;mat-icon\u0026gt;today\u0026lt;\u0026#47;mat-icon\u0026gt;   toll toll icon \u0026lt;mat-icon\u0026gt;toll\u0026lt;\u0026#47;mat-icon\u0026gt;   touch_app touch app icon \u0026lt;mat-icon\u0026gt;touch_app\u0026lt;\u0026#47;mat-icon\u0026gt;   track_changes track changes icon \u0026lt;mat-icon\u0026gt;track_changes\u0026lt;\u0026#47;mat-icon\u0026gt;   translate translate icon \u0026lt;mat-icon\u0026gt;translate\u0026lt;\u0026#47;mat-icon\u0026gt;   trending_down trending down icon \u0026lt;mat-icon\u0026gt;trending_down\u0026lt;\u0026#47;mat-icon\u0026gt;   trending_flat trending flat icon \u0026lt;mat-icon\u0026gt;trending_flat\u0026lt;\u0026#47;mat-icon\u0026gt;   trending_up trending up icon \u0026lt;mat-icon\u0026gt;trending_up\u0026lt;\u0026#47;mat-icon\u0026gt;   turned_in turned in icon \u0026lt;mat-icon\u0026gt;turned_in\u0026lt;\u0026#47;mat-icon\u0026gt;   turned_in_not turned in not icon \u0026lt;mat-icon\u0026gt;turned_in_not\u0026lt;\u0026#47;mat-icon\u0026gt;   update update icon \u0026lt;mat-icon\u0026gt;update\u0026lt;\u0026#47;mat-icon\u0026gt;   verified_user verified user icon \u0026lt;mat-icon\u0026gt;verified_user\u0026lt;\u0026#47;mat-icon\u0026gt;   vertical_split vertical split icon \u0026lt;mat-icon\u0026gt;vertical_split\u0026lt;\u0026#47;mat-icon\u0026gt;   view_agenda view agenda icon \u0026lt;mat-icon\u0026gt;view_agenda\u0026lt;\u0026#47;mat-icon\u0026gt;   view_array view array icon \u0026lt;mat-icon\u0026gt;view_array\u0026lt;\u0026#47;mat-icon\u0026gt;   view_carousel view carousel icon \u0026lt;mat-icon\u0026gt;view_carousel\u0026lt;\u0026#47;mat-icon\u0026gt;   view_column view column icon \u0026lt;mat-icon\u0026gt;view_column\u0026lt;\u0026#47;mat-icon\u0026gt;   view_day view day icon \u0026lt;mat-icon\u0026gt;view_day\u0026lt;\u0026#47;mat-icon\u0026gt;   view_headline view headline icon \u0026lt;mat-icon\u0026gt;view_headline\u0026lt;\u0026#47;mat-icon\u0026gt;   view_list view list icon \u0026lt;mat-icon\u0026gt;view_list\u0026lt;\u0026#47;mat-icon\u0026gt;   view_module view module icon \u0026lt;mat-icon\u0026gt;view_module\u0026lt;\u0026#47;mat-icon\u0026gt;   view_quilt view quilt icon \u0026lt;mat-icon\u0026gt;view_quilt\u0026lt;\u0026#47;mat-icon\u0026gt;   view_stream view stream icon \u0026lt;mat-icon\u0026gt;view_stream\u0026lt;\u0026#47;mat-icon\u0026gt;   view_week view week icon \u0026lt;mat-icon\u0026gt;view_week\u0026lt;\u0026#47;mat-icon\u0026gt;   visibility visibility icon \u0026lt;mat-icon\u0026gt;visibility\u0026lt;\u0026#47;mat-icon\u0026gt;   visibility_off visibility off icon \u0026lt;mat-icon\u0026gt;visibility_off\u0026lt;\u0026#47;mat-icon\u0026gt;   voice_over_off voice over off icon \u0026lt;mat-icon\u0026gt;voice_over_off\u0026lt;\u0026#47;mat-icon\u0026gt;   watch_later watch later icon \u0026lt;mat-icon\u0026gt;watch_later\u0026lt;\u0026#47;mat-icon\u0026gt;   work work icon \u0026lt;mat-icon\u0026gt;work\u0026lt;\u0026#47;mat-icon\u0026gt;   work_off work off icon \u0026lt;mat-icon\u0026gt;work_off\u0026lt;\u0026#47;mat-icon\u0026gt;   work_outline work outline icon \u0026lt;mat-icon\u0026gt;work_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   youtube_searched_for youtube searched for icon \u0026lt;mat-icon\u0026gt;youtube_searched_for\u0026lt;\u0026#47;mat-icon\u0026gt;   zoom_in zoom in icon \u0026lt;mat-icon\u0026gt;zoom_in\u0026lt;\u0026#47;mat-icon\u0026gt;   zoom_out zoom out icon \u0026lt;mat-icon\u0026gt;zoom_out\u0026lt;\u0026#47;mat-icon\u0026gt;     mat-icon List Category-Communication   Icon Name mat-icon code     alternate_email alternate email icon \u0026lt;mat-icon\u0026gt;alternate_email\u0026lt;\u0026#47;mat-icon\u0026gt;   business business icon \u0026lt;mat-icon\u0026gt; business\u0026lt;\u0026#47;mat-icon\u0026gt;   call call icon \u0026lt;mat-icon\u0026gt; call\u0026lt;\u0026#47;mat-icon\u0026gt;   call_end call end icon \u0026lt;mat-icon\u0026gt; call_end\u0026lt;\u0026#47;mat-icon\u0026gt;   call_made call made icon \u0026lt;mat-icon\u0026gt; call_made\u0026lt;\u0026#47;mat-icon\u0026gt;   call_merge call merge icon \u0026lt;mat-icon\u0026gt; call_merge\u0026lt;\u0026#47;mat-icon\u0026gt;   call_missed call missed icon \u0026lt;mat-icon\u0026gt; call_missed\u0026lt;\u0026#47;mat-icon\u0026gt;   call_missed_outgoing call missed outgoing icon \u0026lt;mat-icon\u0026gt; call_missed_outgoing\u0026lt;\u0026#47;mat-icon\u0026gt;   call_received call received icon \u0026lt;mat-icon\u0026gt; call_received\u0026lt;\u0026#47;mat-icon\u0026gt;   call_split call split icon \u0026lt;mat-icon\u0026gt; call_split\u0026lt;\u0026#47;mat-icon\u0026gt;   cancel_presentation cancel presentation icon \u0026lt;mat-icon\u0026gt; cancel_presentation\u0026lt;\u0026#47;mat-icon\u0026gt;   cell_wifi cell wifi icon \u0026lt;mat-icon\u0026gt; cell_wifi\u0026lt;\u0026#47;mat-icon\u0026gt;   chat chat icon \u0026lt;mat-icon\u0026gt; chat\u0026lt;\u0026#47;mat-icon\u0026gt;   chat_bubble chat bubble icon \u0026lt;mat-icon\u0026gt; chat_bubble\u0026lt;\u0026#47;mat-icon\u0026gt;   chat_bubble_outline chat bubble outline icon \u0026lt;mat-icon\u0026gt; chat_bubble_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   clear_all clear all icon \u0026lt;mat-icon\u0026gt; clear_all\u0026lt;\u0026#47;mat-icon\u0026gt;   comment comment icon \u0026lt;mat-icon\u0026gt; comment\u0026lt;\u0026#47;mat-icon\u0026gt;   contact_mail contact mail icon \u0026lt;mat-icon\u0026gt; contact_mail\u0026lt;\u0026#47;mat-icon\u0026gt;   contact_phone contact phone icon \u0026lt;mat-icon\u0026gt; contact_phone\u0026lt;\u0026#47;mat-icon\u0026gt;   contacts contacts icon \u0026lt;mat-icon\u0026gt; contacts\u0026lt;\u0026#47;mat-icon\u0026gt;   dialer_sip dialer sip icon \u0026lt;mat-icon\u0026gt; dialer_sip\u0026lt;\u0026#47;mat-icon\u0026gt;   dialpad dialpad icon \u0026lt;mat-icon\u0026gt; dialpad\u0026lt;\u0026#47;mat-icon\u0026gt;   domain_disabled domain disabled icon \u0026lt;mat-icon\u0026gt; domain_disabled\u0026lt;\u0026#47;mat-icon\u0026gt;   email email icon \u0026lt;mat-icon\u0026gt; email\u0026lt;\u0026#47;mat-icon\u0026gt;   forum forum icon \u0026lt;mat-icon\u0026gt; forum\u0026lt;\u0026#47;mat-icon\u0026gt;   import_contacts import contacts icon \u0026lt;mat-icon\u0026gt; import_contacts\u0026lt;\u0026#47;mat-icon\u0026gt;   import_export import export icon \u0026lt;mat-icon\u0026gt; import_export\u0026lt;\u0026#47;mat-icon\u0026gt;   invert_colors_off invert colors off icon \u0026lt;mat-icon\u0026gt; invert_colors_off\u0026lt;\u0026#47;mat-icon\u0026gt;   list_alt list alt icon \u0026lt;mat-icon\u0026gt; list_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   live_help live help icon \u0026lt;mat-icon\u0026gt; live_help\u0026lt;\u0026#47;mat-icon\u0026gt;   location_off location off icon \u0026lt;mat-icon\u0026gt; location_off\u0026lt;\u0026#47;mat-icon\u0026gt;   location_on location on icon \u0026lt;mat-icon\u0026gt; location_on\u0026lt;\u0026#47;mat-icon\u0026gt;   mail_outline mail outline icon \u0026lt;mat-icon\u0026gt; mail_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   message message icon \u0026lt;mat-icon\u0026gt; message\u0026lt;\u0026#47;mat-icon\u0026gt;   mobile_screen_share mobile screen share icon \u0026lt;mat-icon\u0026gt; mobile_screen_share\u0026lt;\u0026#47;mat-icon\u0026gt;   no_sim no sim icon \u0026lt;mat-icon\u0026gt; no_sim\u0026lt;\u0026#47;mat-icon\u0026gt;   pause_presentation pause presentation icon \u0026lt;mat-icon\u0026gt; pause_presentation\u0026lt;\u0026#47;mat-icon\u0026gt;   phone phone icon \u0026lt;mat-icon\u0026gt; phone\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink_erase phonelink erase icon \u0026lt;mat-icon\u0026gt; phonelink_erase\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink_lock phonelink lock icon \u0026lt;mat-icon\u0026gt; phonelink_lock\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink_ring phonelink ring icon \u0026lt;mat-icon\u0026gt; phonelink_ring\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink_setup phonelink setup icon \u0026lt;mat-icon\u0026gt; phonelink_setup\u0026lt;\u0026#47;mat-icon\u0026gt;   portable_wifi_off portable wifi off icon \u0026lt;mat-icon\u0026gt; portable_wifi_off\u0026lt;\u0026#47;mat-icon\u0026gt;   present_to_all present to all icon \u0026lt;mat-icon\u0026gt; present_to_all\u0026lt;\u0026#47;mat-icon\u0026gt;   ring_volume ring volume icon \u0026lt;mat-icon\u0026gt; ring_volume\u0026lt;\u0026#47;mat-icon\u0026gt;   rss_feed rss feed icon \u0026lt;mat-icon\u0026gt; rss_feed\u0026lt;\u0026#47;mat-icon\u0026gt;   screen_share screen share icon \u0026lt;mat-icon\u0026gt; screen_share\u0026lt;\u0026#47;mat-icon\u0026gt;   sentiment_satisfied_alt sentiment satisfied alt icon \u0026lt;mat-icon\u0026gt; sentiment_satisfied_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   speaker_phone speaker phone icon \u0026lt;mat-icon\u0026gt; speaker_phone\u0026lt;\u0026#47;mat-icon\u0026gt;   stay_current_landscape stay current landscape icon \u0026lt;mat-icon\u0026gt; stay_current_landscape\u0026lt;\u0026#47;mat-icon\u0026gt;   stay_current_portrait stay current portrait icon \u0026lt;mat-icon\u0026gt; stay_current_portrait\u0026lt;\u0026#47;mat-icon\u0026gt;   stay_primary_landscape stay primary landscape icon \u0026lt;mat-icon\u0026gt; stay_primary_landscape\u0026lt;\u0026#47;mat-icon\u0026gt;   stay_primary_portrait stay primary portrait icon \u0026lt;mat-icon\u0026gt; stay_primary_portrait\u0026lt;\u0026#47;mat-icon\u0026gt;   stop_screen_share stop screen share icon \u0026lt;mat-icon\u0026gt; stop_screen_share\u0026lt;\u0026#47;mat-icon\u0026gt;   swap_calls swap calls icon \u0026lt;mat-icon\u0026gt; swap_calls\u0026lt;\u0026#47;mat-icon\u0026gt;   textsms textsms icon \u0026lt;mat-icon\u0026gt; textsms\u0026lt;\u0026#47;mat-icon\u0026gt;   unsubscribe unsubscribe icon \u0026lt;mat-icon\u0026gt; unsubscribe\u0026lt;\u0026#47;mat-icon\u0026gt;   voicemail voicemail icon \u0026lt;mat-icon\u0026gt; voicemail\u0026lt;\u0026#47;mat-icon\u0026gt;   vpn_key vpn key icon \u0026lt;mat-icon\u0026gt; vpn_key\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Av   Icon Name mat-icon code     4k 4k icon \u0026lt;mat-icon\u0026gt;4k\u0026lt;\u0026#47;mat-icon\u0026gt;   add_to_queue add to queue icon \u0026lt;mat-icon\u0026gt;add_to_queue\u0026lt;\u0026#47;mat-icon\u0026gt;   airplay airplay icon \u0026lt;mat-icon\u0026gt;airplay\u0026lt;\u0026#47;mat-icon\u0026gt;   album album icon \u0026lt;mat-icon\u0026gt;album\u0026lt;\u0026#47;mat-icon\u0026gt;   art_track art track icon \u0026lt;mat-icon\u0026gt;art_track\u0026lt;\u0026#47;mat-icon\u0026gt;   av_timer av timer icon \u0026lt;mat-icon\u0026gt;av_timer\u0026lt;\u0026#47;mat-icon\u0026gt;   branding_watermark branding watermark icon \u0026lt;mat-icon\u0026gt;branding_watermark\u0026lt;\u0026#47;mat-icon\u0026gt;   call_to_action call to action icon \u0026lt;mat-icon\u0026gt;call_to_action\u0026lt;\u0026#47;mat-icon\u0026gt;   closed_caption closed caption icon \u0026lt;mat-icon\u0026gt;closed_caption\u0026lt;\u0026#47;mat-icon\u0026gt;   control_camera control camera icon \u0026lt;mat-icon\u0026gt;control_camera\u0026lt;\u0026#47;mat-icon\u0026gt;   equalizer equalizer icon \u0026lt;mat-icon\u0026gt;equalizer\u0026lt;\u0026#47;mat-icon\u0026gt;   explicit explicit icon \u0026lt;mat-icon\u0026gt;explicit\u0026lt;\u0026#47;mat-icon\u0026gt;   fast_forward fast forward icon \u0026lt;mat-icon\u0026gt;fast_forward\u0026lt;\u0026#47;mat-icon\u0026gt;   fast_rewind fast rewind icon \u0026lt;mat-icon\u0026gt;fast_rewind\u0026lt;\u0026#47;mat-icon\u0026gt;   featured_play_list featured play list icon \u0026lt;mat-icon\u0026gt;featured_play_list\u0026lt;\u0026#47;mat-icon\u0026gt;   featured_video featured video icon \u0026lt;mat-icon\u0026gt;featured_video\u0026lt;\u0026#47;mat-icon\u0026gt;   fiber_dvr fiber dvr icon \u0026lt;mat-icon\u0026gt;fiber_dvr\u0026lt;\u0026#47;mat-icon\u0026gt;   fiber_manual_record fiber manual record icon \u0026lt;mat-icon\u0026gt;fiber_manual_record\u0026lt;\u0026#47;mat-icon\u0026gt;   fiber_new fiber new icon \u0026lt;mat-icon\u0026gt;fiber_new\u0026lt;\u0026#47;mat-icon\u0026gt;   fiber_pin fiber pin icon \u0026lt;mat-icon\u0026gt;fiber_pin\u0026lt;\u0026#47;mat-icon\u0026gt;   fiber_smart_record fiber smart record icon \u0026lt;mat-icon\u0026gt;fiber_smart_record\u0026lt;\u0026#47;mat-icon\u0026gt;   forward_10 forward 10 icon \u0026lt;mat-icon\u0026gt;forward_10\u0026lt;\u0026#47;mat-icon\u0026gt;   forward_30 forward 30 icon \u0026lt;mat-icon\u0026gt;forward_30\u0026lt;\u0026#47;mat-icon\u0026gt;   forward_5 forward 5 icon \u0026lt;mat-icon\u0026gt;forward_5\u0026lt;\u0026#47;mat-icon\u0026gt;   games games icon \u0026lt;mat-icon\u0026gt;games\u0026lt;\u0026#47;mat-icon\u0026gt;   hd hd icon \u0026lt;mat-icon\u0026gt;hd\u0026lt;\u0026#47;mat-icon\u0026gt;   hearing hearing icon \u0026lt;mat-icon\u0026gt;hearing\u0026lt;\u0026#47;mat-icon\u0026gt;   high_quality high quality icon \u0026lt;mat-icon\u0026gt;high_quality\u0026lt;\u0026#47;mat-icon\u0026gt;   library_add library add icon \u0026lt;mat-icon\u0026gt;library_add\u0026lt;\u0026#47;mat-icon\u0026gt;   library_books library books icon \u0026lt;mat-icon\u0026gt;library_books\u0026lt;\u0026#47;mat-icon\u0026gt;   library_music library music icon \u0026lt;mat-icon\u0026gt;library_music\u0026lt;\u0026#47;mat-icon\u0026gt;   loop loop icon \u0026lt;mat-icon\u0026gt;loop\u0026lt;\u0026#47;mat-icon\u0026gt;   mic mic icon \u0026lt;mat-icon\u0026gt;mic\u0026lt;\u0026#47;mat-icon\u0026gt;   mic_none mic none icon \u0026lt;mat-icon\u0026gt;mic_none\u0026lt;\u0026#47;mat-icon\u0026gt;   mic_off mic off icon \u0026lt;mat-icon\u0026gt;mic_off\u0026lt;\u0026#47;mat-icon\u0026gt;   missed_video_call missed video call icon \u0026lt;mat-icon\u0026gt;missed_video_call\u0026lt;\u0026#47;mat-icon\u0026gt;   movie movie icon \u0026lt;mat-icon\u0026gt;movie\u0026lt;\u0026#47;mat-icon\u0026gt;   music_video music video icon \u0026lt;mat-icon\u0026gt;music_video\u0026lt;\u0026#47;mat-icon\u0026gt;   new_releases new releases icon \u0026lt;mat-icon\u0026gt;new_releases\u0026lt;\u0026#47;mat-icon\u0026gt;   not_interested not interested icon \u0026lt;mat-icon\u0026gt;not_interested\u0026lt;\u0026#47;mat-icon\u0026gt;   note note icon \u0026lt;mat-icon\u0026gt;note\u0026lt;\u0026#47;mat-icon\u0026gt;   pause pause icon \u0026lt;mat-icon\u0026gt;pause\u0026lt;\u0026#47;mat-icon\u0026gt;   pause_circle_filled pause circle filled icon \u0026lt;mat-icon\u0026gt;pause_circle_filled\u0026lt;\u0026#47;mat-icon\u0026gt;   pause_circle_outline pause circle outline icon \u0026lt;mat-icon\u0026gt;pause_circle_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   play_arrow play arrow icon \u0026lt;mat-icon\u0026gt;play_arrow\u0026lt;\u0026#47;mat-icon\u0026gt;   play_circle_filled play circle filled icon \u0026lt;mat-icon\u0026gt;play_circle_filled\u0026lt;\u0026#47;mat-icon\u0026gt;   play_circle_outline play circle outline icon \u0026lt;mat-icon\u0026gt;play_circle_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   playlist_add playlist add icon \u0026lt;mat-icon\u0026gt;playlist_add\u0026lt;\u0026#47;mat-icon\u0026gt;   playlist_add_check playlist add check icon \u0026lt;mat-icon\u0026gt;playlist_add_check\u0026lt;\u0026#47;mat-icon\u0026gt;   playlist_play playlist play icon \u0026lt;mat-icon\u0026gt;playlist_play\u0026lt;\u0026#47;mat-icon\u0026gt;   queue queue icon \u0026lt;mat-icon\u0026gt;queue\u0026lt;\u0026#47;mat-icon\u0026gt;   queue_music queue music icon \u0026lt;mat-icon\u0026gt;queue_music\u0026lt;\u0026#47;mat-icon\u0026gt;   queue_play_next queue play next icon \u0026lt;mat-icon\u0026gt;queue_play_next\u0026lt;\u0026#47;mat-icon\u0026gt;   radio radio icon \u0026lt;mat-icon\u0026gt;radio\u0026lt;\u0026#47;mat-icon\u0026gt;   recent_actors recent actors icon \u0026lt;mat-icon\u0026gt;recent_actors\u0026lt;\u0026#47;mat-icon\u0026gt;   remove_from_queue remove from queue icon \u0026lt;mat-icon\u0026gt;remove_from_queue\u0026lt;\u0026#47;mat-icon\u0026gt;   repeat repeat icon \u0026lt;mat-icon\u0026gt;repeat\u0026lt;\u0026#47;mat-icon\u0026gt;   repeat_one repeat one icon \u0026lt;mat-icon\u0026gt;repeat_one\u0026lt;\u0026#47;mat-icon\u0026gt;   replay replay icon \u0026lt;mat-icon\u0026gt;replay\u0026lt;\u0026#47;mat-icon\u0026gt;   replay_10 replay 10 icon \u0026lt;mat-icon\u0026gt;replay_10\u0026lt;\u0026#47;mat-icon\u0026gt;   replay_30 replay 30 icon \u0026lt;mat-icon\u0026gt;replay_30\u0026lt;\u0026#47;mat-icon\u0026gt;   replay_5 replay 5 icon \u0026lt;mat-icon\u0026gt;replay_5\u0026lt;\u0026#47;mat-icon\u0026gt;   shuffle shuffle icon \u0026lt;mat-icon\u0026gt;shuffle\u0026lt;\u0026#47;mat-icon\u0026gt;   skip_next skip next icon \u0026lt;mat-icon\u0026gt;skip_next\u0026lt;\u0026#47;mat-icon\u0026gt;   skip_previous skip previous icon \u0026lt;mat-icon\u0026gt;skip_previous\u0026lt;\u0026#47;mat-icon\u0026gt;   slow_motion_video slow motion video icon \u0026lt;mat-icon\u0026gt;slow_motion_video\u0026lt;\u0026#47;mat-icon\u0026gt;   snooze snooze icon \u0026lt;mat-icon\u0026gt;snooze\u0026lt;\u0026#47;mat-icon\u0026gt;   sort_by_alpha sort by alpha icon \u0026lt;mat-icon\u0026gt;sort_by_alpha\u0026lt;\u0026#47;mat-icon\u0026gt;   stop stop icon \u0026lt;mat-icon\u0026gt;stop\u0026lt;\u0026#47;mat-icon\u0026gt;   subscriptions subscriptions icon \u0026lt;mat-icon\u0026gt;subscriptions\u0026lt;\u0026#47;mat-icon\u0026gt;   subtitles subtitles icon \u0026lt;mat-icon\u0026gt;subtitles\u0026lt;\u0026#47;mat-icon\u0026gt;   surround_sound surround sound icon \u0026lt;mat-icon\u0026gt;surround_sound\u0026lt;\u0026#47;mat-icon\u0026gt;   video_call video call icon \u0026lt;mat-icon\u0026gt;video_call\u0026lt;\u0026#47;mat-icon\u0026gt;   video_label video label icon \u0026lt;mat-icon\u0026gt;video_label\u0026lt;\u0026#47;mat-icon\u0026gt;   video_library video library icon \u0026lt;mat-icon\u0026gt;video_library\u0026lt;\u0026#47;mat-icon\u0026gt;   videocam videocam icon \u0026lt;mat-icon\u0026gt;videocam\u0026lt;\u0026#47;mat-icon\u0026gt;   videocam_off videocam off icon \u0026lt;mat-icon\u0026gt;videocam_off\u0026lt;\u0026#47;mat-icon\u0026gt;   volume_down volume down icon \u0026lt;mat-icon\u0026gt;volume_down\u0026lt;\u0026#47;mat-icon\u0026gt;   volume_mute volume mute icon \u0026lt;mat-icon\u0026gt;volume_mute\u0026lt;\u0026#47;mat-icon\u0026gt;   volume_off volume off icon \u0026lt;mat-icon\u0026gt;volume_off\u0026lt;\u0026#47;mat-icon\u0026gt;   volume_up volume up icon \u0026lt;mat-icon\u0026gt;volume_up\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Connection   Icon Name mat-icon code     add add icon mat-iconadd/mat-icon   add_box add box icon mat-iconadd_box/mat-icon   add_circle add circle icon mat-iconadd_circle/mat-icon   add_circle_outline add circle outline icon mat-iconadd_circle_outline/mat-icon   archive archive icon mat-iconarchive/mat-icon   backspace backspace icon mat-iconbackspace/mat-icon   ballot ballot icon mat-iconballot/mat-icon   block block icon mat-iconblock/mat-icon   clear clear icon mat-iconclear/mat-icon   create create icon mat-iconcreate/mat-icon   delete_sweep delete sweep icon mat-icondelete_sweep/mat-icon   drafts drafts icon mat-icondrafts/mat-icon   file_copy file copy icon mat-iconfile_copy/mat-icon   filter_list filter list icon mat-iconfilter_list/mat-icon   flag flag icon mat-iconflag/mat-icon   font_download font download icon mat-iconfont_download/mat-icon   forward forward icon mat-iconforward/mat-icon   gesture gesture icon mat-icongesture/mat-icon   how_to_reg how to reg icon mat-iconhow_to_reg/mat-icon   how_to_vote how to vote icon mat-iconhow_to_vote/mat-icon   inbox inbox icon mat-iconinbox/mat-icon   link link icon mat-iconlink/mat-icon   link_off link off icon mat-iconlink_off/mat-icon   low_priority low priority icon mat-iconlow_priority/mat-icon   mail mail icon mat-iconmail/mat-icon   markunread markunread icon mat-iconmarkunread/mat-icon   move_to_inbox move to inbox icon mat-iconmove_to_inbox/mat-icon   next_week next week icon mat-iconnext_week/mat-icon   outlined_flag outlined flag icon mat-iconoutlined_flag/mat-icon   redo redo icon mat-iconredo/mat-icon   remove remove icon mat-iconremove/mat-icon   remove_circle remove circle icon mat-iconremove_circle/mat-icon   remove_circle_outline remove circle outline icon mat-iconremove_circle_outline/mat-icon   reply reply icon mat-iconreply/mat-icon   reply_all reply all icon mat-iconreply_all/mat-icon   report report icon mat-iconreport/mat-icon   report_off report off icon mat-iconreport_off/mat-icon   save save icon mat-iconsave/mat-icon   save_alt save alt icon mat-iconsave_alt/mat-icon   select_all select all icon mat-iconselect_all/mat-icon   send send icon mat-iconsend/mat-icon   sort sort icon mat-iconsort/mat-icon   text_format text format icon mat-icontext_format/mat-icon   unarchive unarchive icon mat-iconunarchive/mat-icon   undo undo icon mat-iconundo/mat-icon   waves waves icon mat-iconwaves/mat-icon   weekend weekend icon mat-iconweekend/mat-icon   where_to_vote where to vote icon mat-iconwhere_to_vote/mat-icon    mat-icon List Category-Device   Icon Name mat-icon code     access_alarm access alarm icon \u0026lt;mat-icon\u0026gt;access_alarm\u0026lt;\u0026#47;mat-icon\u0026gt;   access_alarms access alarms icon \u0026lt;mat-icon\u0026gt;access_alarms\u0026lt;\u0026#47;mat-icon\u0026gt;   access_time access time icon \u0026lt;mat-icon\u0026gt;access_time\u0026lt;\u0026#47;mat-icon\u0026gt;   add_alarm add alarm icon \u0026lt;mat-icon\u0026gt;add_alarm\u0026lt;\u0026#47;mat-icon\u0026gt;   add_to_home_screen add to home screen icon \u0026lt;mat-icon\u0026gt;add_to_home_screen\u0026lt;\u0026#47;mat-icon\u0026gt;   airplanemode_active airplanemode active icon \u0026lt;mat-icon\u0026gt;airplanemode_active\u0026lt;\u0026#47;mat-icon\u0026gt;   airplanemode_inactive airplanemode inactive icon \u0026lt;mat-icon\u0026gt;airplanemode_inactive\u0026lt;\u0026#47;mat-icon\u0026gt;   battery_alert battery alert icon \u0026lt;mat-icon\u0026gt;battery_alert\u0026lt;\u0026#47;mat-icon\u0026gt;   battery_charging_full battery charging full icon \u0026lt;mat-icon\u0026gt;battery_charging_full\u0026lt;\u0026#47;mat-icon\u0026gt;   battery_full battery full icon \u0026lt;mat-icon\u0026gt;battery_full\u0026lt;\u0026#47;mat-icon\u0026gt;   battery_std battery std icon \u0026lt;mat-icon\u0026gt;battery_std\u0026lt;\u0026#47;mat-icon\u0026gt;   battery_unknown battery unknown icon \u0026lt;mat-icon\u0026gt;battery_unknown\u0026lt;\u0026#47;mat-icon\u0026gt;   bluetooth bluetooth icon \u0026lt;mat-icon\u0026gt;bluetooth\u0026lt;\u0026#47;mat-icon\u0026gt;   bluetooth_connected bluetooth connected icon \u0026lt;mat-icon\u0026gt;bluetooth_connected\u0026lt;\u0026#47;mat-icon\u0026gt;   bluetooth_disabled bluetooth disabled icon \u0026lt;mat-icon\u0026gt;bluetooth_disabled\u0026lt;\u0026#47;mat-icon\u0026gt;   bluetooth_searching bluetooth searching icon \u0026lt;mat-icon\u0026gt;bluetooth_searching\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_auto brightness auto icon \u0026lt;mat-icon\u0026gt;brightness_auto\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_high brightness high icon \u0026lt;mat-icon\u0026gt;brightness_high\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_low brightness low icon \u0026lt;mat-icon\u0026gt;brightness_low\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_medium brightness medium icon \u0026lt;mat-icon\u0026gt;brightness_medium\u0026lt;\u0026#47;mat-icon\u0026gt;   data_usage data usage icon \u0026lt;mat-icon\u0026gt;data_usage\u0026lt;\u0026#47;mat-icon\u0026gt;   developer_mode developer mode icon \u0026lt;mat-icon\u0026gt;developer_mode\u0026lt;\u0026#47;mat-icon\u0026gt;   devices devices icon \u0026lt;mat-icon\u0026gt;devices\u0026lt;\u0026#47;mat-icon\u0026gt;   dvr dvr icon \u0026lt;mat-icon\u0026gt;dvr\u0026lt;\u0026#47;mat-icon\u0026gt;   gps_fixed gps fixed icon \u0026lt;mat-icon\u0026gt;gps_fixed\u0026lt;\u0026#47;mat-icon\u0026gt;   gps_not_fixed gps not fixed icon \u0026lt;mat-icon\u0026gt;gps_not_fixed\u0026lt;\u0026#47;mat-icon\u0026gt;   gps_off gps off icon \u0026lt;mat-icon\u0026gt;gps_off\u0026lt;\u0026#47;mat-icon\u0026gt;   graphic_eq graphic eq icon \u0026lt;mat-icon\u0026gt;graphic_eq\u0026lt;\u0026#47;mat-icon\u0026gt;   location_disabled location disabled icon \u0026lt;mat-icon\u0026gt;location_disabled\u0026lt;\u0026#47;mat-icon\u0026gt;   location_searching location searching icon \u0026lt;mat-icon\u0026gt;location_searching\u0026lt;\u0026#47;mat-icon\u0026gt;   mobile_friendly mobile friendly icon \u0026lt;mat-icon\u0026gt;mobile_friendly\u0026lt;\u0026#47;mat-icon\u0026gt;   mobile_off mobile off icon \u0026lt;mat-icon\u0026gt;mobile_off\u0026lt;\u0026#47;mat-icon\u0026gt;   network_cell network cell icon \u0026lt;mat-icon\u0026gt;network_cell\u0026lt;\u0026#47;mat-icon\u0026gt;   network_wifi network wifi icon \u0026lt;mat-icon\u0026gt;network_wifi\u0026lt;\u0026#47;mat-icon\u0026gt;   nfc nfc icon \u0026lt;mat-icon\u0026gt;nfc\u0026lt;\u0026#47;mat-icon\u0026gt;   screen_lock_landscape screen lock landscape icon \u0026lt;mat-icon\u0026gt;screen_lock_landscape\u0026lt;\u0026#47;mat-icon\u0026gt;   screen_lock_portrait screen lock portrait icon \u0026lt;mat-icon\u0026gt;screen_lock_portrait\u0026lt;\u0026#47;mat-icon\u0026gt;   screen_lock_rotation screen lock rotation icon \u0026lt;mat-icon\u0026gt;screen_lock_rotation\u0026lt;\u0026#47;mat-icon\u0026gt;   screen_rotation screen rotation icon \u0026lt;mat-icon\u0026gt;screen_rotation\u0026lt;\u0026#47;mat-icon\u0026gt;   sd_storage sd storage icon \u0026lt;mat-icon\u0026gt;sd_storage\u0026lt;\u0026#47;mat-icon\u0026gt;   settings_system_daydream settings system daydream icon \u0026lt;mat-icon\u0026gt;settings_system_daydream\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_4_bar signal cellular 4 bar icon \u0026lt;mat-icon\u0026gt;signal_cellular_4_bar\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_alt signal cellular alt icon \u0026lt;mat-icon\u0026gt;signal_cellular_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_connected_no_internet_4_bar signal cellular connected no internet 4 bar icon \u0026lt;mat-icon\u0026gt;signal_cellular_connected_no_internet_4_bar\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_no_sim signal cellular no sim icon \u0026lt;mat-icon\u0026gt;signal_cellular_no_sim\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_null signal cellular null icon \u0026lt;mat-icon\u0026gt;signal_cellular_null\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_cellular_off signal cellular off icon \u0026lt;mat-icon\u0026gt;signal_cellular_off\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_wifi_4_bar signal wifi 4 bar icon \u0026lt;mat-icon\u0026gt;signal_wifi_4_bar\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_wifi_4_bar_lock signal wifi 4 bar lock icon \u0026lt;mat-icon\u0026gt;signal_wifi_4_bar_lock\u0026lt;\u0026#47;mat-icon\u0026gt;   signal_wifi_off signal wifi off icon \u0026lt;mat-icon\u0026gt;signal_wifi_off\u0026lt;\u0026#47;mat-icon\u0026gt;   storage storage icon \u0026lt;mat-icon\u0026gt;storage\u0026lt;\u0026#47;mat-icon\u0026gt;   usb usb icon \u0026lt;mat-icon\u0026gt;usb\u0026lt;\u0026#47;mat-icon\u0026gt;   wallpaper wallpaper icon \u0026lt;mat-icon\u0026gt;wallpaper\u0026lt;\u0026#47;mat-icon\u0026gt;   widgets widgets icon \u0026lt;mat-icon\u0026gt;widgets\u0026lt;\u0026#47;mat-icon\u0026gt;   wifi_lock wifi lock icon \u0026lt;mat-icon\u0026gt;wifi_lock\u0026lt;\u0026#47;mat-icon\u0026gt;   wifi_tethering wifi tethering icon \u0026lt;mat-icon\u0026gt;wifi_tethering\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Editor   Icon Name mat-icon code     add_comment add comment icon \u0026lt;mat-icon\u0026gt; add_comment\u0026lt;\u0026#47;mat-icon\u0026gt;   attach_file attach file icon \u0026lt;mat-icon\u0026gt; attach_file\u0026lt;\u0026#47;mat-icon\u0026gt;   attach_money attach money icon \u0026lt;mat-icon\u0026gt; attach_money\u0026lt;\u0026#47;mat-icon\u0026gt;   bar_chart bar chart icon \u0026lt;mat-icon\u0026gt; bar_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   border_all border all icon \u0026lt;mat-icon\u0026gt; border_all\u0026lt;\u0026#47;mat-icon\u0026gt;   border_bottom border bottom icon \u0026lt;mat-icon\u0026gt; border_bottom\u0026lt;\u0026#47;mat-icon\u0026gt;   border_clear border clear icon \u0026lt;mat-icon\u0026gt; border_clear\u0026lt;\u0026#47;mat-icon\u0026gt;   border_color border color icon \u0026lt;mat-icon\u0026gt; border_color\u0026lt;\u0026#47;mat-icon\u0026gt;   border_horizontal border horizontal icon \u0026lt;mat-icon\u0026gt; border_horizontal\u0026lt;\u0026#47;mat-icon\u0026gt;   border_inner border inner icon \u0026lt;mat-icon\u0026gt; border_inner\u0026lt;\u0026#47;mat-icon\u0026gt;   border_left border left icon \u0026lt;mat-icon\u0026gt; border_left\u0026lt;\u0026#47;mat-icon\u0026gt;   border_outer border outer icon \u0026lt;mat-icon\u0026gt; border_outer\u0026lt;\u0026#47;mat-icon\u0026gt;   border_right border right icon \u0026lt;mat-icon\u0026gt; border_right\u0026lt;\u0026#47;mat-icon\u0026gt;   border_style border style icon \u0026lt;mat-icon\u0026gt; border_style\u0026lt;\u0026#47;mat-icon\u0026gt;   border_top border top icon \u0026lt;mat-icon\u0026gt; border_top\u0026lt;\u0026#47;mat-icon\u0026gt;   border_vertical border vertical icon \u0026lt;mat-icon\u0026gt; border_vertical\u0026lt;\u0026#47;mat-icon\u0026gt;   bubble_chart bubble chart icon \u0026lt;mat-icon\u0026gt; bubble_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   drag_handle drag handle icon \u0026lt;mat-icon\u0026gt; drag_handle\u0026lt;\u0026#47;mat-icon\u0026gt;   format_align_center format align center icon \u0026lt;mat-icon\u0026gt; format_align_center\u0026lt;\u0026#47;mat-icon\u0026gt;   format_align_justify format align justify icon \u0026lt;mat-icon\u0026gt; format_align_justify\u0026lt;\u0026#47;mat-icon\u0026gt;   format_align_left format align left icon \u0026lt;mat-icon\u0026gt; format_align_left\u0026lt;\u0026#47;mat-icon\u0026gt;   format_align_right format align right icon \u0026lt;mat-icon\u0026gt; format_align_right\u0026lt;\u0026#47;mat-icon\u0026gt;   format_bold format bold icon \u0026lt;mat-icon\u0026gt; format_bold\u0026lt;\u0026#47;mat-icon\u0026gt;   format_clear format clear icon \u0026lt;mat-icon\u0026gt; format_clear\u0026lt;\u0026#47;mat-icon\u0026gt;   format_color_fill format color fill icon \u0026lt;mat-icon\u0026gt; format_color_fill\u0026lt;\u0026#47;mat-icon\u0026gt;   format_color_reset format color reset icon \u0026lt;mat-icon\u0026gt; format_color_reset\u0026lt;\u0026#47;mat-icon\u0026gt;   format_color_text format color text icon \u0026lt;mat-icon\u0026gt; format_color_text\u0026lt;\u0026#47;mat-icon\u0026gt;   format_indent_decrease format indent decrease icon \u0026lt;mat-icon\u0026gt; format_indent_decrease\u0026lt;\u0026#47;mat-icon\u0026gt;   format_indent_increase format indent increase icon \u0026lt;mat-icon\u0026gt; format_indent_increase\u0026lt;\u0026#47;mat-icon\u0026gt;   format_italic format italic icon \u0026lt;mat-icon\u0026gt; format_italic\u0026lt;\u0026#47;mat-icon\u0026gt;   format_line_spacing format line spacing icon \u0026lt;mat-icon\u0026gt; format_line_spacing\u0026lt;\u0026#47;mat-icon\u0026gt;   format_list_bulleted format list bulleted icon \u0026lt;mat-icon\u0026gt; format_list_bulleted\u0026lt;\u0026#47;mat-icon\u0026gt;   format_list_numbered format list numbered icon \u0026lt;mat-icon\u0026gt; format_list_numbered\u0026lt;\u0026#47;mat-icon\u0026gt;   format_list_numbered_rtl format list numbered rtl icon \u0026lt;mat-icon\u0026gt; format_list_numbered_rtl\u0026lt;\u0026#47;mat-icon\u0026gt;   format_paint format paint icon \u0026lt;mat-icon\u0026gt; format_paint\u0026lt;\u0026#47;mat-icon\u0026gt;   format_quote format quote icon \u0026lt;mat-icon\u0026gt; format_quote\u0026lt;\u0026#47;mat-icon\u0026gt;   format_shapes format shapes icon \u0026lt;mat-icon\u0026gt; format_shapes\u0026lt;\u0026#47;mat-icon\u0026gt;   format_size format size icon \u0026lt;mat-icon\u0026gt; format_size\u0026lt;\u0026#47;mat-icon\u0026gt;   format_strikethrough format strikethrough icon \u0026lt;mat-icon\u0026gt; format_strikethrough\u0026lt;\u0026#47;mat-icon\u0026gt;   format_textdirection_l_to_r format textdirection l to r icon \u0026lt;mat-icon\u0026gt; format_textdirection_l_to_r\u0026lt;\u0026#47;mat-icon\u0026gt;   format_textdirection_r_to_l format textdirection r to l icon \u0026lt;mat-icon\u0026gt; format_textdirection_r_to_l\u0026lt;\u0026#47;mat-icon\u0026gt;   format_underlined format underlined icon \u0026lt;mat-icon\u0026gt; format_underlined\u0026lt;\u0026#47;mat-icon\u0026gt;   functions functions icon \u0026lt;mat-icon\u0026gt; functions\u0026lt;\u0026#47;mat-icon\u0026gt;   highlight highlight icon \u0026lt;mat-icon\u0026gt; highlight\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_chart insert chart icon \u0026lt;mat-icon\u0026gt; insert_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_chart_outlined insert chart outlined icon \u0026lt;mat-icon\u0026gt; insert_chart_outlined\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_comment insert comment icon \u0026lt;mat-icon\u0026gt; insert_comment\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_drive_file insert drive file icon \u0026lt;mat-icon\u0026gt; insert_drive_file\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_emoticon insert emoticon icon \u0026lt;mat-icon\u0026gt; insert_emoticon\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_invitation insert invitation icon \u0026lt;mat-icon\u0026gt; insert_invitation\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_link insert link icon \u0026lt;mat-icon\u0026gt; insert_link\u0026lt;\u0026#47;mat-icon\u0026gt;   insert_photo insert photo icon \u0026lt;mat-icon\u0026gt; insert_photo\u0026lt;\u0026#47;mat-icon\u0026gt;   linear_scale linear scale icon \u0026lt;mat-icon\u0026gt; linear_scale\u0026lt;\u0026#47;mat-icon\u0026gt;   merge_type merge type icon \u0026lt;mat-icon\u0026gt; merge_type\u0026lt;\u0026#47;mat-icon\u0026gt;   mode_comment mode comment icon \u0026lt;mat-icon\u0026gt; mode_comment\u0026lt;\u0026#47;mat-icon\u0026gt;   monetization_on monetization on icon \u0026lt;mat-icon\u0026gt; monetization_on\u0026lt;\u0026#47;mat-icon\u0026gt;   money_off money off icon \u0026lt;mat-icon\u0026gt; money_off\u0026lt;\u0026#47;mat-icon\u0026gt;   multiline_chart multiline chart icon \u0026lt;mat-icon\u0026gt; multiline_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   notes notes icon \u0026lt;mat-icon\u0026gt; notes\u0026lt;\u0026#47;mat-icon\u0026gt;   pie_chart pie chart icon \u0026lt;mat-icon\u0026gt; pie_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   publish publish icon \u0026lt;mat-icon\u0026gt; publish\u0026lt;\u0026#47;mat-icon\u0026gt;   scatter_plot scatter plot icon \u0026lt;mat-icon\u0026gt; scatter_plot\u0026lt;\u0026#47;mat-icon\u0026gt;   score score icon \u0026lt;mat-icon\u0026gt; score\u0026lt;\u0026#47;mat-icon\u0026gt;   short_text short text icon \u0026lt;mat-icon\u0026gt; short_text\u0026lt;\u0026#47;mat-icon\u0026gt;   show_chart show chart icon \u0026lt;mat-icon\u0026gt; show_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   space_bar space bar icon \u0026lt;mat-icon\u0026gt; space_bar\u0026lt;\u0026#47;mat-icon\u0026gt;   strikethrough_s strikethrough s icon \u0026lt;mat-icon\u0026gt; strikethrough_s\u0026lt;\u0026#47;mat-icon\u0026gt;   table_chart table chart icon \u0026lt;mat-icon\u0026gt; table_chart\u0026lt;\u0026#47;mat-icon\u0026gt;   text_fields text fields icon \u0026lt;mat-icon\u0026gt; text_fields\u0026lt;\u0026#47;mat-icon\u0026gt;   title title icon \u0026lt;mat-icon\u0026gt; title\u0026lt;\u0026#47;mat-icon\u0026gt;   vertical_align_bottom vertical align bottom icon \u0026lt;mat-icon\u0026gt; vertical_align_bottom\u0026lt;\u0026#47;mat-icon\u0026gt;   vertical_align_center vertical align center icon \u0026lt;mat-icon\u0026gt; vertical_align_center\u0026lt;\u0026#47;mat-icon\u0026gt;   vertical_align_top vertical align top icon \u0026lt;mat-icon\u0026gt; vertical_align_top\u0026lt;\u0026#47;mat-icon\u0026gt;   wrap_text wrap text icon \u0026lt;mat-icon\u0026gt; wrap_text\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-File   Icon Name mat-icon code     attachment attachment icon \u0026lt;mat-icon\u0026gt;attachment\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud cloud icon \u0026lt;mat-icon\u0026gt;cloud\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_circle cloud circle icon \u0026lt;mat-icon\u0026gt;cloud_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_done cloud done icon \u0026lt;mat-icon\u0026gt;cloud_done\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_download cloud download icon \u0026lt;mat-icon\u0026gt;cloud_download\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_off cloud off icon \u0026lt;mat-icon\u0026gt;cloud_off\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_queue cloud queue icon \u0026lt;mat-icon\u0026gt;cloud_queue\u0026lt;\u0026#47;mat-icon\u0026gt;   cloud_upload cloud upload icon \u0026lt;mat-icon\u0026gt;cloud_upload\u0026lt;\u0026#47;mat-icon\u0026gt;   create_new_folder create new folder icon \u0026lt;mat-icon\u0026gt;create_new_folder\u0026lt;\u0026#47;mat-icon\u0026gt;   folder folder icon \u0026lt;mat-icon\u0026gt;folder\u0026lt;\u0026#47;mat-icon\u0026gt;   folder_open folder open icon \u0026lt;mat-icon\u0026gt;folder_open\u0026lt;\u0026#47;mat-icon\u0026gt;   folder_shared folder shared icon \u0026lt;mat-icon\u0026gt;folder_shared\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Hardware   Icon name mat-icon code     cast cast icon \u0026lt;mat-icon\u0026gt;cast\u0026lt;\u0026#47;mat-icon\u0026gt;   cast_connected cast connected icon \u0026lt;mat-icon\u0026gt;cast_connected\u0026lt;\u0026#47;mat-icon\u0026gt;   computer computer icon \u0026lt;mat-icon\u0026gt;computer\u0026lt;\u0026#47;mat-icon\u0026gt;   desktop_mac desktop mac icon \u0026lt;mat-icon\u0026gt;desktop_mac\u0026lt;\u0026#47;mat-icon\u0026gt;   desktop_windows desktop windows icon \u0026lt;mat-icon\u0026gt;desktop_windows\u0026lt;\u0026#47;mat-icon\u0026gt;   developer_board developer board icon \u0026lt;mat-icon\u0026gt;developer_board\u0026lt;\u0026#47;mat-icon\u0026gt;   device_hub device hub icon \u0026lt;mat-icon\u0026gt;device_hub\u0026lt;\u0026#47;mat-icon\u0026gt;   device_unknown device unknown icon \u0026lt;mat-icon\u0026gt;device_unknown\u0026lt;\u0026#47;mat-icon\u0026gt;   devices_other devices other icon \u0026lt;mat-icon\u0026gt;devices_other\u0026lt;\u0026#47;mat-icon\u0026gt;   dock dock icon \u0026lt;mat-icon\u0026gt;dock\u0026lt;\u0026#47;mat-icon\u0026gt;   gamepad gamepad icon \u0026lt;mat-icon\u0026gt;gamepad\u0026lt;\u0026#47;mat-icon\u0026gt;   headset headset icon \u0026lt;mat-icon\u0026gt;headset\u0026lt;\u0026#47;mat-icon\u0026gt;   headset_mic headset mic icon \u0026lt;mat-icon\u0026gt;headset_mic\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard keyboard icon \u0026lt;mat-icon\u0026gt;keyboard\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_arrow_down keyboard arrow down icon \u0026lt;mat-icon\u0026gt;keyboard_arrow_down\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_arrow_left keyboard arrow left icon \u0026lt;mat-icon\u0026gt;keyboard_arrow_left\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_arrow_right keyboard arrow right icon \u0026lt;mat-icon\u0026gt;keyboard_arrow_right\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_arrow_up keyboard arrow up icon \u0026lt;mat-icon\u0026gt;keyboard_arrow_up\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_backspace keyboard backspace icon \u0026lt;mat-icon\u0026gt;keyboard_backspace\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_capslock keyboard capslock icon \u0026lt;mat-icon\u0026gt;keyboard_capslock\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_hide keyboard hide icon \u0026lt;mat-icon\u0026gt;keyboard_hide\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_return keyboard return icon \u0026lt;mat-icon\u0026gt;keyboard_return\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_tab keyboard tab icon \u0026lt;mat-icon\u0026gt;keyboard_tab\u0026lt;\u0026#47;mat-icon\u0026gt;   keyboard_voice keyboard voice icon \u0026lt;mat-icon\u0026gt;keyboard_voice\u0026lt;\u0026#47;mat-icon\u0026gt;   laptop laptop icon \u0026lt;mat-icon\u0026gt;laptop\u0026lt;\u0026#47;mat-icon\u0026gt;   laptop_chromebook laptop chromebook icon \u0026lt;mat-icon\u0026gt;laptop_chromebook\u0026lt;\u0026#47;mat-icon\u0026gt;   laptop_mac laptop mac icon \u0026lt;mat-icon\u0026gt;laptop_mac\u0026lt;\u0026#47;mat-icon\u0026gt;   laptop_windows laptop windows icon \u0026lt;mat-icon\u0026gt;laptop_windows\u0026lt;\u0026#47;mat-icon\u0026gt;   memory memory icon \u0026lt;mat-icon\u0026gt;memory\u0026lt;\u0026#47;mat-icon\u0026gt;   mouse mouse icon \u0026lt;mat-icon\u0026gt;mouse\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_android phone android icon \u0026lt;mat-icon\u0026gt;phone_android\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_iphone phone iphone icon \u0026lt;mat-icon\u0026gt;phone_iphone\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink phonelink icon \u0026lt;mat-icon\u0026gt;phonelink\u0026lt;\u0026#47;mat-icon\u0026gt;   phonelink_off phonelink off icon \u0026lt;mat-icon\u0026gt;phonelink_off\u0026lt;\u0026#47;mat-icon\u0026gt;   power_input power input icon \u0026lt;mat-icon\u0026gt;power_input\u0026lt;\u0026#47;mat-icon\u0026gt;   router router icon \u0026lt;mat-icon\u0026gt;router\u0026lt;\u0026#47;mat-icon\u0026gt;   scanner scanner icon \u0026lt;mat-icon\u0026gt;scanner\u0026lt;\u0026#47;mat-icon\u0026gt;   security security icon \u0026lt;mat-icon\u0026gt;security\u0026lt;\u0026#47;mat-icon\u0026gt;   sim_card sim card icon \u0026lt;mat-icon\u0026gt;sim_card\u0026lt;\u0026#47;mat-icon\u0026gt;   smartphone smartphone icon \u0026lt;mat-icon\u0026gt;smartphone\u0026lt;\u0026#47;mat-icon\u0026gt;   speaker speaker icon \u0026lt;mat-icon\u0026gt;speaker\u0026lt;\u0026#47;mat-icon\u0026gt;   speaker_group speaker group icon \u0026lt;mat-icon\u0026gt;speaker_group\u0026lt;\u0026#47;mat-icon\u0026gt;   tablet tablet icon \u0026lt;mat-icon\u0026gt;tablet\u0026lt;\u0026#47;mat-icon\u0026gt;   tablet_android tablet android icon \u0026lt;mat-icon\u0026gt;tablet_android\u0026lt;\u0026#47;mat-icon\u0026gt;   tablet_mac tablet mac icon \u0026lt;mat-icon\u0026gt;tablet_mac\u0026lt;\u0026#47;mat-icon\u0026gt;   toys toys icon \u0026lt;mat-icon\u0026gt;toys\u0026lt;\u0026#47;mat-icon\u0026gt;   tv tv icon \u0026lt;mat-icon\u0026gt;tv\u0026lt;\u0026#47;mat-icon\u0026gt;   videogame_asset videogame asset icon \u0026lt;mat-icon\u0026gt;videogame_asset\u0026lt;\u0026#47;mat-icon\u0026gt;   watch watch icon \u0026lt;mat-icon\u0026gt;watch\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Images   Icon Name mat-icon code     add_a_photo add a photo icon \u0026lt;mat-icon\u0026gt;add_a_photo\u0026lt;\u0026#47;mat-icon\u0026gt;   add_photo_alternate add photo alternate icon \u0026lt;mat-icon\u0026gt;add_photo_alternate\u0026lt;\u0026#47;mat-icon\u0026gt;   add_to_photos add to photos icon \u0026lt;mat-icon\u0026gt;add_to_photos\u0026lt;\u0026#47;mat-icon\u0026gt;   adjust adjust icon \u0026lt;mat-icon\u0026gt;adjust\u0026lt;\u0026#47;mat-icon\u0026gt;   assistant assistant icon \u0026lt;mat-icon\u0026gt;assistant\u0026lt;\u0026#47;mat-icon\u0026gt;   assistant_photo assistant photo icon \u0026lt;mat-icon\u0026gt;assistant_photo\u0026lt;\u0026#47;mat-icon\u0026gt;   audiotrack audiotrack icon \u0026lt;mat-icon\u0026gt;audiotrack\u0026lt;\u0026#47;mat-icon\u0026gt;   blur_circular blur circular icon \u0026lt;mat-icon\u0026gt;blur_circular\u0026lt;\u0026#47;mat-icon\u0026gt;   blur_linear blur linear icon \u0026lt;mat-icon\u0026gt;blur_linear\u0026lt;\u0026#47;mat-icon\u0026gt;   blur_off blur off icon \u0026lt;mat-icon\u0026gt;blur_off\u0026lt;\u0026#47;mat-icon\u0026gt;   blur_on blur on icon \u0026lt;mat-icon\u0026gt;blur_on\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_1 brightness 1 icon \u0026lt;mat-icon\u0026gt;brightness_1\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_2 brightness 2 icon \u0026lt;mat-icon\u0026gt;brightness_2\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_3 brightness 3 icon \u0026lt;mat-icon\u0026gt;brightness_3\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_4 brightness 4 icon \u0026lt;mat-icon\u0026gt;brightness_4\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_5 brightness 5 icon \u0026lt;mat-icon\u0026gt;brightness_5\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_6 brightness 6 icon \u0026lt;mat-icon\u0026gt;brightness_6\u0026lt;\u0026#47;mat-icon\u0026gt;   brightness_7 brightness 7 icon \u0026lt;mat-icon\u0026gt;brightness_7\u0026lt;\u0026#47;mat-icon\u0026gt;   broken_image broken image icon \u0026lt;mat-icon\u0026gt;broken_image\u0026lt;\u0026#47;mat-icon\u0026gt;   brush brush icon \u0026lt;mat-icon\u0026gt;brush\u0026lt;\u0026#47;mat-icon\u0026gt;   burst_mode burst mode icon \u0026lt;mat-icon\u0026gt;burst_mode\u0026lt;\u0026#47;mat-icon\u0026gt;   camera camera icon \u0026lt;mat-icon\u0026gt;camera\u0026lt;\u0026#47;mat-icon\u0026gt;   camera_alt camera alt icon \u0026lt;mat-icon\u0026gt;camera_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   camera_front camera front icon \u0026lt;mat-icon\u0026gt;camera_front\u0026lt;\u0026#47;mat-icon\u0026gt;   camera_rear camera rear icon \u0026lt;mat-icon\u0026gt;camera_rear\u0026lt;\u0026#47;mat-icon\u0026gt;   camera_roll camera roll icon \u0026lt;mat-icon\u0026gt;camera_roll\u0026lt;\u0026#47;mat-icon\u0026gt;   center_focus_strong center focus strong icon \u0026lt;mat-icon\u0026gt;center_focus_strong\u0026lt;\u0026#47;mat-icon\u0026gt;   center_focus_weak center focus weak icon \u0026lt;mat-icon\u0026gt;center_focus_weak\u0026lt;\u0026#47;mat-icon\u0026gt;   collections collections icon \u0026lt;mat-icon\u0026gt;collections\u0026lt;\u0026#47;mat-icon\u0026gt;   collections_bookmark collections bookmark icon \u0026lt;mat-icon\u0026gt;collections_bookmark\u0026lt;\u0026#47;mat-icon\u0026gt;   color_lens color lens icon \u0026lt;mat-icon\u0026gt;color_lens\u0026lt;\u0026#47;mat-icon\u0026gt;   colorize colorize icon \u0026lt;mat-icon\u0026gt;colorize\u0026lt;\u0026#47;mat-icon\u0026gt;   compare compare icon \u0026lt;mat-icon\u0026gt;compare\u0026lt;\u0026#47;mat-icon\u0026gt;   control_point control point icon \u0026lt;mat-icon\u0026gt;control_point\u0026lt;\u0026#47;mat-icon\u0026gt;   control_point_duplicate control point duplicate icon \u0026lt;mat-icon\u0026gt;control_point_duplicate\u0026lt;\u0026#47;mat-icon\u0026gt;   crop crop icon \u0026lt;mat-icon\u0026gt;crop\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_16_9 crop 16 9 icon \u0026lt;mat-icon\u0026gt;crop_16_9\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_3_2 crop 3 2 icon \u0026lt;mat-icon\u0026gt;crop_3_2\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_5_4 crop 5 4 icon \u0026lt;mat-icon\u0026gt;crop_5_4\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_7_5 crop 7 5 icon \u0026lt;mat-icon\u0026gt;crop_7_5\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_din crop din icon \u0026lt;mat-icon\u0026gt;crop_din\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_free crop free icon \u0026lt;mat-icon\u0026gt;crop_free\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_landscape crop landscape icon \u0026lt;mat-icon\u0026gt;crop_landscape\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_original crop original icon \u0026lt;mat-icon\u0026gt;crop_original\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_portrait crop portrait icon \u0026lt;mat-icon\u0026gt;crop_portrait\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_rotate crop rotate icon \u0026lt;mat-icon\u0026gt;crop_rotate\u0026lt;\u0026#47;mat-icon\u0026gt;   crop_square crop square icon \u0026lt;mat-icon\u0026gt;crop_square\u0026lt;\u0026#47;mat-icon\u0026gt;   dehaze dehaze icon \u0026lt;mat-icon\u0026gt;dehaze\u0026lt;\u0026#47;mat-icon\u0026gt;   details details icon \u0026lt;mat-icon\u0026gt;details\u0026lt;\u0026#47;mat-icon\u0026gt;   edit edit icon \u0026lt;mat-icon\u0026gt;edit\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure exposure icon \u0026lt;mat-icon\u0026gt;exposure\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure_neg_1 exposure neg 1 icon \u0026lt;mat-icon\u0026gt;exposure_neg_1\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure_neg_2 exposure neg 2 icon \u0026lt;mat-icon\u0026gt;exposure_neg_2\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure_plus_1 exposure plus 1 icon \u0026lt;mat-icon\u0026gt;exposure_plus_1\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure_plus_2 exposure plus 2 icon \u0026lt;mat-icon\u0026gt;exposure_plus_2\u0026lt;\u0026#47;mat-icon\u0026gt;   exposure_zero exposure zero icon \u0026lt;mat-icon\u0026gt;exposure_zero\u0026lt;\u0026#47;mat-icon\u0026gt;   filter filter icon \u0026lt;mat-icon\u0026gt;filter\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_1 filter 1 icon \u0026lt;mat-icon\u0026gt;filter_1\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_2 filter 2 icon \u0026lt;mat-icon\u0026gt;filter_2\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_3 filter 3 icon \u0026lt;mat-icon\u0026gt;filter_3\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_4 filter 4 icon \u0026lt;mat-icon\u0026gt;filter_4\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_5 filter 5 icon \u0026lt;mat-icon\u0026gt;filter_5\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_6 filter 6 icon \u0026lt;mat-icon\u0026gt;filter_6\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_7 filter 7 icon \u0026lt;mat-icon\u0026gt;filter_7\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_8 filter 8 icon \u0026lt;mat-icon\u0026gt;filter_8\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_9 filter 9 icon \u0026lt;mat-icon\u0026gt;filter_9\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_9_plus filter 9 plus icon \u0026lt;mat-icon\u0026gt;filter_9_plus\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_b_and_w filter b and w icon \u0026lt;mat-icon\u0026gt;filter_b_and_w\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_center_focus filter center focus icon \u0026lt;mat-icon\u0026gt;filter_center_focus\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_drama filter drama icon \u0026lt;mat-icon\u0026gt;filter_drama\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_frames filter frames icon \u0026lt;mat-icon\u0026gt;filter_frames\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_hdr filter hdr icon \u0026lt;mat-icon\u0026gt;filter_hdr\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_none filter none icon \u0026lt;mat-icon\u0026gt;filter_none\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_tilt_shift filter tilt shift icon \u0026lt;mat-icon\u0026gt;filter_tilt_shift\u0026lt;\u0026#47;mat-icon\u0026gt;   filter_vintage filter vintage icon \u0026lt;mat-icon\u0026gt;filter_vintage\u0026lt;\u0026#47;mat-icon\u0026gt;   flare flare icon \u0026lt;mat-icon\u0026gt;flare\u0026lt;\u0026#47;mat-icon\u0026gt;   flash_auto flash auto icon \u0026lt;mat-icon\u0026gt;flash_auto\u0026lt;\u0026#47;mat-icon\u0026gt;   flash_off flash off icon \u0026lt;mat-icon\u0026gt;flash_off\u0026lt;\u0026#47;mat-icon\u0026gt;   flash_on flash on icon \u0026lt;mat-icon\u0026gt;flash_on\u0026lt;\u0026#47;mat-icon\u0026gt;   flip flip icon \u0026lt;mat-icon\u0026gt;flip\u0026lt;\u0026#47;mat-icon\u0026gt;   gradient gradient icon \u0026lt;mat-icon\u0026gt;gradient\u0026lt;\u0026#47;mat-icon\u0026gt;   grain grain icon \u0026lt;mat-icon\u0026gt;grain\u0026lt;\u0026#47;mat-icon\u0026gt;   grid_off grid off icon \u0026lt;mat-icon\u0026gt;grid_off\u0026lt;\u0026#47;mat-icon\u0026gt;   grid_on grid on icon \u0026lt;mat-icon\u0026gt;grid_on\u0026lt;\u0026#47;mat-icon\u0026gt;   hdr_off hdr off icon \u0026lt;mat-icon\u0026gt;hdr_off\u0026lt;\u0026#47;mat-icon\u0026gt;   hdr_on hdr on icon \u0026lt;mat-icon\u0026gt;hdr_on\u0026lt;\u0026#47;mat-icon\u0026gt;   hdr_strong hdr strong icon \u0026lt;mat-icon\u0026gt;hdr_strong\u0026lt;\u0026#47;mat-icon\u0026gt;   hdr_weak hdr weak icon \u0026lt;mat-icon\u0026gt;hdr_weak\u0026lt;\u0026#47;mat-icon\u0026gt;   healing healing icon \u0026lt;mat-icon\u0026gt;healing\u0026lt;\u0026#47;mat-icon\u0026gt;   image image icon \u0026lt;mat-icon\u0026gt;image\u0026lt;\u0026#47;mat-icon\u0026gt;   image_aspect_ratio image aspect ratio icon \u0026lt;mat-icon\u0026gt;image_aspect_ratio\u0026lt;\u0026#47;mat-icon\u0026gt;   image_search image search icon \u0026lt;mat-icon\u0026gt;image_search\u0026lt;\u0026#47;mat-icon\u0026gt;   iso iso icon \u0026lt;mat-icon\u0026gt;iso\u0026lt;\u0026#47;mat-icon\u0026gt;   landscape landscape icon \u0026lt;mat-icon\u0026gt;landscape\u0026lt;\u0026#47;mat-icon\u0026gt;   leak_add leak add icon \u0026lt;mat-icon\u0026gt;leak_add\u0026lt;\u0026#47;mat-icon\u0026gt;   leak_remove leak remove icon \u0026lt;mat-icon\u0026gt;leak_remove\u0026lt;\u0026#47;mat-icon\u0026gt;   lens lens icon \u0026lt;mat-icon\u0026gt;lens\u0026lt;\u0026#47;mat-icon\u0026gt;   linked_camera linked camera icon \u0026lt;mat-icon\u0026gt;linked_camera\u0026lt;\u0026#47;mat-icon\u0026gt;   looks looks icon \u0026lt;mat-icon\u0026gt;looks\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_3 looks 3 icon \u0026lt;mat-icon\u0026gt;looks_3\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_4 looks 4 icon \u0026lt;mat-icon\u0026gt;looks_4\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_5 looks 5 icon \u0026lt;mat-icon\u0026gt;looks_5\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_6 looks 6 icon \u0026lt;mat-icon\u0026gt;looks_6\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_one looks one icon \u0026lt;mat-icon\u0026gt;looks_one\u0026lt;\u0026#47;mat-icon\u0026gt;   looks_two looks two icon \u0026lt;mat-icon\u0026gt;looks_two\u0026lt;\u0026#47;mat-icon\u0026gt;   loupe loupe icon \u0026lt;mat-icon\u0026gt;loupe\u0026lt;\u0026#47;mat-icon\u0026gt;   monochrome_photos monochrome photos icon \u0026lt;mat-icon\u0026gt;monochrome_photos\u0026lt;\u0026#47;mat-icon\u0026gt;   movie_creation movie creation icon \u0026lt;mat-icon\u0026gt;movie_creation\u0026lt;\u0026#47;mat-icon\u0026gt;   movie_filter movie filter icon \u0026lt;mat-icon\u0026gt;movie_filter\u0026lt;\u0026#47;mat-icon\u0026gt;   music_note music note icon \u0026lt;mat-icon\u0026gt;music_note\u0026lt;\u0026#47;mat-icon\u0026gt;   music_off music off icon \u0026lt;mat-icon\u0026gt;music_off\u0026lt;\u0026#47;mat-icon\u0026gt;   nature nature icon \u0026lt;mat-icon\u0026gt;nature\u0026lt;\u0026#47;mat-icon\u0026gt;   nature_people nature people icon \u0026lt;mat-icon\u0026gt;nature_people\u0026lt;\u0026#47;mat-icon\u0026gt;   navigate_before navigate before icon \u0026lt;mat-icon\u0026gt;navigate_before\u0026lt;\u0026#47;mat-icon\u0026gt;   navigate_next navigate next icon \u0026lt;mat-icon\u0026gt;navigate_next\u0026lt;\u0026#47;mat-icon\u0026gt;   palette palette icon \u0026lt;mat-icon\u0026gt;palette\u0026lt;\u0026#47;mat-icon\u0026gt;   panorama panorama icon \u0026lt;mat-icon\u0026gt;panorama\u0026lt;\u0026#47;mat-icon\u0026gt;   panorama_fish_eye panorama fish eye icon \u0026lt;mat-icon\u0026gt;panorama_fish_eye\u0026lt;\u0026#47;mat-icon\u0026gt;   panorama_horizontal panorama horizontal icon \u0026lt;mat-icon\u0026gt;panorama_horizontal\u0026lt;\u0026#47;mat-icon\u0026gt;   panorama_vertical panorama vertical icon \u0026lt;mat-icon\u0026gt;panorama_vertical\u0026lt;\u0026#47;mat-icon\u0026gt;   panorama_wide_angle panorama wide angle icon \u0026lt;mat-icon\u0026gt;panorama_wide_angle\u0026lt;\u0026#47;mat-icon\u0026gt;   photo photo icon \u0026lt;mat-icon\u0026gt;photo\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_album photo album icon \u0026lt;mat-icon\u0026gt;photo_album\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_camera photo camera icon \u0026lt;mat-icon\u0026gt;photo_camera\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_filter photo filter icon \u0026lt;mat-icon\u0026gt;photo_filter\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_library photo library icon \u0026lt;mat-icon\u0026gt;photo_library\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_size_select_actual photo size select actual icon \u0026lt;mat-icon\u0026gt;photo_size_select_actual\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_size_select_large photo size select large icon \u0026lt;mat-icon\u0026gt;photo_size_select_large\u0026lt;\u0026#47;mat-icon\u0026gt;   photo_size_select_small photo size select small icon \u0026lt;mat-icon\u0026gt;photo_size_select_small\u0026lt;\u0026#47;mat-icon\u0026gt;   picture_as_pdf picture as pdf icon \u0026lt;mat-icon\u0026gt;picture_as_pdf\u0026lt;\u0026#47;mat-icon\u0026gt;   portrait portrait icon \u0026lt;mat-icon\u0026gt;portrait\u0026lt;\u0026#47;mat-icon\u0026gt;   remove_red_eye remove red eye icon \u0026lt;mat-icon\u0026gt;remove_red_eye\u0026lt;\u0026#47;mat-icon\u0026gt;   rotate_90_degrees_ccw rotate 90 degrees ccw icon \u0026lt;mat-icon\u0026gt;rotate_90_degrees_ccw\u0026lt;\u0026#47;mat-icon\u0026gt;   rotate_left rotate left icon \u0026lt;mat-icon\u0026gt;rotate_left\u0026lt;\u0026#47;mat-icon\u0026gt;   rotate_right rotate right icon \u0026lt;mat-icon\u0026gt;rotate_right\u0026lt;\u0026#47;mat-icon\u0026gt;   shutter_speed shutter speed icon \u0026lt;mat-icon\u0026gt;shutter_speed\u0026lt;\u0026#47;mat-icon\u0026gt;   slideshow slideshow icon \u0026lt;mat-icon\u0026gt;slideshow\u0026lt;\u0026#47;mat-icon\u0026gt;   straighten straighten icon \u0026lt;mat-icon\u0026gt;straighten\u0026lt;\u0026#47;mat-icon\u0026gt;   style style icon \u0026lt;mat-icon\u0026gt;style\u0026lt;\u0026#47;mat-icon\u0026gt;   switch_camera switch camera icon \u0026lt;mat-icon\u0026gt;switch_camera\u0026lt;\u0026#47;mat-icon\u0026gt;   switch_video switch video icon \u0026lt;mat-icon\u0026gt;switch_video\u0026lt;\u0026#47;mat-icon\u0026gt;   tag_faces tag faces icon \u0026lt;mat-icon\u0026gt;tag_faces\u0026lt;\u0026#47;mat-icon\u0026gt;   texture texture icon \u0026lt;mat-icon\u0026gt;texture\u0026lt;\u0026#47;mat-icon\u0026gt;   timelapse timelapse icon \u0026lt;mat-icon\u0026gt;timelapse\u0026lt;\u0026#47;mat-icon\u0026gt;   timer timer icon \u0026lt;mat-icon\u0026gt;timer\u0026lt;\u0026#47;mat-icon\u0026gt;   timer_10 timer 10 icon \u0026lt;mat-icon\u0026gt;timer_10\u0026lt;\u0026#47;mat-icon\u0026gt;   timer_3 timer 3 icon \u0026lt;mat-icon\u0026gt;timer_3\u0026lt;\u0026#47;mat-icon\u0026gt;   timer_off timer off icon \u0026lt;mat-icon\u0026gt;timer_off\u0026lt;\u0026#47;mat-icon\u0026gt;   tonality tonality icon \u0026lt;mat-icon\u0026gt;tonality\u0026lt;\u0026#47;mat-icon\u0026gt;   transform transform icon \u0026lt;mat-icon\u0026gt;transform\u0026lt;\u0026#47;mat-icon\u0026gt;   tune tune icon \u0026lt;mat-icon\u0026gt;tune\u0026lt;\u0026#47;mat-icon\u0026gt;   view_comfy view comfy icon \u0026lt;mat-icon\u0026gt;view_comfy\u0026lt;\u0026#47;mat-icon\u0026gt;   view_compact view compact icon \u0026lt;mat-icon\u0026gt;view_compact\u0026lt;\u0026#47;mat-icon\u0026gt;   vignette vignette icon \u0026lt;mat-icon\u0026gt;vignette\u0026lt;\u0026#47;mat-icon\u0026gt;   wb_auto wb auto icon \u0026lt;mat-icon\u0026gt;wb_auto\u0026lt;\u0026#47;mat-icon\u0026gt;   wb_cloudy wb cloudy icon \u0026lt;mat-icon\u0026gt;wb_cloudy\u0026lt;\u0026#47;mat-icon\u0026gt;   wb_incandescent wb incandescent icon \u0026lt;mat-icon\u0026gt;wb_incandescent\u0026lt;\u0026#47;mat-icon\u0026gt;   wb_iridescent wb iridescent icon \u0026lt;mat-icon\u0026gt;wb_iridescent\u0026lt;\u0026#47;mat-icon\u0026gt;   wb_sunny wb sunny icon \u0026lt;mat-icon\u0026gt;wb_sunny\u0026lt;\u0026#47;mat-icon\u0026gt;    icon \u0026lt;mat-icon\u0026gt; \u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Maps   Icon Name mat-icon code     360 360 icon \u0026lt;mat-icon\u0026gt; 360\u0026lt;\u0026#47;mat-icon\u0026gt;   add_location add location icon \u0026lt;mat-icon\u0026gt; add_location\u0026lt;\u0026#47;mat-icon\u0026gt;   atm atm icon \u0026lt;mat-icon\u0026gt; atm\u0026lt;\u0026#47;mat-icon\u0026gt;   beenhere beenhere icon \u0026lt;mat-icon\u0026gt; beenhere\u0026lt;\u0026#47;mat-icon\u0026gt;   category category icon \u0026lt;mat-icon\u0026gt; category\u0026lt;\u0026#47;mat-icon\u0026gt;   compass_calibration compass calibration icon \u0026lt;mat-icon\u0026gt; compass_calibration\u0026lt;\u0026#47;mat-icon\u0026gt;   departure_board departure board icon \u0026lt;mat-icon\u0026gt; departure_board\u0026lt;\u0026#47;mat-icon\u0026gt;   directions directions icon \u0026lt;mat-icon\u0026gt; directions\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_bike directions bike icon \u0026lt;mat-icon\u0026gt; directions_bike\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_boat directions boat icon \u0026lt;mat-icon\u0026gt; directions_boat\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_bus directions bus icon \u0026lt;mat-icon\u0026gt; directions_bus\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_car directions car icon \u0026lt;mat-icon\u0026gt; directions_car\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_railway directions railway icon \u0026lt;mat-icon\u0026gt; directions_railway\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_run directions run icon \u0026lt;mat-icon\u0026gt; directions_run\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_subway directions subway icon \u0026lt;mat-icon\u0026gt; directions_subway\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_transit directions transit icon \u0026lt;mat-icon\u0026gt; directions_transit\u0026lt;\u0026#47;mat-icon\u0026gt;   directions_walk directions walk icon \u0026lt;mat-icon\u0026gt; directions_walk\u0026lt;\u0026#47;mat-icon\u0026gt;   edit_attributes edit attributes icon \u0026lt;mat-icon\u0026gt; edit_attributes\u0026lt;\u0026#47;mat-icon\u0026gt;   edit_location edit location icon \u0026lt;mat-icon\u0026gt; edit_location\u0026lt;\u0026#47;mat-icon\u0026gt;   ev_station ev station icon \u0026lt;mat-icon\u0026gt; ev_station\u0026lt;\u0026#47;mat-icon\u0026gt;   fastfood fastfood icon \u0026lt;mat-icon\u0026gt; fastfood\u0026lt;\u0026#47;mat-icon\u0026gt;   flight flight icon \u0026lt;mat-icon\u0026gt; flight\u0026lt;\u0026#47;mat-icon\u0026gt;   hotel hotel icon \u0026lt;mat-icon\u0026gt; hotel\u0026lt;\u0026#47;mat-icon\u0026gt;   layers layers icon \u0026lt;mat-icon\u0026gt; layers\u0026lt;\u0026#47;mat-icon\u0026gt;   layers_clear layers clear icon \u0026lt;mat-icon\u0026gt; layers_clear\u0026lt;\u0026#47;mat-icon\u0026gt;   local_activity local activity icon \u0026lt;mat-icon\u0026gt; local_activity\u0026lt;\u0026#47;mat-icon\u0026gt;   local_airport local airport icon \u0026lt;mat-icon\u0026gt; local_airport\u0026lt;\u0026#47;mat-icon\u0026gt;   local_atm local atm icon \u0026lt;mat-icon\u0026gt; local_atm\u0026lt;\u0026#47;mat-icon\u0026gt;   local_bar local bar icon \u0026lt;mat-icon\u0026gt; local_bar\u0026lt;\u0026#47;mat-icon\u0026gt;   local_cafe local cafe icon \u0026lt;mat-icon\u0026gt; local_cafe\u0026lt;\u0026#47;mat-icon\u0026gt;   local_car_wash local car wash icon \u0026lt;mat-icon\u0026gt; local_car_wash\u0026lt;\u0026#47;mat-icon\u0026gt;   local_convenience_store local convenience store icon \u0026lt;mat-icon\u0026gt; local_convenience_store\u0026lt;\u0026#47;mat-icon\u0026gt;   local_dining local dining icon \u0026lt;mat-icon\u0026gt; local_dining\u0026lt;\u0026#47;mat-icon\u0026gt;   local_drink local drink icon \u0026lt;mat-icon\u0026gt; local_drink\u0026lt;\u0026#47;mat-icon\u0026gt;   local_florist local florist icon \u0026lt;mat-icon\u0026gt; local_florist\u0026lt;\u0026#47;mat-icon\u0026gt;   local_gas_station local gas station icon \u0026lt;mat-icon\u0026gt; local_gas_station\u0026lt;\u0026#47;mat-icon\u0026gt;   local_grocery_store local grocery store icon \u0026lt;mat-icon\u0026gt; local_grocery_store\u0026lt;\u0026#47;mat-icon\u0026gt;   local_hospital local hospital icon \u0026lt;mat-icon\u0026gt; local_hospital\u0026lt;\u0026#47;mat-icon\u0026gt;   local_hotel local hotel icon \u0026lt;mat-icon\u0026gt; local_hotel\u0026lt;\u0026#47;mat-icon\u0026gt;   local_laundry_service local laundry service icon \u0026lt;mat-icon\u0026gt; local_laundry_service\u0026lt;\u0026#47;mat-icon\u0026gt;   local_library local library icon \u0026lt;mat-icon\u0026gt; local_library\u0026lt;\u0026#47;mat-icon\u0026gt;   local_mall local mall icon \u0026lt;mat-icon\u0026gt; local_mall\u0026lt;\u0026#47;mat-icon\u0026gt;   local_movies local movies icon \u0026lt;mat-icon\u0026gt; local_movies\u0026lt;\u0026#47;mat-icon\u0026gt;   local_offer local offer icon \u0026lt;mat-icon\u0026gt; local_offer\u0026lt;\u0026#47;mat-icon\u0026gt;   local_parking local parking icon \u0026lt;mat-icon\u0026gt; local_parking\u0026lt;\u0026#47;mat-icon\u0026gt;   local_pharmacy local pharmacy icon \u0026lt;mat-icon\u0026gt; local_pharmacy\u0026lt;\u0026#47;mat-icon\u0026gt;   local_phone local phone icon \u0026lt;mat-icon\u0026gt; local_phone\u0026lt;\u0026#47;mat-icon\u0026gt;   local_pizza local pizza icon \u0026lt;mat-icon\u0026gt; local_pizza\u0026lt;\u0026#47;mat-icon\u0026gt;   local_play local play icon \u0026lt;mat-icon\u0026gt; local_play\u0026lt;\u0026#47;mat-icon\u0026gt;   local_post_office local post office icon \u0026lt;mat-icon\u0026gt; local_post_office\u0026lt;\u0026#47;mat-icon\u0026gt;   local_printshop local printshop icon \u0026lt;mat-icon\u0026gt; local_printshop\u0026lt;\u0026#47;mat-icon\u0026gt;   local_see local see icon \u0026lt;mat-icon\u0026gt; local_see\u0026lt;\u0026#47;mat-icon\u0026gt;   local_shipping local shipping icon \u0026lt;mat-icon\u0026gt; local_shipping\u0026lt;\u0026#47;mat-icon\u0026gt;   local_taxi local taxi icon \u0026lt;mat-icon\u0026gt; local_taxi\u0026lt;\u0026#47;mat-icon\u0026gt;   map map icon \u0026lt;mat-icon\u0026gt; map\u0026lt;\u0026#47;mat-icon\u0026gt;   money money icon \u0026lt;mat-icon\u0026gt; money\u0026lt;\u0026#47;mat-icon\u0026gt;   my_location my location icon \u0026lt;mat-icon\u0026gt; my_location\u0026lt;\u0026#47;mat-icon\u0026gt;   navigation navigation icon \u0026lt;mat-icon\u0026gt; navigation\u0026lt;\u0026#47;mat-icon\u0026gt;   near_me near me icon \u0026lt;mat-icon\u0026gt; near_me\u0026lt;\u0026#47;mat-icon\u0026gt;   not_listed_location not listed location icon \u0026lt;mat-icon\u0026gt; not_listed_location\u0026lt;\u0026#47;mat-icon\u0026gt;   person_pin person pin icon \u0026lt;mat-icon\u0026gt; person_pin\u0026lt;\u0026#47;mat-icon\u0026gt;   person_pin_circle person pin circle icon \u0026lt;mat-icon\u0026gt; person_pin_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   pin_drop pin drop icon \u0026lt;mat-icon\u0026gt; pin_drop\u0026lt;\u0026#47;mat-icon\u0026gt;   place place icon \u0026lt;mat-icon\u0026gt; place\u0026lt;\u0026#47;mat-icon\u0026gt;   rate_review rate review icon \u0026lt;mat-icon\u0026gt; rate_review\u0026lt;\u0026#47;mat-icon\u0026gt;   restaurant restaurant icon \u0026lt;mat-icon\u0026gt; restaurant\u0026lt;\u0026#47;mat-icon\u0026gt;   restaurant_menu restaurant menu icon \u0026lt;mat-icon\u0026gt; restaurant_menu\u0026lt;\u0026#47;mat-icon\u0026gt;   satellite satellite icon \u0026lt;mat-icon\u0026gt; satellite\u0026lt;\u0026#47;mat-icon\u0026gt;   store_mall_directory store mall directory icon \u0026lt;mat-icon\u0026gt; store_mall_directory\u0026lt;\u0026#47;mat-icon\u0026gt;   streetview streetview icon \u0026lt;mat-icon\u0026gt; streetview\u0026lt;\u0026#47;mat-icon\u0026gt;   subway subway icon \u0026lt;mat-icon\u0026gt; subway\u0026lt;\u0026#47;mat-icon\u0026gt;   terrain terrain icon \u0026lt;mat-icon\u0026gt; terrain\u0026lt;\u0026#47;mat-icon\u0026gt;   traffic traffic icon \u0026lt;mat-icon\u0026gt; traffic\u0026lt;\u0026#47;mat-icon\u0026gt;   train train icon \u0026lt;mat-icon\u0026gt; train\u0026lt;\u0026#47;mat-icon\u0026gt;   tram tram icon \u0026lt;mat-icon\u0026gt; tram\u0026lt;\u0026#47;mat-icon\u0026gt;   transfer_within_a_station transfer within a station icon \u0026lt;mat-icon\u0026gt; transfer_within_a_station\u0026lt;\u0026#47;mat-icon\u0026gt;   transit_enterexit transit enterexit icon \u0026lt;mat-icon\u0026gt; transit_enterexit\u0026lt;\u0026#47;mat-icon\u0026gt;   trip_origin trip origin icon \u0026lt;mat-icon\u0026gt; trip_origin\u0026lt;\u0026#47;mat-icon\u0026gt;   zoom_out_map zoom out map icon \u0026lt;mat-icon\u0026gt; zoom_out_map\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Navigation   Icon Name mat-icon code     apps apps icon \u0026lt;mat-icon\u0026gt;apps\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_back arrow back icon \u0026lt;mat-icon\u0026gt;arrow_back\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_back_ios arrow back ios icon \u0026lt;mat-icon\u0026gt;arrow_back_ios\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_downward arrow downward icon \u0026lt;mat-icon\u0026gt;arrow_downward\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_drop_down arrow drop down icon \u0026lt;mat-icon\u0026gt;arrow_drop_down\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_drop_down_circle arrow drop down circle icon \u0026lt;mat-icon\u0026gt;arrow_drop_down_circle\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_drop_up arrow drop up icon \u0026lt;mat-icon\u0026gt;arrow_drop_up\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_forward arrow forward icon \u0026lt;mat-icon\u0026gt;arrow_forward\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_forward_ios arrow forward ios icon \u0026lt;mat-icon\u0026gt;arrow_forward_ios\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_left arrow left icon \u0026lt;mat-icon\u0026gt;arrow_left\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_right arrow right icon \u0026lt;mat-icon\u0026gt;arrow_right\u0026lt;\u0026#47;mat-icon\u0026gt;   arrow_upward arrow upward icon \u0026lt;mat-icon\u0026gt;arrow_upward\u0026lt;\u0026#47;mat-icon\u0026gt;   cancel cancel icon \u0026lt;mat-icon\u0026gt;cancel\u0026lt;\u0026#47;mat-icon\u0026gt;   check check icon \u0026lt;mat-icon\u0026gt;check\u0026lt;\u0026#47;mat-icon\u0026gt;   chevron_left chevron left icon \u0026lt;mat-icon\u0026gt;chevron_left\u0026lt;\u0026#47;mat-icon\u0026gt;   chevron_right chevron right icon \u0026lt;mat-icon\u0026gt;chevron_right\u0026lt;\u0026#47;mat-icon\u0026gt;   close close icon \u0026lt;mat-icon\u0026gt;close\u0026lt;\u0026#47;mat-icon\u0026gt;   expand_less expand less icon \u0026lt;mat-icon\u0026gt;expand_less\u0026lt;\u0026#47;mat-icon\u0026gt;   expand_more expand more icon \u0026lt;mat-icon\u0026gt;expand_more\u0026lt;\u0026#47;mat-icon\u0026gt;   first_page first page icon \u0026lt;mat-icon\u0026gt;first_page\u0026lt;\u0026#47;mat-icon\u0026gt;   fullscreen fullscreen icon \u0026lt;mat-icon\u0026gt;fullscreen\u0026lt;\u0026#47;mat-icon\u0026gt;   fullscreen_exit fullscreen exit icon \u0026lt;mat-icon\u0026gt;fullscreen_exit\u0026lt;\u0026#47;mat-icon\u0026gt;   last_page last page icon \u0026lt;mat-icon\u0026gt;last_page\u0026lt;\u0026#47;mat-icon\u0026gt;   menu menu icon \u0026lt;mat-icon\u0026gt;menu\u0026lt;\u0026#47;mat-icon\u0026gt;   more_horiz more horiz icon \u0026lt;mat-icon\u0026gt;more_horiz\u0026lt;\u0026#47;mat-icon\u0026gt;   more_vert more vert icon \u0026lt;mat-icon\u0026gt;more_vert\u0026lt;\u0026#47;mat-icon\u0026gt;   refresh refresh icon \u0026lt;mat-icon\u0026gt;refresh\u0026lt;\u0026#47;mat-icon\u0026gt;   subdirectory_arrow_left subdirectory arrow left icon \u0026lt;mat-icon\u0026gt;subdirectory_arrow_left\u0026lt;\u0026#47;mat-icon\u0026gt;   subdirectory_arrow_right subdirectory arrow right icon \u0026lt;mat-icon\u0026gt;subdirectory_arrow_right\u0026lt;\u0026#47;mat-icon\u0026gt;   unfold_less unfold less icon \u0026lt;mat-icon\u0026gt;unfold_less\u0026lt;\u0026#47;mat-icon\u0026gt;   unfold_more unfold more icon \u0026lt;mat-icon\u0026gt;unfold_more\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Notification   Icon Name mat-icon code     adb adb icon \u0026lt;mat-icon\u0026gt;adb\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_flat airline seat flat icon \u0026lt;mat-icon\u0026gt;airline_seat_flat\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_flat_angled airline seat flat angled icon \u0026lt;mat-icon\u0026gt;airline_seat_flat_angled\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_individual_suite airline seat individual suite icon \u0026lt;mat-icon\u0026gt;airline_seat_individual_suite\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_legroom_extra airline seat legroom extra icon \u0026lt;mat-icon\u0026gt;airline_seat_legroom_extra\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_legroom_normal airline seat legroom normal icon \u0026lt;mat-icon\u0026gt;airline_seat_legroom_normal\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_legroom_reduced airline seat legroom reduced icon \u0026lt;mat-icon\u0026gt;airline_seat_legroom_reduced\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_recline_extra airline seat recline extra icon \u0026lt;mat-icon\u0026gt;airline_seat_recline_extra\u0026lt;\u0026#47;mat-icon\u0026gt;   airline_seat_recline_normal airline seat recline normal icon \u0026lt;mat-icon\u0026gt;airline_seat_recline_normal\u0026lt;\u0026#47;mat-icon\u0026gt;   bluetooth_audio bluetooth audio icon \u0026lt;mat-icon\u0026gt;bluetooth_audio\u0026lt;\u0026#47;mat-icon\u0026gt;   confirmation_number confirmation number icon \u0026lt;mat-icon\u0026gt;confirmation_number\u0026lt;\u0026#47;mat-icon\u0026gt;   disc_full disc full icon \u0026lt;mat-icon\u0026gt;disc_full\u0026lt;\u0026#47;mat-icon\u0026gt;   drive_eta drive eta icon \u0026lt;mat-icon\u0026gt;drive_eta\u0026lt;\u0026#47;mat-icon\u0026gt;   enhanced_encryption enhanced encryption icon \u0026lt;mat-icon\u0026gt;enhanced_encryption\u0026lt;\u0026#47;mat-icon\u0026gt;   event_available event available icon \u0026lt;mat-icon\u0026gt;event_available\u0026lt;\u0026#47;mat-icon\u0026gt;   event_busy event busy icon \u0026lt;mat-icon\u0026gt;event_busy\u0026lt;\u0026#47;mat-icon\u0026gt;   event_note event note icon \u0026lt;mat-icon\u0026gt;event_note\u0026lt;\u0026#47;mat-icon\u0026gt;   folder_special folder special icon \u0026lt;mat-icon\u0026gt;folder_special\u0026lt;\u0026#47;mat-icon\u0026gt;   live_tv live tv icon \u0026lt;mat-icon\u0026gt;live_tv\u0026lt;\u0026#47;mat-icon\u0026gt;   mms mms icon \u0026lt;mat-icon\u0026gt;mms\u0026lt;\u0026#47;mat-icon\u0026gt;   more more icon \u0026lt;mat-icon\u0026gt;more\u0026lt;\u0026#47;mat-icon\u0026gt;   network_check network check icon \u0026lt;mat-icon\u0026gt;network_check\u0026lt;\u0026#47;mat-icon\u0026gt;   network_locked network locked icon \u0026lt;mat-icon\u0026gt;network_locked\u0026lt;\u0026#47;mat-icon\u0026gt;   no_encryption no encryption icon \u0026lt;mat-icon\u0026gt;no_encryption\u0026lt;\u0026#47;mat-icon\u0026gt;   ondemand_video ondemand video icon \u0026lt;mat-icon\u0026gt;ondemand_video\u0026lt;\u0026#47;mat-icon\u0026gt;   personal_video personal video icon \u0026lt;mat-icon\u0026gt;personal_video\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_bluetooth_speaker phone bluetooth speaker icon \u0026lt;mat-icon\u0026gt;phone_bluetooth_speaker\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_callback phone callback icon \u0026lt;mat-icon\u0026gt;phone_callback\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_forwarded phone forwarded icon \u0026lt;mat-icon\u0026gt;phone_forwarded\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_in_talk phone in talk icon \u0026lt;mat-icon\u0026gt;phone_in_talk\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_locked phone locked icon \u0026lt;mat-icon\u0026gt;phone_locked\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_missed phone missed icon \u0026lt;mat-icon\u0026gt;phone_missed\u0026lt;\u0026#47;mat-icon\u0026gt;   phone_paused phone paused icon \u0026lt;mat-icon\u0026gt;phone_paused\u0026lt;\u0026#47;mat-icon\u0026gt;   power power icon \u0026lt;mat-icon\u0026gt;power\u0026lt;\u0026#47;mat-icon\u0026gt;   power_off power off icon \u0026lt;mat-icon\u0026gt;power_off\u0026lt;\u0026#47;mat-icon\u0026gt;   priority_high priority high icon \u0026lt;mat-icon\u0026gt;priority_high\u0026lt;\u0026#47;mat-icon\u0026gt;   sd_card sd card icon \u0026lt;mat-icon\u0026gt;sd_card\u0026lt;\u0026#47;mat-icon\u0026gt;   sms sms icon \u0026lt;mat-icon\u0026gt;sms\u0026lt;\u0026#47;mat-icon\u0026gt;   sms_failed sms failed icon \u0026lt;mat-icon\u0026gt;sms_failed\u0026lt;\u0026#47;mat-icon\u0026gt;   sync sync icon \u0026lt;mat-icon\u0026gt;sync\u0026lt;\u0026#47;mat-icon\u0026gt;   sync_disabled sync disabled icon \u0026lt;mat-icon\u0026gt;sync_disabled\u0026lt;\u0026#47;mat-icon\u0026gt;   sync_problem sync problem icon \u0026lt;mat-icon\u0026gt;sync_problem\u0026lt;\u0026#47;mat-icon\u0026gt;   system_update system update icon \u0026lt;mat-icon\u0026gt;system_update\u0026lt;\u0026#47;mat-icon\u0026gt;   tap_and_play tap and play icon \u0026lt;mat-icon\u0026gt;tap_and_play\u0026lt;\u0026#47;mat-icon\u0026gt;   time_to_leave time to leave icon \u0026lt;mat-icon\u0026gt;time_to_leave\u0026lt;\u0026#47;mat-icon\u0026gt;   tv_off tv off icon \u0026lt;mat-icon\u0026gt;tv_off\u0026lt;\u0026#47;mat-icon\u0026gt;   vibration vibration icon \u0026lt;mat-icon\u0026gt;vibration\u0026lt;\u0026#47;mat-icon\u0026gt;   voice_chat voice chat icon \u0026lt;mat-icon\u0026gt;voice_chat\u0026lt;\u0026#47;mat-icon\u0026gt;   vpn_lock vpn lock icon \u0026lt;mat-icon\u0026gt;vpn_lock\u0026lt;\u0026#47;mat-icon\u0026gt;   wc wc icon \u0026lt;mat-icon\u0026gt;wc\u0026lt;\u0026#47;mat-icon\u0026gt;   wifi wifi icon \u0026lt;mat-icon\u0026gt;wifi\u0026lt;\u0026#47;mat-icon\u0026gt;   wifi_off wifi off icon \u0026lt;mat-icon\u0026gt;wifi_off\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Places   Icon Name mat-icon code     ac_unit ac unit icon \u0026lt;mat-icon\u0026gt;ac_unit\u0026lt;\u0026#47;mat-icon\u0026gt;   airport_shuttle airport shuttle icon \u0026lt;mat-icon\u0026gt;airport_shuttle\u0026lt;\u0026#47;mat-icon\u0026gt;   all_inclusive all inclusive icon \u0026lt;mat-icon\u0026gt;all_inclusive\u0026lt;\u0026#47;mat-icon\u0026gt;   beach_access beach access icon \u0026lt;mat-icon\u0026gt;beach_access\u0026lt;\u0026#47;mat-icon\u0026gt;   business_center business center icon \u0026lt;mat-icon\u0026gt;business_center\u0026lt;\u0026#47;mat-icon\u0026gt;   casino casino icon \u0026lt;mat-icon\u0026gt;casino\u0026lt;\u0026#47;mat-icon\u0026gt;   child_care child care icon \u0026lt;mat-icon\u0026gt;child_care\u0026lt;\u0026#47;mat-icon\u0026gt;   child_friendly child friendly icon \u0026lt;mat-icon\u0026gt;child_friendly\u0026lt;\u0026#47;mat-icon\u0026gt;   fitness_center fitness center icon \u0026lt;mat-icon\u0026gt;fitness_center\u0026lt;\u0026#47;mat-icon\u0026gt;   free_breakfast free breakfast icon \u0026lt;mat-icon\u0026gt;free_breakfast\u0026lt;\u0026#47;mat-icon\u0026gt;   golf_course golf course icon \u0026lt;mat-icon\u0026gt;golf_course\u0026lt;\u0026#47;mat-icon\u0026gt;   hot_tub hot tub icon \u0026lt;mat-icon\u0026gt;hot_tub\u0026lt;\u0026#47;mat-icon\u0026gt;   kitchen kitchen icon \u0026lt;mat-icon\u0026gt;kitchen\u0026lt;\u0026#47;mat-icon\u0026gt;   meeting_room meeting room icon \u0026lt;mat-icon\u0026gt;meeting_room\u0026lt;\u0026#47;mat-icon\u0026gt;   no_meeting_room no meeting room icon \u0026lt;mat-icon\u0026gt;no_meeting_room\u0026lt;\u0026#47;mat-icon\u0026gt;   pool pool icon \u0026lt;mat-icon\u0026gt;pool\u0026lt;\u0026#47;mat-icon\u0026gt;   room_service room service icon \u0026lt;mat-icon\u0026gt;room_service\u0026lt;\u0026#47;mat-icon\u0026gt;   rv_hookup rv hookup icon \u0026lt;mat-icon\u0026gt;rv_hookup\u0026lt;\u0026#47;mat-icon\u0026gt;   smoke_free smoke free icon \u0026lt;mat-icon\u0026gt;smoke_free\u0026lt;\u0026#47;mat-icon\u0026gt;   smoking_rooms smoking rooms icon \u0026lt;mat-icon\u0026gt;smoking_rooms\u0026lt;\u0026#47;mat-icon\u0026gt;   spa spa icon \u0026lt;mat-icon\u0026gt;spa\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Toggle   Icon Name mat-icon code     check_box check box icon \u0026lt;mat-icon\u0026gt;check_box\u0026lt;\u0026#47;mat-icon\u0026gt;   check_box_outline_blank check box outline blank icon \u0026lt;mat-icon\u0026gt;check_box_outline_blank\u0026lt;\u0026#47;mat-icon\u0026gt;   indeterminate_check_box indeterminate check box icon \u0026lt;mat-icon\u0026gt;indeterminate_check_box\u0026lt;\u0026#47;mat-icon\u0026gt;   radio_button_checked radio button checked icon \u0026lt;mat-icon\u0026gt;radio_button_checked\u0026lt;\u0026#47;mat-icon\u0026gt;   radio_button_unchecked radio button unchecked icon \u0026lt;mat-icon\u0026gt;radio_button_unchecked\u0026lt;\u0026#47;mat-icon\u0026gt;   star star icon \u0026lt;mat-icon\u0026gt;star\u0026lt;\u0026#47;mat-icon\u0026gt;   star_border star border icon \u0026lt;mat-icon\u0026gt;star_border\u0026lt;\u0026#47;mat-icon\u0026gt;   star_half star half icon \u0026lt;mat-icon\u0026gt;star_half\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Warning   Icon Name mat-icon code     add_alert add alert icon \u0026lt;mat-icon\u0026gt;add_alert\u0026lt;\u0026#47;mat-icon\u0026gt;   error error icon \u0026lt;mat-icon\u0026gt;error\u0026lt;\u0026#47;mat-icon\u0026gt;   error_outline error outline icon \u0026lt;mat-icon\u0026gt;error_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   notification_important notification important icon \u0026lt;mat-icon\u0026gt;notification_important\u0026lt;\u0026#47;mat-icon\u0026gt;   warning warning icon \u0026lt;mat-icon\u0026gt;warning\u0026lt;\u0026#47;mat-icon\u0026gt;    mat-icon List Category-Social   Icon Name mat-icon code     cake cake icon \u0026lt;mat-icon\u0026gt;cake\u0026lt;\u0026#47;mat-icon\u0026gt;   domain domain icon \u0026lt;mat-icon\u0026gt;domain\u0026lt;\u0026#47;mat-icon\u0026gt;   group group icon \u0026lt;mat-icon\u0026gt;group\u0026lt;\u0026#47;mat-icon\u0026gt;   group_add group add icon \u0026lt;mat-icon\u0026gt;group_add\u0026lt;\u0026#47;mat-icon\u0026gt;   location_city location city icon \u0026lt;mat-icon\u0026gt;location_city\u0026lt;\u0026#47;mat-icon\u0026gt;   mood mood icon \u0026lt;mat-icon\u0026gt;mood\u0026lt;\u0026#47;mat-icon\u0026gt;   mood_bad mood bad icon \u0026lt;mat-icon\u0026gt;mood_bad\u0026lt;\u0026#47;mat-icon\u0026gt;   notifications notifications icon \u0026lt;mat-icon\u0026gt;notifications\u0026lt;\u0026#47;mat-icon\u0026gt;   notifications_active notifications active icon \u0026lt;mat-icon\u0026gt;notifications_active\u0026lt;\u0026#47;mat-icon\u0026gt;   notifications_none notifications none icon \u0026lt;mat-icon\u0026gt;notifications_none\u0026lt;\u0026#47;mat-icon\u0026gt;   notifications_off notifications off icon \u0026lt;mat-icon\u0026gt;notifications_off\u0026lt;\u0026#47;mat-icon\u0026gt;   notifications_paused notifications paused icon \u0026lt;mat-icon\u0026gt;notifications_paused\u0026lt;\u0026#47;mat-icon\u0026gt;   pages pages icon \u0026lt;mat-icon\u0026gt;pages\u0026lt;\u0026#47;mat-icon\u0026gt;   party_mode party mode icon \u0026lt;mat-icon\u0026gt;party_mode\u0026lt;\u0026#47;mat-icon\u0026gt;   people people icon \u0026lt;mat-icon\u0026gt;people\u0026lt;\u0026#47;mat-icon\u0026gt;   people_outline people outline icon \u0026lt;mat-icon\u0026gt;people_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   person person icon \u0026lt;mat-icon\u0026gt;person\u0026lt;\u0026#47;mat-icon\u0026gt;   person_add person add icon \u0026lt;mat-icon\u0026gt;person_add\u0026lt;\u0026#47;mat-icon\u0026gt;   person_outline person outline icon \u0026lt;mat-icon\u0026gt;person_outline\u0026lt;\u0026#47;mat-icon\u0026gt;   plus_one plus one icon \u0026lt;mat-icon\u0026gt;plus_one\u0026lt;\u0026#47;mat-icon\u0026gt;   poll poll icon \u0026lt;mat-icon\u0026gt;poll\u0026lt;\u0026#47;mat-icon\u0026gt;   public public icon \u0026lt;mat-icon\u0026gt;public\u0026lt;\u0026#47;mat-icon\u0026gt;   school school icon \u0026lt;mat-icon\u0026gt;school\u0026lt;\u0026#47;mat-icon\u0026gt;   sentiment_dissatisfied sentiment dissatisfied icon \u0026lt;mat-icon\u0026gt;sentiment_dissatisfied\u0026lt;\u0026#47;mat-icon\u0026gt;   sentiment_satisfied sentiment satisfied icon \u0026lt;mat-icon\u0026gt;sentiment_satisfied\u0026lt;\u0026#47;mat-icon\u0026gt;   sentiment_very_dissatisfied sentiment very dissatisfied icon \u0026lt;mat-icon\u0026gt;sentiment_very_dissatisfied\u0026lt;\u0026#47;mat-icon\u0026gt;   sentiment_very_satisfied sentiment very satisfied icon \u0026lt;mat-icon\u0026gt;sentiment_very_satisfied\u0026lt;\u0026#47;mat-icon\u0026gt;   share share icon \u0026lt;mat-icon\u0026gt;share\u0026lt;\u0026#47;mat-icon\u0026gt;   thumb_down_alt thumb down alt icon \u0026lt;mat-icon\u0026gt;thumb_down_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   thumb_up_alt thumb up alt icon \u0026lt;mat-icon\u0026gt;thumb_up_alt\u0026lt;\u0026#47;mat-icon\u0026gt;   whatshot whatshot icon \u0026lt;mat-icon\u0026gt;whatshot\u0026lt;\u0026#47;mat-icon\u0026gt;    Download Angular Material Icons List PDF ","date":1534381265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553966288,"objectID":"dcb4c597c45f306af3b0293c68a54fb6","permalink":"https://www.angularjswiki.com/angular/angular-material-icons-list-mat-icon-list/","publishdate":"2018-08-16T01:01:05Z","relpermalink":"/angular/angular-material-icons-list-mat-icon-list/","section":"angular","summary":"mat-icon selector used to display Material icons in Angular.We have around 900+ Angular Material icons.To show the below mat-icon list icons,We need to load material icons css provided by Google","tags":null,"title":"Mat-Icon List : 900+ Angular Material Icons","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" KeyValue pipe released in Angular 6.1 to loop through objects,Maps and arrays.Now by passing KeyValue pipe to *ngFor we can loop through objects key values \u0026amp; maps.\nPrior to this Angular 6.1 release we cannot iterate directly through objects key values \u0026amp; maps using *ngFor directive.\nTo tackle this issue AngularÂ keyvalue pipe has been introduced.\nThis keyvalue pipe converts Object or Map into an array of key value pairs. Converted array will be sorted by keys according to unicode values.\nAnd if the keys are of complex types we can pass compare function to sort the array.\nGo through the below angular examples to understand Angular keyvalue pipe further.\nTable of Contents\r   Angular KeyValue Pipe Example Loop Object key Values using *ngFor \u0026amp; keyvalue pipe Angular KeyValue Pipe Default sorting Passing custom compare function to angular KeyValue Pipe for sorting Loop Map key Values using *ngFor \u0026amp; Angular keyvalue pipe Loop Arrays using *ngFor \u0026amp; Angular keyvalue pipe The pipe \u0026lsquo;keyvalue\u0026rsquo; could not be found error   \rAngular KeyValue Pipe Example We will create a new component in our Angular project called KeyValuepipeComponent. In that we will add a simple object, map , array variables.\nHave a look at the below keyvalue pipe example\nimport { Component, OnInit } from '@angular/core'; @Component({ selector:'app-keyvaluepipe', templateUrl:'./keyvaluepipe.component.html', styleUrls: ['./keyvaluepipe.component.css'] }) export class KeyvaluepipeComponent implements OnInit { object: {[key:number]:string} = {2:'Angular keyvalue Pipe', 1:'Angular ngFor'}; map=new Map([[2, 'Angular keyvalue Pipe'], [1, 'Angular ngFor']]); array= [\u0026quot;Angular keyvalue Pipe\u0026quot;,\u0026quot;Angular ngFor\u0026quot;] constructor() { } ngOnInit() {} }  Loop Object key Values using *ngFor \u0026amp; keyvalue pipe And in our template file we will loop the object keys and value using *ngFor and keyvalue pipe\n \u0026lt;p\u0026gt;Loop Through Object using KeyValue Pipe and *ngFor\u0026lt;/p\u0026gt; \u0026lt;div *ngFor=\u0026quot;let item of object | keyvalue\u0026quot;\u0026gt; {{item | json }} Object Key:{{item.key}} and Object Value:{{item.value}} \u0026lt;/div\u0026gt;  And the out will be\nLoop Through Object using KeyValue Pipe { \u0026quot;key\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular ngFor\u0026quot; }Â Object Key:1 and Object Value:Angular ngFor { \u0026quot;key\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular keyvalue Pipe\u0026quot; }Â Object Key:2 and Object Value:Angular keyvalue Pipe  The converted output array will be ordered by keys(Unicode point value) that is why Angular ngFor displayed ahead of Angular keyvalue Pipe\nAngular KeyValue Pipe Default sorting As mentioned above keyvalue pipe sorts the converted array based upon unicode point values of keys\n If the keys are numbers they are sorted by ascending order. If the keys are strings they are sorted by alphabetical order. If the keys are mixed i.e., one key is string and other key is number then both are converted to strings, first sorted by numbers in ascending order and then sorted by strings in alphabetical order. If the key is undefined or null they are displayed at last.   Angular KeyValue pipe uses defaultComparator function to sort the key value array. But if the key is complex,we can pass our own custom compare function to sort the array.\nGo through the below example\nPassing custom compare function to angular KeyValue Pipe for sorting If the object key is a complex type, the defaultComparatorÂ may not serve our purpose. We need to write our own comparator.\nexport class ProductModel { productId: Product; productType : string; constructor(id:Product,description:string){ this.productId = id; this.productType = description; } } export class Product{ id:number; description:string; constructor(id:number,key:string){ this.id=id; this.description=key; } }  I created two classes Product and ProductModel. We will use these both classes to create a complex object type\nproducts=newMap\u0026lt;Product,ProductModel\u0026gt;(); constructor() { var key=new Product(900,\u0026quot;Angular Video\u0026quot;); var product=new ProductModel(key,\u0026quot;Video\u0026quot;); this.products.set(key,product); key=new Product(100,\u0026quot;Angular Book\u0026quot;); product=new ProductModel(key,\u0026quot;Book\u0026quot;); this.products.set(key,product); }  products variable is of a type Map\u0026lt;Product,ProductModel\u0026gt;. Where key type is Product.Now we will use keyvalue pipe to loop through the products variable.\n\u0026lt;p\u0026gt;Complex Types\u0026lt;/p\u0026gt;\u0026lt;br\u0026gt; \u0026lt;div *ngFor=\u0026quot;let product of products | keyvalue\u0026quot;\u0026gt; {{product| json }} \u0026lt;br\u0026gt; Product key: {{product.key}} and Product Value:{{product.value}} \u0026lt;/div\u0026gt;  And the output is\n{ \u0026quot;key\u0026quot;: { \u0026quot;id\u0026quot;: 900, \u0026quot;description\u0026quot;: \u0026quot;Angular Video\u0026quot; }, \u0026quot;value\u0026quot;: { \u0026quot;productId\u0026quot;: { \u0026quot;id\u0026quot;: 900, \u0026quot;description\u0026quot;: \u0026quot;Angular Video\u0026quot; }, \u0026quot;productType\u0026quot;: \u0026quot;Video\u0026quot; } } Product Id: 900 Product description: Angular Video Product Model :Video { \u0026quot;key\u0026quot;: { \u0026quot;id\u0026quot;: 100, \u0026quot;description\u0026quot;: \u0026quot;Angular Book\u0026quot; }, \u0026quot;value\u0026quot;: { \u0026quot;productId\u0026quot;: { \u0026quot;id\u0026quot;: 100, \u0026quot;description\u0026quot;: \u0026quot;Angular Book\u0026quot; }, \u0026quot;productType\u0026quot;: \u0026quot;Book\u0026quot; } } Product Id: 100 Product description: Angular Book Product Model :Book  Now we will sort the key value array based upon product id (900,100) by passing custom compare function to keyvalue pipe.\nI wrote productComparator to sort the key value array based on the product id.\n\u0026lt;p\u0026gt;Complex Types\u0026lt;/p\u0026gt;\u0026lt;br\u0026gt; \u0026lt;div *ngFor=\u0026quot;let product of products | keyvalue:productComparator\u0026quot;\u0026gt; {{product| json }} \u0026lt;br\u0026gt; Product Id: {{product.key.id}} \u0026lt;br\u0026gt; Product description: {{product.key.description}} \u0026lt;br\u0026gt; Product Model :{{product.value.productType}} \u0026lt;/div\u0026gt;  Now we will pass the compare function to KeyValue pipe.\nlet product of products | keyvalue:productComparator\n\u0026lt;p\u0026gt;Complex Types\u0026lt;/p\u0026gt;\u0026lt;br\u0026gt; \u0026lt;div *ngFor=\u0026quot;let product of products | keyvalue:productComparator\u0026quot;\u0026gt; {{product| json }} \u0026lt;br\u0026gt; Product Id: {{product.key.id}} \u0026lt;br\u0026gt; Product description: {{product.key.description}} \u0026lt;br\u0026gt; Product Model :{{product.value.productType}} \u0026lt;/div\u0026gt;  And the output key value array is sorted by product id as shown below\n{ \u0026quot;key\u0026quot;: { \u0026quot;id\u0026quot;: 100, \u0026quot;description\u0026quot;: \u0026quot;Angular Book\u0026quot; }, \u0026quot;value\u0026quot;: { \u0026quot;productId\u0026quot;: { \u0026quot;id\u0026quot;: 100, \u0026quot;description\u0026quot;: \u0026quot;Angular Book\u0026quot; }, \u0026quot;productType\u0026quot;: \u0026quot;Book\u0026quot; } }Â Product Id: 100Â Product description: Angular BookÂ Product Model :Book { \u0026quot;key\u0026quot;: { \u0026quot;id\u0026quot;: 900, \u0026quot;description\u0026quot;: \u0026quot;Angular Video\u0026quot; }, \u0026quot;value\u0026quot;: { \u0026quot;productId\u0026quot;: { \u0026quot;id\u0026quot;: 900, \u0026quot;description\u0026quot;: \u0026quot;Angular Video\u0026quot; }, \u0026quot;productType\u0026quot;: \u0026quot;Video\u0026quot; } }Â Product Id: 900Â Product description: Angular VideoÂ Product Model :Video  You will get an error sayingÂ Cannot find name 'KeyValue'\nIn the productComparator method we are passing KeyValue type parameter. So we need to add interface of KeyValue in our code\nexport interface KeyValue\u0026lt;K, V\u0026gt; { key:K; value:V; }  Loop Map key Values using *ngFor \u0026amp; Angular keyvalue pipe And looping simple Map key and values is very similar ,same syntax we need passÂ keyvalue pipe to *ngFor\n\u0026lt;p\u0026gt;Loop Through Maps using KeyValue Pipe\u0026lt;/p\u0026gt;\u0026lt;br\u0026gt; \u0026lt;div *ngFor=\u0026quot;let item of map | keyvalue\u0026quot;\u0026gt; {{item| json }} \u0026lt;br/\u0026gt; Map Key: {{item.key}} and Map Value:{{item.value}} \u0026lt;/div\u0026gt;  See the below output\nLoop Through Maps using KeyValue Pipe { \u0026quot;key\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular ngFor\u0026quot; }Â Map Key: 1 and Map Value:Angular ngFor { \u0026quot;key\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular keyvalue Pipe\u0026quot; }Â Map Key: 2 and Map Value:Angular keyvalue Pipe  As the key is of type number, Key 1 is displayed first then Key 2. means they are sorted by numbers ascending order.\nLoop Arrays using *ngFor \u0026amp; Angular keyvalue pipe Even we can loop through an array using keyvalue pipe and the key will be the index of the array.\n\u0026lt;p\u0026gt;Loop Through Arrays using KeyValue Pipe\u0026lt;/p\u0026gt;\u0026lt;br\u0026gt; \u0026lt;div *ngFor=\u0026quot;let item of array | keyvalue\u0026quot;\u0026gt; {{item| json }} \u0026lt;br\u0026gt; Array key: {{item.key}} and Array Value:{{item.value}} \u0026lt;/div\u0026gt;  And the array will be displayed as\nLoop Through Arrays using KeyValue Pipe { \u0026quot;key\u0026quot;: \u0026quot;0\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular keyvalue Pipe\u0026quot; }Â Array key: 0 and Array Value:Angular keyvalue Pipe { \u0026quot;key\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;value\u0026quot;: \u0026quot;Angular ngFor\u0026quot; }Â Array key: 1 and Array Value:Angular ngFor  The pipe \u0026lsquo;keyvalue\u0026rsquo; could not be found error As the keyvalue pipe introduced in Angular 6.1 release. If you try to use keyvalue pipe in older versions of Angular you will getÂ The pipe 'keyvalue' could not be found error.\nYou need to update @angular/core by runnin below angular cli ng command\nng update @angular/core  ","date":1534294865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548824329,"objectID":"e04ea2bda52fbc8a91255098d0107a87","permalink":"https://www.angularjswiki.com/angular/angular-keyvalue-pipe-loop-object-key-values-using-ngfor/","publishdate":"2018-08-15T01:01:05Z","relpermalink":"/angular/angular-keyvalue-pipe-loop-object-key-values-using-ngfor/","section":"angular","summary":"KeyValue pipe released in Angular 6.1 to loop through objects,Maps and arrays.Now by passing KeyValue pipe to *ngFor we can loop through objects key values","tags":null,"title":"Loop Object Key Values In Angular Using *NgFor \u0026 Angular Keyvalue Pipe","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" ng-template is an Angular element used to render HTML templates.\nWe useÂ ng-template with angular *ngIf directive to display else template.\nSo what exactly this ng-template will do?\nWhether it really renders HTML template, we will see with an example.\n\u0026lt;div\u0026gt; ng-template works!\u0026lt;/div\u0026gt; \u0026lt;ng-template\u0026gt;Inside ng-template tag\u0026lt;/ng-template\u0026gt;  If you see the output it will display only ng-template worksÂ which is in div element.And have a look at the generated HTML source code.\n\r\r\rng-template example\r\r\rYou can see an empty comment section in place of ng-template tag. Lets go through deep into ng-template to understand this behaviour.\nTable of Contents\r   What is ng-template in Angular Using ng-template with *ngIf example Using ng-template with *ngFor example Using ng-template with NgSwitch example Summary   \rWhat is ng-template in Angular  ng-template is a virtual element and its contents are displayed only when needed (based on conditions). ng-template should be used along with structural directives like [ngIf],[ngFor],[NgSwitch] or custom structural directives.That is why in the above example the contents of ng-template are not displayed. ng-template never meant to be used like other HTML elements. It\u0026#8217;s an internal implementation of Angular\u0026#8217;s structural directives. When you use a structural directive in Angular we will add a prefix asterisk(*) before the directive name. This asterisk is short hand notation for ng-template. Whenever Angular encounter with the asterisk(*) symbol, we are informing Angular saying that it is a structural directive and Angular will convert directive attribute to ng-template element. ng-template is not exactly a true web element. When we compile our code, we will not see a ng-template tag in HTML DOM. Angular will evaluate theÂ ng-template element to convert it into a comment section in HTML DOM.  We will go through the different structural directives like *ngIf,*ngFor and [NgSwitch] to understand this further.\nUsing ng-template with *ngIf example Take an examle of *ngIf directive in Angular\n\u0026lt;div *ngIf=\u0026quot;display\u0026quot; class=\u0026quot;ng-template-example\u0026quot;\u0026gt; ng-template example \u0026lt;/div\u0026gt; \u0026lt;ng-template [ngIf]=\u0026quot;display\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;ng-template-example\u0026quot;\u0026gt;ng-template example\u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;   The directive being converted to data member of ng-template The inline template element along with the attributes (class etc), moved inside theÂ ng-template element  So we have only then template which is an inline template and there is no else template.Now will dig into the source code of NgIf Class to understand how ng-template element will work.\n\r\r\rNgIf Source Code and ng-template\r\r\rAny structural directive in Angular will have two properties\n TemplateRef ViewContainerRef  A structural directive creates the view from ng-template and inserts it in view container adjacent to directive host element.\nThat means structural directive access the contents of ng-template through TemplateRef and updates the ViewContainerRef\n\rTemplateRef is the class name and ng-template is the corresponding HTML tag\n\r\rAnd if you see the above source code of NgIf class It has four properties\n _thenTemplateRef : ng-template reference of then _elseTemplateRef : ng-template reference of else _thenViewRef : embedded view ref of then _elseViewRef : embedded view ref of else  If you see the constructor it has two parameters private _viewContainer: ViewContainerRef andÂ _templateRef: TemplateRef\u0026lt;NgIfContext\u0026gt;\nConstructor will access the ng-template via templateRef parameter and assign it to thenTemplateRef. inline template will be the default then template in ngIf directive.\nAnd in the above example we are not passing any else or then templates and the only input we are giving is [ngIf]\nBased upon the condition we are updating the view. See the source code of updateView() method of NgIf class.\n\r\r\rNgIf Update View and ng-template\r\r\rIn the update view method Angular will assignÂ thenViewRef to the embedded view created from thenTemplateRef i.e, view from ng-template\nSo if the condition display is true web page displayes I am Visible.\n\r\r\rngIf comment section\r\r\rAnd If you see the generated HTML ng-template being converted to a comment section which gives the information about the evaluated condition.\nIf we pass else template via [ngIfElse]Â it is being assigned to elseTemplateRef\nIf the condition is false inÂ updateView() method Angular will assign elseViewRef to the embedded view created fromÂ elseTemplateRef\n\r\r\rngIfElse ng-template\r\r\rAnd we can dynamically change else or then templates runtime by updating [ngIfElse] and [ngIfThen] template references\nUsing ng-template with *ngFor example You might be thinking that why we need to use asterisk(*) notation when we can use ng-template element directly. Yes we can use ng-template instead of short hand notation.\n*ngIf is a simple directive without much complexity. This asterisk notation or microsyntax (in Angular terms) is very useful incase complex structural directives like *ngFor. Take a look at the below example\n\u0026lt;div *ngFor=\u0026quot;let task of tasks; let i=index; let even=even; trackBy: trackById\u0026quot;\u0026gt; ({{i}}) {{task.name}} \u0026lt;/div\u0026gt; \u0026lt;ng-template ngFor let-task [ngForOf]=\u0026quot;tasks\u0026quot; let-i=\u0026quot;index\u0026quot; let-even=\u0026quot;even\u0026quot; [ngForTrackBy]=\u0026quot;trackById\u0026quot;\u0026gt; \u0026lt;div\u0026gt;({{i}}) {{task.name}}\u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;  With the asterisk notation or Angular microsyntax we can give instructions to the directive in simple string format. And Angular microsyntax parser convert that string into the attributes of ng-template as shown above\nI dont want to get into the implementation details of *ngFor. All we need to understand is asterisk (*) notation easy to write and understand.\nUntil unless you have good reason, prefer asterisk(*) notation instead of ng-template\nUsing ng-template with NgSwitch example NgSwitch is not a single directive it is actually used along with other directives *ngSwitchCase and *ngSwitchDefault\nHave a look at the below ngSwitch example\n\u0026lt;div [ngSwitch]=\u0026quot;Course\u0026quot;\u0026gt; \u0026lt;p *ngSwitchCase=\u0026quot;'Angular'\u0026quot;\u0026gt;Angular Course\u0026lt;/p\u0026gt; \u0026lt;p *ngSwitchCase=\u0026quot;'TypeScript'\u0026quot;\u0026gt;TypeScript Course\u0026lt;/p\u0026gt; \u0026lt;p *ngSwitchCase=\u0026quot;'JavaScript'\u0026quot;\u0026gt;JavaScript Course\u0026lt;/p\u0026gt; \u0026lt;p *ngSwitchDefault\u0026gt;HTML Course\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div [ngSwitch]=\u0026quot;Course\u0026quot;\u0026gt; \u0026lt;ng-template *ngSwitchCase=\u0026quot;'Angular'\u0026quot;\u0026gt; \u0026lt;p\u0026gt;Angular Course\u0026lt;/p\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template [ngSwitchCase]=\u0026quot;'TypeScript'\u0026quot;\u0026gt; \u0026lt;p\u0026gt;TypeScript Course\u0026lt;/p\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template [ngSwitchCase]=\u0026quot;'JavaScript'\u0026quot;\u0026gt; \u0026lt;p\u0026gt;JavaScript Course\u0026lt;/p\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template [ngSwitchDefault]\u0026gt; \u0026lt;p\u0026gt;HTML Course\u0026lt;/p\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;/div\u0026gt;  If you see the above code I have not used asterisk before ngSwitch why because, NgSwitch is not a structural directive. It is an attribute directive.\nNgSwitch controls the behavior of the other two switch directivesÂ ngSwitchCase and ngSwitchDefault.\nBothÂ ngSwitchCase,ngSwitchDefault are structural directives that is why i have used asterisk before them. And those will be converted to ng-template elements\nSummary I hope you understand what isÂ ng-template in Angular and why it is useful. And if you are writing you own structural directives you should have clear idea about ng-template\u0026gt;\nIn my next article I will explain how to write a custom structural directive with the help of ng-template\n","date":1533862865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548826309,"objectID":"00086b67e4dd3e94798de615688ed807","permalink":"https://www.angularjswiki.com/angular/what-is-ng-template-in-angular/","publishdate":"2018-08-10T01:01:05Z","relpermalink":"/angular/what-is-ng-template-in-angular/","section":"angular","summary":"ng-template is a virtual element and its contents are displayed only when needed.ng-template should be used along with structural directives like [ngIf],[ngFor],[NgSwitch] or custom structural directives","tags":null,"title":"How To Use Ng-Template In Angular?","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":"We can take full advantage ofÂ ngIfThen,ngIfElseÂ template references in *ngIf directive to change then or elseÂ templates dynamically at runtime. Go through the below example to understand it further.\nUnderstanding Angularâs NgIf, Else, Then With Examples\nI have created aÂ component calledÂ NgifthenelseComponent in my Angular project.\nimport { Component, OnInit,ViewChild, TemplateRef } from '@angular/core'; @Component({ selector:'app-ngifthenelse', templateUrl:'./ngifthenelse.component.html', styleUrls: ['./ngifthenelse.component.css'] }) export class NgifthenelseComponent implements OnInit { show:boolean; constructor() { this.show=true; } thenTemplate:TemplateRef\u0026lt;any\u0026gt;|null=null; @ViewChild('primaryTemplate') primaryTemplate:TemplateRef\u0026lt;any\u0026gt;|null=null; @ViewChild('secondaryTemplate') secondaryTemplate:TemplateRef\u0026lt;any\u0026gt;|null=null; switchThenTemplate() { this.thenTemplate= (this.thenTemplate===this.primaryTemplate) ? this.secondaryTemplate: this.primaryTemplate; } ngOnInit() { this.thenTemplate=this.primaryTemplate; } }  Make sure you importÂ ViewChild andÂ TemplateRef from @angular/core\nAnd the corresponding component template file is\n\u0026lt;button mat-button (click)=\u0026quot;show = !show\u0026quot;\u0026gt;{{show ? 'hide' : 'show'}}\u0026lt;/button\u0026gt; \u0026lt;button mat-button (click)=\u0026quot;switchThenTemplate()\u0026quot;\u0026gt;Switch Then Template\u0026lt;/button\u0026gt; show = {{show}} \u0026lt;br\u0026gt; \u0026lt;div *ngIf=\u0026quot;show; then thenTemplate; else elseTemplate\u0026quot;\u0026gt; Inline template Ignored \u0026lt;/div\u0026gt; \u0026lt;ng-template #primaryTemplate\u0026gt; Default Primary then Template \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #secondaryTemplate\u0026gt; Secondary then Template \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; Else Template \u0026lt;/ng-template\u0026gt;  The above template being converted to\n\u0026lt;button mat-button (click)=\u0026quot;show = !show\u0026quot;\u0026gt;{{show ? 'hide' : 'show'}}\u0026lt;/button\u0026gt; \u0026lt;button mat-button (click)=\u0026quot;switchThenTemplate()\u0026quot;\u0026gt;Switch Then Template\u0026lt;/button\u0026gt; show = {{show}} \u0026lt;br\u0026gt; \u0026lt;ng-template [ngIf]=\u0026quot;show\u0026quot; [ngIfThen]=\u0026quot;thenTemplate\u0026quot; [ngIfElse]=\u0026quot;elseTemplate\u0026quot;\u0026gt; \u0026lt;div\u0026gt; Inline template Ignored \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #primaryTemplate\u0026gt; Default Primary then Template \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #secondaryTemplate\u0026gt; Secondary then Template \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; Else Template \u0026lt;/ng-template\u0026gt;  Whenever we click onÂ Switch Then Template button then template being toggle between primary and secondary template which is assigned to [ngIfThen] template reference.\n\u0026lt;ng-template\u0026gt; being passed to NgIf class inputs ngIfThen and ngIfElse viaÂ TemplateRef see more at What Is Ng-Template In Angular?\nAnd we can add as many as templates based upon our conditions.\n","date":1533430865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622408,"objectID":"beb6279fc4959219a32559601beca37d","permalink":"https://www.angularjswiki.com/angular/dynamically-change-ngif-thenelse-templates-at-runtime-in-angular/","publishdate":"2018-08-05T01:01:05Z","relpermalink":"/angular/dynamically-change-ngif-thenelse-templates-at-runtime-in-angular/","section":"angular","summary":"We can take full advantage of ngIfThen,ngIfElse template references in *ngIf directive to change then or else templates dynamically at runtime","tags":null,"title":"Dynamically Change NgIf Then,Else Templates At Runtime In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular\u0026rsquo;s ngIf directive displays or removes an element from DOM based on given condition.\nTo write ngIf else in angular we need to define \u0026ldquo;else\u0026rdquo; template for *ngIf directive.\nwe can use async pipe with *ngIf to read the data coming from an observable.\nIn all versions of Angular, the syntax of *ngif directive is same.\nTable of Contents\r   Understand *ngIf in Angular with example Steps to write *ngIf else in Angular with example *ngIf with alternative then template in Angular *ngif with both else and then templates example in Angular *ngif with Logical Operators AND (\u0026amp;\u0026amp;), OR(||), NOT(!) Using as to store *ngIf condition in a local variable *ngIf with async pipe and observable example   \rUnderstand *ngIf in Angular with example *ngIfÂ evaluates the given condition \u0026amp; then renders the \u0026ldquo;then template\u0026rdquo; or \u0026ldquo;else template\u0026rdquo;.\nLook at the below example\n\u0026lt;div *ngIf=\u0026quot;display\u0026quot;\u0026gt;Hi I am Visible\u0026lt;/div\u0026gt;  If display property is true then the \u0026lt;div\u0026gt; element will be added to the DOM. Otherwise, no element will be added.\nThe default templates of *ngIf are\n thenÂ template is inline template ofÂ ngIf elseÂ template is blank  In the above code inline template isÂ \u0026lt;div\u0026gt;Hi I am Visible\u0026lt;/div\u0026gt; and there is no else template\nOr we can bind alternative templates to *ngif based upon our usage.\n*ngIf is a directive that means we can add it to any HTML element or component\n\u0026lt;p *ngIf=\u0026quot;display\u0026quot;\u0026gt;Visible only if display is true\u0026lt;/p\u0026gt;  Or we can apply it to other angular components, for instance, material checkbox component\n\u0026lt;mat-checkbox *ngIf=\u0026quot;display\u0026quot;\u0026gt;Material Checkbox\u0026lt;/mat-checkbox\u0026gt;  The syntax is very simple we need to add a prefix,Â asterisk(*) before the directive name ngIf.\nSo why we need to add the asterisk before the directive name?\nThe asterisk before ngIf makes our life simple. Angular will convert *ngifÂ attribute to \u0026lt;ng-template\u0026gt;Â element as displayed below.\n\u0026lt;div *ngIf=\u0026quot;display\u0026quot; class=\u0026quot;inline\u0026quot;\u0026gt;Hi I am Visible\u0026lt;/div\u0026gt; //This will be converted to \u0026lt;ng-template [ngIf]=\u0026quot;display\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;inline\u0026quot;\u0026gt;Hi I am Visible\u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt; //inline default template (then template) //And no else template \u0026lt;div *ngIf=\u0026quot;false\u0026quot; class=\u0026quot;inline\u0026quot;\u0026gt;This is not added to DOM\u0026lt;/div\u0026gt; \u0026lt;ng-template [ngIf]=\u0026quot;false\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;inline\u0026quot;\u0026gt;This is not added to DOM \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;  Now the above definitionÂ makes sense. then template is \u0026lt;div\u0026gt;Hi I am Visible\u0026lt;/div\u0026gt; which is inline and there is no else template.\nThe asterisk is just a syntactic sugar to ng-template\nAnd If you see the generated HTML,no element will be added to the DOM if ngIf expression evaluated to false.\n\r\r\rngif\r\r\rSo why angular will remove the element rather than hiding it. Go through the below article to understand it further.\nDifference between ngIf and hidden in Angular\nWe can use ngIfÂ in four different ways\n Simple ngIf (as explained above) *ngIf with else *ngIf with then *ngIf with then and else  NowÂ how can we write *ngIf elseÂ in Angular? we need bind else template to *ngIf\nSteps to write *ngIf else in Angular with example Now we will see how to write *ngIf else by using Angular\u0026rsquo;s \u0026lt;ng-template\u0026gt; with a simple example.\n\u0026lt;div *ngIf=\u0026quot;display; else elseTemplate\u0026quot; class=\u0026quot;main\u0026quot;\u0026gt; Visible when display is true \u0026lt;/div\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; \u0026lt;div class=\u0026quot;alternative\u0026quot;\u0026gt; Visible when display is false \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;  else binding points to aÂ \u0026lt;ng-template\u0026gt; labeled as #elseTemplate. If the condition or expression is true then default inline template will be rendered otherwise else template will be rendered.\nAnd this template can be defined anywhere in the component view, But as a good practice and to improve readabilityÂ it is defined right below the ngIf block.\nimport { Component, OnInit } from '@angular/core'; @Component({ selector:'app-ngifelse', templateUrl:'./ngifelse.component.html', styleUrls: ['./ngifelse.component.css'] }) export class NgifelseComponent implements OnInit { display:boolean; constructor() { this.display=true; } ngOnInit() {} } //*ngIf else Component View \u0026lt;ng-template #elseTemplate\u0026gt; \u0026lt;div class=\u0026quot;alternative\u0026quot;\u0026gt; Visible when display is false \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;div\u0026gt; This example explains how to write *ngIf else block in Angular. And ng-template block can be defined anywhere in the component view \u0026lt;/div\u0026gt; \u0026lt;div *ngIf=\u0026quot;display; else elseTemplate\u0026quot; class=\u0026quot;main\u0026quot;\u0026gt; Visible when display is true \u0026lt;/div\u0026gt;  I have declared else template above the *ngIf block in NgIfElseComponent view, But avoid declaring like this as it is difficult to understand.\nThe above *ngIf else blockÂ will be converted to the following \u0026lt;ng-template\u0026gt; element\n\u0026lt;ng-template [ngIf]=\u0026quot;display\u0026quot; [ngIfElse]=\u0026quot;elseTemplate\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;main\u0026quot;\u0026gt; Visible when display is true \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; \u0026lt;div class=\u0026quot;alternative\u0026quot;\u0026gt; Visible when display is false \u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;  *ngIf with alternative then template in Angular ByÂ default, theÂ thenÂ template of *ngIfÂ is the inline template. We can change the inline template of ngIf by bindingÂ \u0026lt;ng-template\u0026gt; just like else binding as explained above.\nSee the below example\nimport { Component, OnInit } from '@angular/core'; @Component({ selector:'app-ngifthen', templateUrl:'./ngifthen.component.html', styleUrls: ['./ngifthen.component.css'] }) export class NgifthenComponent implements OnInit { display:boolean; constructor() { this.display=true; } ngOnInit() {} } //NgIfthen Component view \u0026lt;div *ngIf=\u0026quot;display; then thenTemplate\u0026quot;\u0026gt; Inline template will be ignored \u0026lt;/div\u0026gt; \u0026lt;ng-template #thenTemplate\u0026gt; Displayed when display is true \u0026lt;/ng-template\u0026gt;  You might think that why we need [ngIfThen] template reference when we have Inline template.\nwe can change the then or else templates dynamically at run time by taking advantage of these [ngIfThen] and [ngIfElse] Go through the below article to understand it further\nDynamically Change NgIf, Then,Else Templates At Run time In Angular\n*ngif with both else and then templates example in Angular We can pass bothÂ else template and then template to *ngIf directive as shown below.\nAnd default inline template will be ignored in this case.\n\u0026lt;div *ngIf=\u0026quot;display; then thenTemplate; else elseTemplate\u0026quot;\u0026gt; Inline template will be ignored \u0026lt;/div\u0026gt; \u0026lt;ng-template #thenTemplate\u0026gt; Displayed when display is true \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; Displayed when display is false \u0026lt;/ng-template\u0026gt;  And this will be converted to\n\u0026lt;ng-template [ngIf]=\u0026quot;display\u0026quot; [ngIfThen]=\u0026quot;thenTemplate\u0026quot; [ngIfElse]=\u0026quot;elseTemplate\u0026quot;\u0026gt; Inline template will be ignored \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #thenTemplate\u0026gt; Displayed when display is true \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template #elseTemplate\u0026gt; Displayed when display is false \u0026lt;/ng-template\u0026gt;  *ngif with Logical Operators AND (\u0026amp;\u0026amp;), OR(||), NOT(!) We can pass logical operators AND (\u0026amp;\u0026amp;),OR(||) and NOT(!) in *ngif condition. Here are the examples.\n\u0026lt;!-- logic AND \u0026amp;\u0026amp; operator --\u0026gt; \u0026lt;div *ngIf=\u0026quot;display \u0026amp;\u0026amp; hasAccess\u0026quot;\u0026gt; Visible when display and hasAccess are true \u0026lt;/div\u0026gt; \u0026lt;!-- logic OR || operator --\u0026gt; \u0026lt;div *ngIf=\u0026quot;display || hasAccess\u0026quot;\u0026gt; Visisble when one of the variable display or hasAccess true \u0026lt;/div\u0026gt; \u0026lt;!-- logical NOT ! operator\u0026quot; --\u0026gt; \u0026lt;div *ngIf=\u0026quot;!display\u0026quot;\u0026gt; Visible only when display is false. \u0026lt;/div\u0026gt;  Using as to store *ngIf condition in a local variable We can save the *ngIf condition in a local variable using as so that we can use it in template. Have a look at the below example.\n\u0026lt;div *ngIf=\u0026quot;display as ngIfCondition;else elseTemplate\u0026quot;\u0026gt; shows when display is {{ngIfCondition}} \u0026lt;/div\u0026gt; \u0026lt;ng-template #elseTemplate let-ngIfCondition\u0026gt; shows when display is {{ngIfCondition}} \u0026lt;/ng-template\u0026gt;  We are storing *ngIf condition in a local variable called ngIfCondition.So that we can use it in then or else templates if required.\nAnd in \u0026lt;ng-template\u0026gt; we have to pass local variable prefixing withÂ let keyword.\nYou might wonder why this is useful, because anyway the expression is going to be true or false. Or we can simply use {{display}} instead of declaring local variable ngIfCondition.\ndisplay variable is readily available at the time of *ngIf evaluation.What if the variable is asynchronous and coming from anÂ observable.\n*ngIf with async pipe and observable example We will bind some product data coming from an Observable to a component using async pipe.\n\u0026lt;div\u0026gt; \u0026lt;h3\u0026gt;Name:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{(product| async)?.Name}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Category:\u0026lt;/dh3\u0026gt; \u0026lt;p\u0026gt;{{(product| async)?.category}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Description:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{(product| async)?.description}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Price:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{(product| async)?.price}}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt;  We should use pipe on every property we want to display.\nThe problem with above approach is\n We are using pipe on every property, this creates subscription each time async pipe is used. In the above example we will create 4 subscriptions. To prevent this we can use rxjs share() operator to share subscription with multiple subscribers.   product: Observable\u0026lt;{}\u0026gt;; constructor() { } ngOnInit() { this.product= this.getAsyncData().pipe(share()); }   But the component view remains the same foreach property we have to use async pipe and ? Operator And we cannot display alternate template during the data load.  The ideal solution will be something like below\n if(product){ //Display product.Name product.category product.description product.price }else{ //Loading }  That is exactly what *ngIf will does with async pipe with observable by using *ngIf as syntax\n\u0026lt;h1\u0026gt;*ngIf async pipe with observable\u0026lt;/h1\u0026gt; \u0026lt;div *ngIf=\u0026quot;product | async as productItem; else loading\u0026quot;\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h3\u0026gt;Name:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{productItem.Name}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Category:\u0026lt;/dh3\u0026gt; \u0026lt;p\u0026gt;{{productItem.category}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Description:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{(productItem.description}}\u0026lt;/p\u0026gt; \u0026lt;h3\u0026gt;Price:\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;{{productItem.price}}\u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;ng-template #loading let-productItem\u0026gt; Loading... (product is {{productItem|json}}) \u0026lt;/ng-template\u0026gt;  we will dig into the code and see what is happening here\n\u0026lt;div *ngIf=\u0026quot;product | async as productItem; else loading\u0026quot;\u0026gt;  We are passing product observable to *ngIf with async pipe and storing it inÂ productItem local variable.\nInitially if product is null it will show the loading template.Once product is available it will show inline template of *ngIf\nThe above code with *ngIf is very clean and easy to understand. We are removing unwanted safe-traversal-operator.? operator and multiple subscriptions.\nI hope you understood the basic concepts of the *ngIf directive with then and else templates.\n","date":1533344465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1572106819,"objectID":"ed3c3fcf95aef168631309a12a1bc3d7","permalink":"https://www.angularjswiki.com/angular/understanding-angulars-ngif-else-then-with-examples/","publishdate":"2018-08-04T01:01:05Z","relpermalink":"/angular/understanding-angulars-ngif-else-then-with-examples/","section":"angular","summary":"Angular's *ngIf directive displays or removes an element from DOM based on the condition passed.To write ngIf else in angular,we need to define else template for *ngIf.","tags":null,"title":"NgIf Else In Angular \u0026 *NgIf Async Pipe Observable Example","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" The main difference between angular ngIf directive \u0026amp; hidden or display:none is ngIf will add or remove the element from DOM based on condition or expression. hiddenÂ attribute in html5 and display none CSS will show or hide the HTML element.\nWe will go through the examples to understand them further.\nTable of Contents\r   ngIf in Angular hidden or display:noneÂ in Angular Why ngIf directive remove the element rather than hide it? ngIf vs hidden or display none in Angular   \rngIf in Angular Have a look at a simple ngIfÂ example\n\u0026lt;div *ngIf=\u0026quot;true\u0026quot;\u0026gt;This will be added to DOM by ngIf\u0026lt;/div\u0026gt; \u0026lt;div *ngIf=\u0026quot;false\u0026quot;\u0026gt;This will be removed from DOM by ngIf\u0026lt;/div\u0026gt; \u0026lt;ng-template *ngIf=\u0026quot;true\u0026quot;\u0026gt; \u0026lt;div\u0026gt;This will be added to DOM by ngIf\u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt; \u0026lt;ng-template *ngIf=\u0026quot;false\u0026quot;\u0026gt; \u0026lt;div\u0026gt;This will be removed from DOM by ngIf\u0026lt;/div\u0026gt; \u0026lt;/ng-template\u0026gt;  As explained in ngIf else article angular will convert theÂ ngIf element to \u0026lt;ng-template\u0026gt; element. See the generated HTML DOM.\n\r\r\rngIf vs Hidden\r\r\rAnd the second div is not at all added the DOM. Angular will convert \u0026lt;ng-template\u0026gt; to a comment which gives us information about evaluated ngIf condition true or false.\nhidden or display:noneÂ in Angular Now we will see an example with hidden attribute in html5 and display none CSS.\n\u0026lt;p [style.display]=\u0026quot;'block'\u0026quot;\u0026gt; This paragraph is visible. \u0026lt;/p\u0026gt; \u0026lt;p [style.display]=\u0026quot;'none'\u0026quot;\u0026gt; This paragraph is hidden but still in the DOM. \u0026lt;/p\u0026gt; \u0026lt;p hidden\u0026gt; This paragraph is hidden but still in the DOM. \u0026lt;/p\u0026gt;  And the generated HTML is\n\r\r\rngIf hidden in Angular\r\r\rIrrespective of display hide or show the paragraph element will be added to the DOM.\nWhy ngIf directive remove the element rather than hide it? Hiding and showing the element after rendering is fine if the paragraph or div element is very small and with simple interaction.\nBut with Angular, we can build rich applications some of the components may use too many resources. And even though the component is hidden, the component will be attached to its DOM element. It will keep on listening for events. AngularÂ keep on checking for changes related to data bindings. The component behavior still exists even though it is hidden.\nThe component and its children components will be tieÂ up resources. Memory burden might be high which results in poor performance, responsiveness can degrade and theÂ user has no knowledge, why the application is slow.\nSo it\u0026rsquo;s better to add or remove elements to the component element to the HTML DOM rather than hiding or showing them.\nBut as I said earlier if the component is simple it is better to hide or show it, because component reinitialization operation could be expensive.\nngIf vs hidden or display none in Angular   ngIf hidden or display none     Angular's structural directive Normal HTML5 attribute   No DOM element is added if ngIf evaluates to false. DOM element will be added to HTML   ngIf might be slow while adding removing elements to the DOM because of intializations As the element is already added to DOM showing and hiding or very fast   Ideal for rich angular applications Ideal if the component is simple no much interaction     I hope you understand all the differences between ngIf and hidden or display none in Angular\n","date":1533171665,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622485,"objectID":"db72d4596fbe830fada1dcbd104f203e","permalink":"https://www.angularjswiki.com/angular/difference-between-ngif-and-hidden-or-displaynone-in-angular/","publishdate":"2018-08-02T01:01:05Z","relpermalink":"/angular/difference-between-ngif-and-hidden-or-displaynone-in-angular/","section":"angular","summary":"The main difference between angular ngIf directive \u0026amp; hidden or display:none is ngIf will add or remove the element from DOM based on condition or expression. hidden attribute in html5 and display none CSS will show or hide the HTML element.","tags":null,"title":"Difference Between NgIf And Hidden Or Display:none In Angular","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" ngOnInit and constructor methods in Angular might be confusing to you,if you are new to Angular.In this tutorial, we will cover the differences between ngOnInit \u0026amp;Â constructor.\nTable of Contents\r   What is a Constructor? What is ngOnInit() in Angular? When is ngOnInit Executed? Understand difference between constructor \u0026amp; ngOnInit() in Angular with example When to use constructor \u0026amp; when to use ngOnInit in Angular Constructor usage in Angular ngOnInit() method usage in Angular ngOnInit vs Constructor in Angular   \rWhat is a Constructor? A constructor is a special method which will be called whenever we create new objects. And generally used of initializing the class members. It is a feature of the class(typescript) itself, an object-oriented design concept not Angular.\nIf you are coming from the object-oriented programming background, you will know what exactly is a constructor \u0026amp; what it will do.\nHave a look at the below typescript class example to understand constructor\nclass AddNumbers{ x: number; y: number; constructor(x: number, y: number) { this.x = x; this.y = y; } add() { return this.x+this.y; } }  The above class will be translated to JavaScript function\nvar AddNumbers= (function () { function AddNumbers(x, y) { this.x = x; this.y = y; } AddNumbers.prototype.add = function () { return this.x + point.x; }; return AddNumbers; })(); var numbers = new AddNumbers(2,4); var additionOfNumbers = numbers.add(); console.log(additionOfNumbers); //Prints 6  If you see the above example constructor will be automatically invoked by JavaScript engine when we create a new object. Whereas add() method is being added to the prototype of theÂ class.\nWe will call it whenever it is required. Our ngOnInit() method is just a method being added to the prototype of the class. We will take an angular component example to understand it further.\nWhat is ngOnInit() in Angular?  ngOnInit is a life cycle hook managed by Angular ngOnInit being added to prototype of the class created ngOnInit called by Angular when component is initialized Actual business logic performed ngOnInit method  Every component we create has a life cycle managed by Angular.\nAs part of the life cycle, angular creates it, renders it and checks when its bounded data properties changes, destroys the component before removing it from the DOM.\nAngular exposes few lifecycle hooks that gives visibility into this events and to do post initialization operations when they occur.\nOne of the lifecycle hooks is ngOnInit()\nngOnInit() called by Angular to indicate that Angular is done with initializing the component.\nTo use ngOnInit() we have to import OnInitÂ from @angular/core (Actually it is not required but as a good practice import the OnInit)\nWhenever you create aÂ new component using angular-cliÂ ngOnInit being added by default.\nGo through the sample example\nimport { Component, OnInit } from '@angular/core'; @Component({ selector:'app-checkbox', templateUrl:'./checkbox.component.html', styleUrls: ['./checkbox.component.css'] }) export class CheckboxComponent implements OnInit { constructor() { console.log('Called Constructor'); } ngOnInit() { console.log('Called ngOnInit method'); } }  This will be transformed the below Javascript function\nvar CheckboxComponent = /** @class */ (function () { function CheckboxComponent() { } CheckboxComponent.prototype.ngOnInit=function () { }; CheckboxComponent=__decorate([ Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__[\u0026quot;Component\u0026quot;])({ selector:'app-checkbox', template: __webpack_require__(/*! ./checkbox.component.html */\u0026quot;./src/app/checkbox/checkbox.component.html\u0026quot;), styles: [__webpack_require__(/*! ./checkbox.component.css */\u0026quot;./src/app/checkbox/checkbox.component.css\u0026quot;)] }), __metadata(\u0026quot;design:paramtypes\u0026quot;, [])], CheckboxComponent); return CheckboxComponent; }());  ngOnInit() method is added to the prototype of the checkbox component function.\nThat means someone has to invoke it, whereas constructor is automatically called by JavaScript engine. And this method is called Angular when the component is rendered.\nThat means somewhere in the angular core checkboxcomponent.ngOnInit() will be called when it finishes rendering the component.\n\rSo the first main difference between constructor and ngOnInit method is constructor called by JavaScript engine whereas ngOnInit() called by Angular.\n\r\rWhen is ngOnInit Executed?  ngOnInit will be executed, When Angular done with the creating of componentÂ DOM. ngOnInit will be called after the constructor execution and after first ngOnChanges  To understand it further will take an example\nUnderstand difference between constructor \u0026amp; ngOnInit() in Angular with example We will take an example of the Angular Material Checkbox component.\nI have created a checkbox list component \u0026lt;app-checkboxlist\u0026gt; which displays two material checkboxes using a child componentÂ \u0026lt;app-checkbox\u0026gt;\nimport { Component, OnInit } from '@angular/core'; import { checkboxInformation } from '../checkboxInformation'; @Component({ selector: 'app-checkboxlist', templateUrl: './checkboxlist.component.html', styleUrls: ['./checkboxlist.component.css'] }) export class CheckboxlistComponent implements OnInit { checkboxes : checkboxInformation[]= [new checkboxInformation(true,\u0026quot;Angular Material Checkbox Checked\u0026quot;), new checkboxInformation(false,\u0026quot;Angular Material Checkbox UnChecked\u0026quot;)]; constructor() { } ngOnInit() {} } //checkboxlist.component.html \u0026lt;div\u0026gt; \u0026lt;app-checkbox *ngFor=\u0026quot;let item of checkboxes\u0026quot; [checkboxInfo]=\u0026quot;item\u0026quot;\u0026gt;\u0026lt;/app-checkbox\u0026gt; \u0026lt;/div\u0026gt;  And the child component is\nimport { checkboxInformation } from '../checkboxInformation'; import { Component,Input, OnInit } from '@angular/core'; @Component({ selector: 'app-checkbox', templateUrl: './checkbox.component.html', styleUrls: ['./checkbox.component.css'] }) export class CheckboxComponent implements OnInit { @Input() checkboxInfo : checkboxInformation; constructor() { console.log('Called Constructor method'); console.log(this.checkboxInfo); //Displays undefined } ngOnInit() { console.log('Called ngOnInit method'); console.log(this.checkboxInfo); } } // And checkbox.component.html file is \u0026lt;p\u0026gt;\u0026lt;mat-checkbox [(checked)]=\u0026quot;checkboxInfo.status\u0026quot;\u0026gt; {{checkboxInfo.label}}\u0026lt;/mat-checkbox\u0026gt;\u0026lt;/p\u0026gt;  And in addition to it, I have created a class checkboxInformation\nexport class checkboxInformation{ label:string; status:boolean; constructor(_enabled : boolean, _label :string ){ this.label = _label; this.status = _enabled; } }  The output is\n\r\r\rConstructor vs ngOnInit Difference example\r\r\rHere I am using @Input Decorator to pass value from parentÂ componentÂ CheckboxlistComponentÂ to child componentÂ CheckboxComponent\n@Input property is not initialized until theÂ component view is set up. Which will not happen at the time of constructor invocation, that is why if I try to access the @Input property checkboxInfo in constructorÂ console.log(this.checkboxInfo)\nIt will be displayed as undefined\nngOnInit() is invoked when everything in the component is initialized. So that is why checkboxInfo value is available inside the ngOnInit() method.\nIn other words, The ngOnInit() lifecycle hookÂ Initialize the component after Angular first displays the data-bound properties and sets the component\u0026rsquo;s input properties It is a guarantee that our bindings are readily available.\nIt is called only once.\nWhen to use constructor \u0026amp; when to use ngOnInit in Angular In object-oriented programming, world constructor is used to initialize the class members and used for dependency injection.\nConstructor usage in Angular In Angular, the constructor is used for injecting dependencies into the component class. Nothing much. And keep the constructor as simple as possible. Unit testing can be very easy if the constructor logic is simple.\nngOnInit() method usage in Angular As explained above Angular calls ngOnInit when it finishes creating a component DOM. And we will use constructors to inject all required dependencies and processed input bindings.\nSo we have everything in place so put actual logic in ngOnInit() method.\nItâs a common practice to use ngOnInit to do actual work even though the logic doesnât depend on DI, DOM or input bindings.\nngOnInit vs Constructor in Angular   ngOnInit Constructor     One of the Angular life cycle hook method Typescript feature nothing to do with Angular   ngOnInit being added to prototype of the class created constructor is transformed to function with the same name as class created   Called by Angular Called by Javascript Engine   Invoked by Angular when component is initialized Constructor is automaticlly called at the time of creating object of the class   Actual business logic performed here Used for Injecting dependencies   Everything is ready at the time of invocation  Not everything in component is initialized at the time of invocation   \nI hope you understand all the differences between constructor and ngOnInit method in Angular.\n","date":1533085265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548826687,"objectID":"f1e10aa562dcef2854f3d2889cd00848","permalink":"https://www.angularjswiki.com/angular/what-is-the-difference-between-constructor-and-ngoninit-in-angular/","publishdate":"2018-08-01T01:01:05Z","relpermalink":"/angular/what-is-the-difference-between-constructor-and-ngoninit-in-angular/","section":"angular","summary":"We can create a beatiful Progress bar in Angular using mat-progress-bar which is part of angular material progress bar module called MatProgressBarModule","tags":null,"title":"NgOnInit \u0026 Constructor Differences In Angular With Examples","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Port 4200 is already in use. Use â-portâ to specify a different port error occures sometimes when we run our angular app using ng serve\nThat means there is anotherÂ existing service already running on port 4200. Table of Contents\r   Port 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error Reasons Fix Port 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error in Mac \u0026amp; Linux Fix Port 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error in Window   \rPort 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error Reasons  An existing application(not angular) in your system using the port number 4200. This is a very rare scenario. In this case, you need to change the port number of angular application as mentioned below. You already ran ng serve and to exit the application you typed Control Z (Ctrl+Z), And then you typed ng serve then you will get port 4200 is already in use_ error. In this case, you need to kill the previous process  To close or terminate the angular instance always use Control+C (Ctrl+c)\nAnd ng serve uses default port number 4200 to run the angular application. And our application URL will be http://localhost:4200. To avoid this error we need to change the port number to other port which is free.\nAccording toÂ RFC 793 port numbers is a 16-bit unassigned integer. The minimum value is 0 and the maximum value isÂ 65535.\nAnd, within this range, ports 0 \u0026#8211; 1023 are reserved for specific purposes(mostly).\nTo change the port number for our angular application use the below command\nng serve --port 4201\nNow type ng serve\nOur angular application will be running onÂ http://localhost:4201\nTo kill already existing angular process use the below commands\nFix Port 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error in Mac \u0026amp; Linux To fix port 4200 is already in use error in In Mac \u0026amp; Linux OS (Ubuntu etc) use the following commands\nsudo kill $(sudo lsof -t -i:4200) Or sudo kill `sudo lsof -t -i:4200` Or sudo lsof -t -i tcp:4200 | xargs kill -9  Fix Port 4200 is already in use.Use \u0026lsquo;-port\u0026rsquo; to specify a different port error in Window In Window operating system open command prompt. Use the following command to fix port 4200 is already in use error.\nnetstat -a -n -o | findStr \u0026quot;4200\u0026quot;`  Take the process id and kill the process using the following command\ntaskkill -f /pid 11128\n\r\r\rnetstat angular\r\r\r","date":1518742865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541303771,"objectID":"55bd021f03e776a43a4ad7e0519e0610","permalink":"https://www.angularjswiki.com/angular/port-4200-is-already-in-use-use-port-to-specify-a-different-port-error/","publishdate":"2018-02-16T01:01:05Z","relpermalink":"/angular/port-4200-is-already-in-use-use-port-to-specify-a-different-port-error/","section":"angular","summary":"Port 4200 is already in use. Use --port to specify a different port error occures sometimes when we run our angular app using ng serve.That means there is another existing service already running on port 4200.","tags":null,"title":"Port 4200 Is Already In Use. Use ââPortâ To Specify A Different Port Error","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" \u0026lt;mat-checkbox\u0026gt; selector is an angular material checkbox component, it works like \u0026lt;input type=âcheckboxâ\u0026gt; \u0026amp; sugar coated with Material design styling and animations.\u0026lt;mat-checkbox\u0026gt; part of Angular Material module called MatCheckboxModule.\nThe simple usage of \u0026lt;mat-checkbox\u0026gt; is as follows\n\u0026lt;mat-checkbox\u0026gt;Checkbox example\u0026lt;/mat-checkbox\u0026gt;\nTo use \u0026lt;mat-checkbox\u0026gt; we have to import MatCheckboxModule from @angular/Material module.\nimport {MatCheckboxModule} from '@angular/material'\u0026lt;/pre\u0026gt;\nTable of Contents\r   Properties of mat-checkbox mat-checkbox Label mat-checkbox Checked state mat-checkbox UnChecked state mat-checkbox Indeterminate state mat-checkbox Disabled State mat-checkbox color and Theming mat-checkbox Example Bind Data to mat-checkbox using ngModel mat checkbox checked by default mat-checkbox change event mat-checkbox checked event MatCheckboxChange class mat-checkbox Indeterminate Change event mat-checkbox toggle method mat-checkbox focus method mat-checkbox demo mat-checkbox is not a known element Can\u0026rsquo;t bind to ngModel since it isn\u0026rsquo;t a known property of mat-checkbox References   \rProperties of mat-checkbox   Angular Material Checkbox Property Description      Checked : boolean Indicates whether checkbox is checked   Unchecked : Boolean Indicates whether checkbox is unchecked   Indeterminate : Boolean Indicates whether checkbox is indeterminate or we can call it as mixed state   Disabled Indicated whether checkbox is disabled   Id A unique id to represent checkbox elements if nothing is supplied then auto generated   labelPosition : before or after Indicates whether label should appear before or after the checkbox   Required : Boolean Indicates whether the checkbox is required inside a form   Value:string Indicates the value of checkbox element   Color:ThemePalatte (primary or accent or warn) Indicates theme color palette of checkbox element   disableRipple : Boolean Indicates whether ripple animation disabled on checkbox element   areaLabel : string Will be attached âarea-labelâ attribute of checkbox element   ariaLabelledby : string or null Will be attached âarea-labelledbyâ attribute of checkbox element     mat-checkbox Label Content of the \u0026lt;mat-checkbox\u0026gt; element acts as label for checkbox in angular material. Label position can be before or after the checkbox.\nWe can control the label position using labelPosition property of \u0026lt;mat-checkbox\u0026gt;.\n\u0026lt;mat-checkbox labelPosition=\u0026quot;before\u0026quot;\u0026gt;Angular Checkbox Label before \u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox labelPosition=\u0026quot;after\u0026quot;\u0026gt;Angular Checkbox Label After \u0026lt;/mat-checkbox\u0026gt;  mat-checkbox Checked state Using checked property value of \u0026lt;mat-checkbox\u0026gt; we can control the state of checkbox either checked or unchecked\n\u0026lt;mat-checkbox checked=\u0026quot;true\u0026quot;\u0026gt;Angular Checkbox Checked\u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox checked=\u0026quot;false\u0026quot;\u0026gt;Angular Checkbox UnChecked\u0026lt;/mat-checkbox\u0026gt;  mat-checkbox UnChecked state Provides exact opposite functionality of checked property. If its true in \u0026lt;mat-checkbox\u0026gt; then checkbox is unchecked and vice versa\n\u0026lt;mat-checkbox unchecked=\u0026quot;true\u0026quot;\u0026gt;Angular Checkbox UnChecked \u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox unchecked=\u0026quot;false\u0026quot;\u0026gt;Angular Checkbox Checked \u0026lt;/mat-checkbox\u0026gt;  mat-checkbox Indeterminate state \u0026lt;mat-checkbox\u0026gt; supports Indeterminate state. Indicates whether checkbox is indeterminate or we can call it as mixed state.The value can be set through Indeterminate property of \u0026lt;mat-checkbox\u0026gt; value can be true or false\nFor example say there is one parent checkbox under which we have four children checkboxes, if all children checkbozes are checked then parent checkbox should be checked and if all checkboxes are unchecked then it should be unchecked if any one of them is unchecked then parent checkbox should indicate mixed state.that is Indeterminate state.\nAnd it is only for visual representation. You can\u0026rsquo;t make a checkbox indeterminate through HTML there is no attribute.\nvar checkbox = document.getElementById(âindeterminate-checkboxâ); checkbox.indeterminate = true;  But in Angular we can setÂ indeterminate state through Indeterminate property.\n\u0026lt;mat-checkbox indeterminate=âtrueâ\u0026gt;Checkbox Indeterminate\u0026lt;/mat-checkbox\u0026gt;  Any click action on \u0026lt;mat-checkbox\u0026gt; will remove the indeterminate state.\nAnd if the checkbox contain both indeterminate and checked properties true. Then it will displayed asÂ indeterminate state.\n\u0026lt;mat-checkbox indeterminate=\u0026quot;true\u0026quot; checed=\u0026quot;true\u0026quot;\u0026gt;Checkbox Indeterminate \u0026lt;/mat-checkbox\u0026gt; //Checkbox displayed as indeterminate state.  mat-checkbox Disabled State Using disabled propery of \u0026lt;mat-checkbox\u0026gt; we can disable angular material checkbox.\n\u0026lt;mat-checkbox disabled\u0026gt;Checkbox Disabled\u0026lt;/mat-checkbox\u0026gt;  mat-checkbox color and Theming The color of Angular Checkbox can be changed by color property of \u0026lt;mat-checkbox\u0026gt;. By default value is \u0026ldquo;accent\u0026rdquo; and can be change to primary or warn according to Material design theming guidelines.\nAnd We can disable ripple animation using Angular Material Checkbox propertyÂ disableRipple\n\u0026lt;mat-checkbox disableRipple=true\u0026gt;Checkbox Ripple Disabled\u0026lt;/mat-checkbox\u0026gt;  mat-checkbox Example Now we will go though the simple example to understand the properties of Angular Material Checkbox.\nFirst setup Angular in your local development environment and install Angular Material module as explained in Angular Material Tutorial previous article.\nAdd a new material module by following command\nng generate module material\nAnd import MatCheckboxModule from @angular/Material as shown below.Add below line in generated material.module.ts file.\nimport {Â MatCheckboxModule } from '@angular/Material'\nAnd additionally i have added MatToolbarModule,MatCardModule,MatListModule for design purpose.\nimport { NgModule } from '@angular/core'; import { CommonModule } from '@angular/common'; import { MatToolbarModule, MatCardModule, MatCheckboxModule, MatListModule, } from '@angular/material'; @NgModule({ exports:[ MatToolbarModule, MatCardModule, MatCheckboxModule, MatListModule ], providers: [ ], declarations: [] }) export class MaterialModule { }  And import material module in app.module.ts file so that we can use material module across the application.\nimport { MaterialModule } from './material/material.module';\nAnd also addÂ MaterialModule in imports array property of @NgModule\nimport { BrowserModule } from '@angular/platform-browser'; import { NgModule } from '@angular/core'; import { MaterialModule } from './material/material.module'; import { AppComponent } from './app.component'; @NgModule({ declarations: [ AppComponent], imports: [ BrowserModule, MaterialModule ], providers: [], bootstrap: [AppComponent] }) export class AppModule { }  Our Material Module is ready Now we will create a new component to use \u0026lt;mat-checkbox\u0026gt; and other angular material components.\nng generate component AngularMaterialCheckbox\nAnd add following code in generated angular-material-checkbox.component.html file\n\u0026lt;mat-card\u0026gt; \u0026lt;mat-card-content\u0026gt; \u0026lt;h2\u0026gt;Basic Example\u0026lt;/h2\u0026gt; \u0026lt;mat-list\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox checked=âtrueâ\u0026gt;Checkbox Checked\u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox\u0026gt;Checkbox UnChecked\u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox indeterminate=âtrueâ\u0026gt;Checkbox Indeterminate \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox labelPosition=âbeforeâ\u0026gt;Checkbox Label before \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox disableRipple=true\u0026gt;Checkbox Ripple Disabled \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox disabled=true\u0026gt;Checkbox Disabled\u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox color=âprimaryâchecked=true\u0026gt;Checkbox Theme Primary \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;mat-divider\u0026gt;\u0026lt;/mat-divider\u0026gt; \u0026lt;mat-list-item\u0026gt;\u0026lt;mat-checkbox color=âwarnâchecked=true\u0026gt;Checkbox Theme Warn \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/mat-list-item\u0026gt; \u0026lt;/mat-list\u0026gt; \u0026lt;/mat-card-content\u0026gt; \u0026lt;/mat-card\u0026gt;  Now we will use the component,add following code in app.component.html file\n\u0026lt;h1\u0026gt; {{ title }} \u0026lt;/h1\u0026gt; \u0026lt;app-angular-material-checkbox\u0026gt;\u0026lt;/app-angular-material-checkbox\u0026gt;  And I assigned title variable to Angular Material Checkbox in app.component.ts file.\nNow type ng serve and browse http://localhost:4200 in browser to see the demo.\nBind Data to mat-checkbox using ngModel Now we will bind the data to angular material checkbox. In angular-material-checkbox.component.ts file add the following code\nimport { Component, OnInit } from '@angular/core'; @Component({ selector: 'app-angular-material-checkbox', templateUrl: './angular-material-checkbox.component.html', styleUrls: ['./angular-material-checkbox.component.css'] }) export class AngularMaterialCheckboxComponent implements OnInit { IsChecked:boolean; IsIndeterminate:boolean; LabelAlign:string; IsDisabled:boolean; constructor() { this.IsChecked =false; this.IsIndeterminate =false; this.LabelAlign ='after'; this.IsDisabled =false; } OnChange($event){ console.log($event); //MatCheckboxChange {checked,MatCheckbox} } OnIndeterminateChange($event){ console.log($event); //true or false } ngOnInit() { }}  I declared four variables\n IsChecked : Used to control angular material checkbox state which is a boolean variable IsIndeterminate : Used to control angular material checkbox Indeterminate which is a boolean variable LabelAlign : Used to control angular material checkbox label alignment which is a string variable IsDisabled: Used to control angular material checkbox disabled state.  And in constructor I am assigning default values to the declared variables.\nNow we will use this model,Add the following code in angular-material-checkbox.component.html\n\u0026lt;mat-card class=\u0026quot;result\u0026quot;\u0026gt; \u0026lt;mat-card-content\u0026gt; \u0026lt;h2class=\u0026quot;example-h2\u0026quot;\u0026gt;Result\u0026lt;/h2\u0026gt; \u0026lt;sectionclass=\u0026quot;example-section\u0026quot;\u0026gt; \u0026lt;mat-checkbox class=\u0026quot;example-margin\u0026quot; (change)=\u0026quot;OnChange($event)\u0026quot; (indeterminateChange)=\u0026quot;OnIndeterminateChange($event)\u0026quot; [(checked)]=\u0026quot;IsChecked\u0026quot; [(indeterminate)]=\u0026quot;IsIndeterminate\u0026quot; [labelPosition]=\u0026quot;LabelAlign\u0026quot; [disabled]=\u0026quot;IsDisabled\u0026quot;\u0026gt; Angular Material Checkbox Data Binding \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/mat-card-content\u0026gt; \u0026lt;/mat-card\u0026gt;  I have binded checked property to our model variable IsChecked,indeterminate property to model IsIndeterminate variable, labelPosition property to LabelAlign variable and disabled property to IsDisabled variable.\nAnd as per the initial values of binding variables the result will be displayed.i.e., The checkbox is uncheked and label will be after the checkbox.\nNow we will change our model variables using below \u0026lt;mat-checkbox\u0026gt; and \u0026lt;mat-radio-group\u0026gt; elements as shown below. Add the following code in the same angular-material-checkbox.component.html file\n\u0026lt;mat-card\u0026gt; \u0026lt;mat-card-content\u0026gt; \u0026lt;h2 class=\u0026quot;example-h2\u0026quot;\u0026gt;Angular Checkbox configuration\u0026lt;/h2\u0026gt; \u0026lt;section class=\u0026quot;example-section\u0026quot;\u0026gt; \u0026lt;mat-checkbox class=\u0026quot;example-margin\u0026quot; [(ngModel)]=\u0026quot;Ischecked\u0026quot;\u0026gt;Checked \u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox class=\u0026quot;example-margin\u0026quot; [(ngModel)]=\u0026quot;IsIndeterminate\u0026quot;\u0026gt;Indeterminate \u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox class=\u0026quot;example-margin\u0026quot; [(ngModel)]=\u0026quot;IsDisabled\u0026quot;\u0026gt;Disabled \u0026lt;/mat-checkbox\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;section class=\u0026quot;example-section\u0026quot;\u0026gt; \u0026lt;label class=\u0026quot;example-margin\u0026quot;\u0026gt;Angular Checkbox Alignment:\u0026lt;/label\u0026gt; \u0026lt;mat-radio-group [(ngModel)]=\u0026quot;LabelAlign\u0026quot;\u0026gt; \u0026lt;mat-radio-button class=\u0026quot;example-margin\u0026quot; value=\u0026quot;after\u0026quot;\u0026gt;After\u0026lt;/mat-radio-button\u0026gt; \u0026lt;mat-radio-button class=\u0026quot;example-margin\u0026quot; value=\u0026quot;before\u0026quot;\u0026gt;Before\u0026lt;/mat-radio-button\u0026gt; \u0026lt;/mat-radio-group\u0026gt; \u0026lt;/section\u0026gt; \u0026lt;/mat-card-content\u0026gt; \u0026lt;/mat-card\u0026gt;  In the Angular Checkbox configuration section we have three angular material checkboxes and for each \u0026lt;mat-checkbox\u0026gt; model variables are binded using [(ngModel)] property.\nAs \u0026lt;mat-checkbox\u0026gt; can have only two values true or false i.e., checked or unchecked (indeterminate is only for visual purpose). Whenever we click on \u0026lt;mat-checkbox\u0026gt; corresponding binding variable also changes (as they are boolean variables) which results in changing \u0026lt;mat-checkbox\u0026gt; in Result section.\nAnd to change label alignment I have added \u0026lt;mat-radio-group\u0026gt; and binded LabelAlign model variable using [(ngModel)]. The radio group has two \u0026lt;mat-radio-button\u0026gt; elements with values after and before. Whenever we select radio button, corresponding value will be assigned to LabelAlign variable which results in changing \u0026lt;mat-checkbox\u0026gt; in Result section.\n\r\r\rAngular material checkbox Basic Example\r\r\r\r\r\rAngular material-checkbox Bind data\r\r\rAnd if we select both Checked and Indeterminate checkboxes. The checkbox in result section displayed as Indeterminate as explained above.\nmat checkbox checked by default To set mat-checkbox checked by default we use checked attribute or [ngModel] as shown below.\n\u0026lt;mat-checkbox [(ngModel)]=\u0026quot;IsChecked\u0026quot;\u0026gt; \u0026lt;label\u0026gt;Checked by default using ngModel\u0026lt;/label\u0026gt; \u0026lt;/mat-checkbox\u0026gt; \u0026lt;mat-checkbox [checked]=\u0026quot;IsChecked\u0026quot;\u0026gt; \u0026lt;label\u0026gt;Checked by default using checked attribute\u0026lt;/label\u0026gt; \u0026lt;/mat-checkbox\u0026gt;  We can set the IsChecked property to true in constructor.\nmat-checkbox change event \u0026lt;mat-checkbox\u0026gt;Â provides two kinds of events\n change event: triggers when the mat-checkbox\u0026rsquo;s checked value changes (of typeÂ MatCheckboxChange) indeterminateChange event: triggers when the mat-checkbox\u0026rsquo;s indeterminate value changes (boolean type)  mat-checkbox checked event By using change property of mat-checkbox we can track the checked,unchecked states of checkbox.\nI have added a method calledÂ OnChange()\nWhich will be triggered when the checkbox checked state changes. It will emmit the change event object of typeÂ MatCheckboxChange\nMatCheckboxChange class MatCheckboxChange class has two properties,Â source and checked.\nsource is nothing but source of the mat-checkbox from which event triggered.\nchecked tells whether mat-checkboxÂ is checked i.e.,true or unchecked i.e., false.\nSee the event emmitted by mat-checkbox in console.log();\n\r\r\rMatCheckboxChange Class\r\r\rOne thing you need to understand checkbox on change event fires only by user interaction. But if you set the checked value dynamically change event will not be triggered.\nIn the above demo, result section checkbox value is driven byÂ other checkboxes in checkbox configuration section. In that case change event wont fire as we are changing the value dynamically without user interaction.\nSo we need to check or uncheck the checkbox in result section to fire the change event by clicking on it. You can check this behaviour in demo.\nmat-checkbox Indeterminate Change event Through mat-checkbox\u0026rsquo;sÂ indeterminateChange property we can track the indeterminate state change of checkbox.\nI have added a method calledÂ OnindeterminateChange() to check this behaviour.It will emmit the change event object of type boolean.\nAs we cannot set indeterminate state by user interaction.indeterminateChange eventÂ will be triggered when the value is set dynamically.\nmat-checkbox toggle method We can toggle the checked or unchecked state of mat-checkbox using toggle() method.\nOnChange($event){ console.log($event); $event.source.toggle(); //MatCheckboxChange {checked,MatCheckbox} }  If you use toggle method inside on change event, the checkbox state wont change at all, whatever the initial state of checkbox,that will be preserved.\nmat-checkbox focus method We can set the focus of mat-checkbox by using focus() method.\nOnChange($event){ console.log($event); $event.source.focus(); //MatCheckboxChange {checked,MatCheckbox} }  The above code focuses the checkbox whenever on change event triggers.\nmat-checkbox demo See the demo of mat-checkbox here\nmat-checkbox is not a known element \u0026lt;mat-checkbox\u0026gt; is not a known element is a common parse error we will get if we are not configured Angular Material module properly.\nInitially we have to import MatCheckboxModule from @angular/Material\nAnd we should exportÂ MatCheckboxModule to use it in other modules. In the above example I have created MaterialModule and i have addedÂ MatCheckboxModule in exports array of @NgModule.\nimport { MatButtonModule, MatToolbarModule, MatIconModule, MatCardModule, MatCheckboxModule, MatRadioModule, MAT_CHECKBOX_CLICK_ACTION, MatListModule, } from '@angular/material'; @NgModule({ exports:[ MatButtonModule, MatToolbarModule, MatIconModule, MatCardModule, MatCheckboxModule, MatRadioModule, MatListModule ]  And then I have imported materialmodule in app.module.ts so that I can use Material components across the application\nimport {FormsModule} from '@angular/forms'; import { MaterialModule } from './material/material.module'; @NgModule({ declarations: [ AppComponent, AngularMaterialCheckboxComponent, SampleComponent ], imports: [ BrowserModule, FormsModule, ReactiveFormsModule, MaterialModule ], bootstrap: [AppComponent] }) export class AppModule { }  If you miss any one of the step you will get Template parse error:Â \u0026lt;mat-checkbox\u0026gt; is not a known element\nCan\u0026rsquo;t bind to ngModel since it isn\u0026rsquo;t a known property of mat-checkbox While binding data to the \u0026lt;mat-checkbox\u0026gt;Â  we have to importÂ FormsModuleÂ from @angular/formsÂ and should add it in imports array of app.module.ts file other wise we will get thisÂ Can\u0026rsquo;t bind to ngModel since it is not a known property of mat-checkbox template parse error.\nIn above example i have imported FormsModuleÂ from @angular/material\nReferences Angular Material\n","date":1518656465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1561422624,"objectID":"45d40cb659b996f31dd0cc3c6504be8f","permalink":"https://www.angularjswiki.com/angular/checkbox-implementation-in-angular-using-angular-material/","publishdate":"2018-02-15T01:01:05Z","relpermalink":"/angular/checkbox-implementation-in-angular-using-angular-material/","section":"angular","summary":"mat-checkbox selector is an angular material checkbox component, it works like input type=checkbox sugar coated with Material design styling and animations.mat-checkbox part of Angular Material module called MatCheckboxModule.","tags":null,"title":"Checkbox Implementation In Angular Using Mat-Checkbox(Material Component)","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular Material module helps us to create high-quality UI applications with Angular framework by following Material Design specifications.\nIn this Angular material tutorial I will explain basics of Angular Material with simple examples,starting from setting up Angular material project in our local machine.\nAngular Material project is under active development. New features are being added regularly.Official latest version of Angular Material is 7.0.\nTable of Contents\r   What is Angular Material? Creating Angular Material Project Installing Angular Material and Angular CDK Modules Installing Angular Animations Module Install HammerJS for Gesture Support Adding a Pre-built Angular Material Theme Adding Angular Material Icons Adding a Custom Angular Material Module List of Available UI components in Angular Material Angular Material Form Components List Angular Material Navigation Components List Angular Material Layout Components List Angular Material Buttons \u0026amp; indicators Components Angular Material Popups \u0026amp; modals Components Angular Material DataTable Components Angular Material components Browser support Common errors while setting up Angular Material project:   \rWhat is Angular Material? In 2014 Google I/O conference Google announced their new design language called Material Design.\nMost of the Android apps likeÂ Gmail, Youtube, Google DriveÂ etcÂ developedÂ based on this Material Design spec.\nNow with this Angular Material project, we can develop Material Design components for web and mobile browsers.\nCreating Angular Material Project We will create a new project in our local development environment called Angular-Material-tutorial with Angular CLI command. as mentioned in above tutorial setup your local development environment.\nng new Angular-Material-tutorial Now navigate to Angular-Material project folder.\ncdÂ Angular-Material-tutorial Installing Angular Material and Angular CDK Modules Make sure you install NodeJs in your systems. NodeJs is required to develop Angular Apps.\nInstall Angular Material and Angular CDK modules by using below node command.\nnpm install --save @angular/material @angular/cdk @angular/core @angular/common After successful installation, you can see them in _nodemodules folder as shown below. And inside the material folder, we can see different UI components like buttons, bundles, autocomplete etc.\n\r\r\rAngular Material And CDK modules\r\r\r\r\r\rAngular Material Components\r\r\rInstalling Angular Animations Module Few Material components dependÂ upon Angular Animations modules. Install Angular Animation module with the below command.\nnpm install --save @angular/animations Install HammerJS for Gesture Support Some Angular Material components like mat-slider, matTooltip,mat-slide-toggle rely on HammerJS for gestures.\nnpm install --save hammerjs After successful installation,Â add the reference of HammerJS in angular-cli.jsonÂ file\n\u0026quot;scripts\u0026quot;: [ \u0026quot;../node_modules/hammerjs/hammer.min.js\u0026quot; ]  Adding a Pre-built Angular Material Theme When we install Angular Material few pre-built themes are being installed automatically. Available pre-built themes are 1. indigo-pink 2. deeppurple-amber 3. purple-green 4. pink-bluegrey\nAdd the theme to global style.css\n@import '~@angular/material/prebuilt-themes/indigo-pink.css'; Adding Angular Material Icons If you want to use Material icons, load the official icon fonts in index.html file.\n\u0026lt;link href=\u0026quot;https://fonts.googleapis.com/icon?family=Material+Icons\u0026quot; rel=\u0026quot;stylesheet\u0026quot;\u0026gt;  Then we canÂ mat-icon component tag to display named icons\n\u0026lt;mat-icon\u0026gt;favorite\u0026lt;/mat-icon\u0026gt; //Displays love symbol  Now we will add a Material Module in our project.\nComplete Angular Material Icon List\nAdding a Custom Angular Material Module Create a new material module by using following angular-cli command\nng generate module material We will use following material UI components in our project\n MatButtonModule MatToolbarModule MatIconModule MatCardModule   Add them in material.module.ts file\nimport { NgModule } from '@angular/core'; import { MatButtonModule, MatToolbarModule, MatIconModule, MatCardModule } from '@angular/material'; @NgModule({ imports: [ MatButtonModule, MatToolbarModule, MatIconModule, MatCardModule ], exports: [ MatButtonModule, MatToolbarModule, MatIconModule, MatCardModule ] }) export class MaterialModule {}  I have added them in exports to use them in other modules.\nNow our Material Module is ready we will use it in our default app module. Add the MaterialModule in app.module.ts file\nimport { BrowserModule } from '@angular/platform-browser'; import { NgModule } from '@angular/core'; import { FormsModule } from '@angular/forms'; import { HttpModule } from '@angular/http'; import { MaterialModule } from './material/material.module'; import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; import { AppComponent } from './app.component'; @NgModule({ declarations: [ AppComponent ], imports: [ BrowserModule, FormsModule, HttpModule, MaterialModule, BrowserAnimationsModule ], providers: [], bootstrap: [AppComponent] }) export class AppModule { }  Make sure you add it after BrowserModule because Material components depend upon BrowserModule. I have added BrowserAnimationModule to support animations.\nAngular Material is ready. Now will use available Angular Material components in our template file\nI have used \u0026lt;mat-toolbar\u0026gt; \u0026lt;mat-card\u0026gt; and mat-button components in this project. Add the following code in app.component.html file.\n\u0026lt;div id=\u0026quot;material-example\u0026quot;\u0026gt; \u0026lt;h1\u0026gt;ToolBar\u0026lt;/h1\u0026gt; \u0026lt;mat-toolbar color=\u0026quot;primary\u0026quot;\u0026gt; \u0026lt;span\u0026gt;Material Design Rocks!\u0026lt;/span\u0026gt; \u0026lt;/mat-toolbar\u0026gt; \u0026lt;br/\u0026gt; \u0026lt;h1\u0026gt;Buttons\u0026lt;/h1\u0026gt; \u0026lt;mat-card\u0026gt; \u0026lt;button mat-button\u0026gt;Basic\u0026lt;/button\u0026gt; \u0026lt;button mat-raised-button\u0026gt;Raised\u0026lt;/button\u0026gt; \u0026lt;button mat-icon-button\u0026gt;\u0026lt;mat-icon\u0026gt;favorite\u0026lt;/mat-icon\u0026gt;\u0026lt;/button\u0026gt; \u0026lt;button mat-fab\u0026gt;Fab\u0026lt;/button\u0026gt; \u0026lt;button mat-mini-fab\u0026gt;mFab\u0026lt;/button\u0026gt; \u0026lt;/mat-card\u0026gt; \u0026lt;/div\u0026gt;  I added different types of buttons like basic (mat-button) , Raised (mat-raised-button), icon button(mat-icon-button),fab button (mat-fab) and mini-fab button (mat-mini-fab).\nNow open the command prompt and type ng serve command after successful compilation browse http://localhost:4200 to load the Angular Material Project.\n\r\r\rAngular Material Example Demo\r\r\rList of Available UI components in Angular Material We can learn how to write Angular code by following best principles with the help of Angular Material UI components\nHere is the list of UI components available in Angular Material project.\nAngular Material Form Components List   Form Components Example     Autocomplete \u0026lt;mat-form-field\u0026gt; \u0026lt;input type=\"text\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\"\u0026gt; \u0026lt;\u0026#47;mat-form-field\u0026gt; \u0026lt;mat-autocomplete #auto=\"matAutocomplete\"\u0026gt; \u0026lt;mat-option *ngFor=\"let option of options\" [value]=\"option\"\u0026gt;{{option}}\u0026lt;\u0026#47;mat-option\u0026gt; \u0026lt;\u0026#47;mat-autocomplete\u0026gt;   Checkbox \u0026lt;mat-checkbox\u0026gt;Check me!\u0026lt;\u0026#47;mat-checkbox\u0026gt;    Datepicker \u0026lt;input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"\u0026gt; \u0026lt;mat-datepicker-toggle matSuffix [for]=\"picker\"\u0026gt;\u0026lt;\u0026#47;mat-datepicker-toggle\u0026gt; \u0026lt;mat-datepicker #picker\u0026gt;\u0026lt;\u0026#47;mat-datepicker\u0026gt;   Form field \u0026lt;mat-form-field\u0026gt; \u0026lt;input matInput placeholder=\"Input\"\u0026gt; \u0026lt;\u0026#47;mat-form-field\u0026gt;   Input \u0026lt;mat-form-field class=\"example-width\"\u0026gt; \u0026lt;textarea matInput placeholder=\"Leave a comment\"\u0026gt;\u0026lt;\u0026#47;textarea\u0026gt; \u0026lt;\u0026#47;mat-form-field\u0026gt;   Radio button \u0026lt;mat-radio-group\u0026gt; \u0026lt;mat-radio-button value=\"1\"\u0026gt;Option 1\u0026lt;\u0026#47;mat-radio-button\u0026gt; \u0026lt;mat-radio-button value=\"2\"\u0026gt;Option 2\u0026lt;\u0026#47;mat-radio-button\u0026gt; \u0026lt;\u0026#47;mat-radio-group\u0026gt;   Select \u0026lt;mat-select placeholder=\"Select City\"\u0026gt; \u0026lt;mat-option *ngFor=\"let city of cities\" [value]=\"city.id\"\u0026gt; {{city.name}} \u0026lt;\u0026#47;mat-option\u0026gt; \u0026lt;\u0026#47;mat-select\u0026gt;   Slider \u0026lt;mat-slider\u0026gt;\u0026lt;\u0026#47;mat-slider\u0026gt;    Slide toggle \u0026lt;mat-slide-toggle\u0026gt;Slide me!\u0026lt;\u0026#47;mat-slide-toggle\u0026gt;      Angular Material Navigation Components List   Navigation Components Description     Menu \u0026lt;button mat-button [matMenuTriggerFor]=\"menu\"\u0026gt;Menu\u0026lt;\u0026#47;button\u0026gt; \u0026lt;mat-menu #menu=\"matMenu\"\u0026gt; \u0026lt;button mat-menu-item\u0026gt;Item 1\u0026lt;\u0026#47;button\u0026gt; \u0026lt;button mat-menu-item\u0026gt;Item 2\u0026lt;\u0026#47;button\u0026gt; \u0026lt;\u0026#47;mat-menu\u0026gt;   Side Nav \u0026lt;mat-sidenav-container\u0026gt; \u0026lt;mat-sidenav mode=\"side\" opened\u0026gt;Sidenav content\u0026lt;\u0026#47;mat-sidenav\u0026gt; \u0026lt;mat-sidenav-content\u0026gt;Main content\u0026lt;\u0026#47;mat-sidenav-content\u0026gt; \u0026lt;\u0026#47;mat-sidenav-container\u0026gt;   Toolbar \u0026lt;mat-toolbar\u0026gt;Toolbar\u0026lt;\u0026#47;mat-toolbar\u0026gt;     Angular Material Layout Components List   layout Components Example     Card  \u0026lt;mat-card\u0026gt;Simple card\u0026lt;\u0026#47;mat-card\u0026gt;    Divider  \u0026lt;mat-divider\u0026gt;\u0026lt;\u0026#47;mat-divider\u0026gt;    Expansion Panel \u0026lt;mat-expansion-panel\u0026gt; \u0026lt;mat-expansion-panel-header\u0026gt; \u0026lt;mat-panel-title\u0026gt; Panel Title \u0026lt;\u0026#47;mat-panel-title\u0026gt; \u0026lt;mat-panel-description\u0026gt; panel Description \u0026lt;\u0026#47;mat-panel-description\u0026gt; \u0026lt;\u0026#47;mat-expansion-panel-header\u0026gt; \u0026lt;pI'm visible When opened\u0026lt;\u0026#47;p \u0026lt;\u0026#47;mat-expansion-panel\u0026gt;   Grid list \u0026lt;mat-grid-list\u0026gt; \u0026lt;mat-grid-tile\u0026gt;1\u0026lt;\u0026#47;mat-grid-tile\u0026gt; \u0026lt;mat-grid-tile\u0026gt;2\u0026lt;\u0026#47;mat-grid-tile\u0026gt; \u0026lt;\u0026#47;mat-grid-list\u0026gt;    List \u0026lt;mat-list role=\"list\"\u0026gt; \u0026lt;mat-list-item role=\"listitem\"\u0026gt;Item 1\u0026lt;\u0026#47;mat-list-item\u0026gt; \u0026lt;mat-list-item role=\"listitem\"\u0026gt;Item 2\u0026lt;\u0026#47;mat-list-item\u0026gt; \u0026lt;\u0026#47;mat-list\u0026gt;    Stepper \u0026lt;mat-horizontal-stepper\u0026gt; \u0026lt;mat-step\u0026gt; Step 1 \u0026lt;\u0026#47;mat-step\u0026gt; \u0026lt;mat-step\u0026gt; Step 2 \u0026lt;\u0026#47;mat-step\u0026gt; \u0026lt;mat-step\u0026gt; Done \u0026lt;\u0026#47;mat-step\u0026gt; \u0026lt;\u0026#47;mat-horizontal-stepper\u0026gt;    Tabs \u0026lt;mat-tab-group\u0026gt; \u0026lt;mat-tab label=\"First\"\u0026gt; Tab 1 \u0026lt;\u0026#47;mat-tab\u0026gt; \u0026lt;mat-tab label=\"Second\"\u0026gt; Tab 2 \u0026lt;\u0026#47;mat-tab\u0026gt; \u0026lt;mat-tab label=\"Third\"\u0026gt; Tab 3 \u0026lt;\u0026#47;mat-tab\u0026gt; \u0026lt;\u0026#47;mat-tab-group\u0026gt;    Tree \u0026lt;mat-tree\u0026gt; \u0026lt;mat-tree-node\u0026gt; parent\u0026lt;\u0026#47;mat-tree-node\u0026gt; \u0026lt;mat-tree-node\u0026gt; -- child1 \u0026lt;\u0026#47;mat-tree-node\u0026gt; \u0026lt;mat-tree-node\u0026gt; -- child2 \u0026lt;\u0026#47;mat-tree-node\u0026gt; \u0026lt;\u0026#47;mat-tree\u0026gt;    Angular Material Buttons \u0026amp; indicators Components   Buttons\u0026amp; indicators Example     Button \u0026lt;button mat-button\u0026gt;Click me!\u0026lt;\u0026#47;button\u0026gt;    Button toggle \u0026lt;mat-button-toggle-group name=\"fontStyle\" aria-label=\"Font Style\"\u0026gt; \u0026lt;mat-button-toggle value=\"bold\"\u0026gt;Bold\u0026lt;\u0026#47;mat-button-toggle\u0026gt; \u0026lt;mat-button-toggle value=\"italic\"\u0026gt;Italic\u0026lt;\u0026#47;mat-button-toggle\u0026gt; \u0026lt;mat-button-toggle value=\"underline\"\u0026gt;Underline\u0026lt;\u0026#47;mat-button-toggle\u0026gt; \u0026lt;\u0026#47;mat-button-toggle-group\u0026gt;    Badge \u0026lt;p matBadge=\"4\" matBadgeOverlap=\"false\"\u0026gt;Text with a badge\u0026lt;\u0026#47;p\u0026gt;   Chips \u0026lt;mat-chip-list\u0026gt; \u0026lt;mat-chip\u0026gt;Chip 1\u0026lt;\u0026#47;mat-chip\u0026gt; \u0026lt;mat-chip\u0026gt;Chip 2\u0026lt;\u0026#47;mat-chip\u0026gt; \u0026lt;mat-chip\u0026gt;Chip 3\u0026lt;\u0026#47;mat-chip\u0026gt; \u0026lt;\u0026#47;mat-chip-list\u0026gt;   Icon \u0026lt;mat-icon\u0026gt;home\u0026lt;\u0026#47;mat-icon\u0026gt;   Progress spinner \u0026lt;mat-spinner\u0026gt;\u0026lt;\u0026#47;mat-spinner\u0026gt;    Progress bar \u0026lt;mat-progress-bar mode=\"determinate\" value=\"40\"\u0026gt;\u0026lt;\u0026#47;mat-progress-bar\u0026gt;    Ripples \u0026lt;div matRipple [matRippleCentered]=\"centered\" [matRippleDisabled]=\"disabled\" [matRippleUnbounded]=\"unbounded\" [matRippleRadius]=\"radius\" [matRippleColor]=\"color\"\u0026gt; Click me \u0026lt;\u0026#47;div\u0026gt;    Angular Material Popups \u0026amp; modals Components   popups \u0026amp; modals Example     Bottom Sheet const bottomSheetRef = bottomSheet.open(SocialShareComponent, { ariaLabel: 'Share on social media' });   Dialog let dialogRef = dialog.open(UserProfileComponent, { height: '400px', width: '600px', });   Snackbar let snackBarRef = snackBar.open('Message archived');    Tooltip \u0026lt;button mat-raised-button matTooltip=\"Tooltip Action\" \u0026gt; Tooltip \u0026lt;\u0026#47;button\u0026gt;    Angular Material DataTable Components   DataTable Components Example     Paginator \u0026lt;mat-paginator [length]=\"100\" [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 25, 100]\"\u0026gt; \u0026lt;\u0026#47;mat-paginator\u0026gt;    Sort Header \u0026lt;table matSort (matSortChange)=\"sortData($event)\"\u0026gt; \u0026lt;tr\u0026gt; \u0026lt;th mat-sort-header=\"name\"\u0026gt;name\u0026lt;\u0026#47;th\u0026gt; \u0026lt;th mat-sort-header=\"id\"\u0026gt;id\u0026lt;\u0026#47;th\u0026gt; \u0026lt;\u0026#47;tr\u0026gt; \u0026lt;tr *ngFor=\"let item of sortedData\"\u0026gt; \u0026lt;td\u0026gt;{{item.name}}\u0026lt;\u0026#47;td\u0026gt; \u0026lt;td\u0026gt;{{item.id}} \u0026lt;\u0026#47;tr\u0026gt; \u0026lt;\u0026#47;table\u0026gt;    Table \u0026lt;table mat-table [dataSource]=\"dataSource\"\u0026gt; \u0026lt;ng-container matColumnDef=\"position\"\u0026gt; \u0026lt;th mat-header-cell *matHeaderCellDefid\u0026lt;\u0026#47;th\u0026gt; \u0026lt;td mat-cell *matCellDef=\"let element\"\u0026gt; {{element.id}} \u0026lt;\u0026#47;td\u0026gt; \u0026lt;\u0026#47;ng-container\u0026gt; \u0026lt;ng-container matColumnDef=\"name\"\u0026gt; \u0026lt;th mat-header-cell *matHeaderCellDef Name \u0026lt;\u0026#47;th\u0026gt; \u0026lt;td mat-cell *matCellDef=\"let element\"\u0026gt; {{element.name}} \u0026lt;\u0026#47;td\u0026gt; \u0026lt;\u0026#47;ng-container\u0026gt; \u0026lt;tr mat-header-row *matHeaderRowDef=\"displayedColumns\"\u0026gt;\u0026lt;\u0026#47;tr\u0026gt; \u0026lt;tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\u0026gt;\u0026lt;\u0026#47;tr\u0026gt; \u0026lt;\u0026#47;table\u0026gt;     Angular Material components Browser support Angular Material components will work in most of the modern web browsers like Chrome (AndroidÂ as well), Mozilla, Safari (IOS as well), and IE11/Edge.\nDownload Source Code\nCommon errors while setting up Angular Material project: As Angular and Angular Material projects are receiving continuous updates you might run into few problems setting up Angular Material in your local machine.\nYou might get few errors if the version of Angular Material not align with the angular core modules versions\n@angular/material/expansion/typings/index.d.ts, found version 4, expected 3 If angular is already installed in your local machine and if it is not the latest version. If you try to install Angular Material you will get following warnings.\nnpm i -g @angular/material npm WARN @angular/material@6.1.0 requires a peer of @angular/cdk@6.1.0 but none is installed. You must install peer dependencies yourself. npm WARN @angular/material@6.1.0 requires a peer of @angular/core@\u0026gt;=6.0.0-beta.0 \u0026lt;7.0.0 but none is installed. You must install peer dependencies yourself. npm WARN @angular/material@6.1.0 requires a peer of @angular/common@\u0026gt;=6.0.0-beta .0 \u0026lt;7.0.0 but none is installed. You must install peer dependencies yourself.  Latest Angular Material Module depend upon Angular CDK,Angular Core and Angular Common modules.\nSo its always better to install these three modules together.\nnpm install @angular/material @angular/cdk @angular/core @angular/common  And further @angular/core has a dependency on reactive js and zone.js modules. Install both modules using below command\nnpm install rxjs zone.js ","date":1518570065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549094866,"objectID":"804dfbb445af9469c5390bac2b728f87","permalink":"https://www.angularjswiki.com/angular/angular-material-2-tutorial-with-examples/","publishdate":"2018-02-14T01:01:05Z","relpermalink":"/angular/angular-material-2-tutorial-with-examples/","section":"angular","summary":"This Angular Material tutorial covers basics of Angular material.Material module helps us to create high-quality UI apps with Angular framework by using Material Design","tags":null,"title":"Angular Material Tutorial: Creating Angular Apps Using Material Design","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" I will explain how to create an Angular 7 app with a simple âHello Worldâ example. This hello world example work in Angular 4,Angular 5,Angular 6,Angular7.\nLet us start with Angular Hello World example to know the basics of Angular 7.\nBefore reading further, please go through my previous tutorial on how to setup local development environment for Angular.\nSetup Angular in Local Development Environment\nWe will use Angular CLI as mentioned in the above tutorial to create our Angular application.\nHere are the steps to create first hello world application in Angular 7\nTable of Contents\r   Creating First Angular 7 Hello World Example Creating a Component in Angular 7 Importing Dependencies in Component in Angular 7 Component Decorators in Angular 7 Selector in Angular 7 component TemplateUrl in Angular 7 Component styleUrls in Angular 7 Component Adding Data to the Component in Angular 7 Rendering Angular 7 template   \rCreating First Angular 7 Hello World Example We create a project called Hello World in Angular 7.\nI recommend you to create a folder in your local disk so that all Angular examples are one place.(For instance create a folder named AngularExamples).\nOpen command prompt navigate to created folder; use the ng new command (Angular CLI) to create a new Angular project from scratch.\nng new hello-world-angular  It will take some time to create new project.\n\rIf you are using latest version of Angular CLI by default it uses Angular 7 (i.e., latest angular version). And there is no much difference between Angular 2 or Angular 4 or other versions itâs just an update. Please go through the following article to know more about this versioning of Angular.\n\r\rIs it Angular 2 or Angular 4 or Angular?\nAfter successful completion, you should see following message.\n\r\r\rhello-world-angular-created\r\r\rProject \u0026ldquo;hello-world-angular\u0026rdquo; successfully created.\nNow navigate to the created âhello-world-angularâ directory.\nUse your favourite editor (my choice would be visual studio code) open the created folder. The directory structure will be something like below.\n\r\r\rAngular Directory structure\r\r\rThis structure may vary depending upon the version of Angular CLI version (this article uses latest version of Angular CLI so it would be Angular 4).\nNavigate to D:\\AngularExamples\\hello-world-angular\\src\\index.html file.\n\u0026lt;!doctype html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;HelloWorldAngular\u0026lt;/title\u0026gt; \u0026lt;base href=\u0026quot;/\u0026quot;\u0026gt; \u0026lt;meta name=\u0026quot;viewport\u0026quot; content=\u0026quot;width=device-width, initial-scale=1\u0026quot;\u0026gt; \u0026lt;link rel=\u0026quot;icon\u0026quot; type=\u0026quot;image/x-icon\u0026quot; href=\u0026quot;favicon.ico\u0026quot;\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;app-root\u0026gt;Loading...\u0026lt;/app-root\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  You can see \u0026lt;app-root\u0026gt; tag this where our application will be rendered.\nIn Angular 2 (or Angular) world, we can create our own HTML tags \u0026amp; give them custom functionality, we will call them \u0026ldquo;Components\u0026rdquo;.\nApp-root is component auto generated by Angular CLI.\nNow in command prompt type\nng serve  Then browse http://localhost:4200 it will show App Works as shown below.\n\r\r\rAngular CLI Sample Example\r\r\rCreating a Component in Angular 7 We will create a component using Angular CLI command.\nng generate component hello-world  It will create four files as shown below\n src/app/hello-world/hello-world.component.css src/app/hello-world/hello-world.component.html src/app/hello-world/hello-world.component.spec.ts src/app/hello-world/hello-world.component.ts.   \r\r\rAngular Hello World Component\r\r\rOpen âhello-world.component.tsâ file in editor.\nimport { Component, OnInit } from '@angular/core'; @Component({ selector: 'app-hello-world', templateUrl: './hello-world.component.html', styleUrls: ['./hello-world.component.css'] }) export class HelloWorldComponent implements OnInit { constructor() { } ngOnInit() { } }  This is a simple component written typescript.\nIf you know java or C# it is easy to understand but do not worry, we will understand each line one by one.\nHere we are declaring a class named âHelloWorldComponentâ which is a component.\nImporting Dependencies in Component in Angular 7 First line tells the compiler that import âComponentâ and âOnInitâ objects from @angular/core (node module installed when we created project via Angular CLI).\nComponent Decorators in Angular 7 After importing Component object, we have to tell the compiler that this class is a Component.\nIn Angular 7 (or Angular) we will use Decorators in typescript to do this. So Decorators are nothing but metadata added to our code.\nFor example in \\hello-world-angular\\src\\app\\app-module.ts file, Decorator tells that it is a class named âAppModuleâ which is a Module (NgModule).\n@Component({\n});\n@Component({ selector: 'app-hello-world', templateUrl: './hello-world.component.html', styleUrls: ['./hello-world.component.css'] })  Component Contains Three important declaration\nSelector in Angular 7 component Selector property indicates the tag name we are going to use in DOM.\n\u0026lt;app-hello-world\u0026gt;\u0026lt;/app-hello-world \u0026gt;  (While creating component we gave name as âhello-worldâ Angular CLI added app as prefix).\nTemplateUrl in Angular 7 Component \u0026lt;app-hello-world\u0026gt; tag uses hello-world.component.html file as html template. So whenever we use \u0026lt;app-hello-world\u0026gt;\u0026lt;/app-hello-world\u0026gt; it will display the contents of file HTML located in\n\\hello-world-angular\\src\\app\\hello-world\\hello-world.component.html\nInstead of giving templateUrl we can use inline html also. As shown below\n@Component({ selector: 'app-hello-world', template:` \u0026lt;p\u0026gt; hello-world works! \u0026lt;/p\u0026gt;`, styleUrls: ['./hello-world.component.css'] })  For small html contents, we can use inline html template. HTML in between backticks(`â¦.`).\nIt is better to use separate template because most of the code editors do not support syntax highlighting in inline HTML strings.\nstyleUrls in Angular 7 Component This property tells the compiler that use the styles located in hello-world.component.css for this component.\nThese are the main properties in Components in Angular 7 (or Angular)\nNow open \\hello-world-angular\\src\\app\\app.component.html file and add the created component as shown below.\n\u0026lt;h1\u0026gt; {{title}} \u0026lt;app-hello-world\u0026gt;\u0026lt;/app-hello-world\u0026gt; \u0026lt;/h1\u0026gt;  Now refresh the browser\n\r\r\rHello world angular example\r\r\rAdding Data to the Component in Angular 7 We have rendered static template, now we will add some data to the component.\nOpen âhello-world.component.tsâ file in editor.\nAnd add the name property as shown below.\nname:string;\nWe are declaring a property or variable named ânameâ which is a string type. This is similar to declaration of variables in object-oriented languages. If we assign any type other than string the compiler will throw error.\nimport { Component, OnInit } from '@angular/core'; @Component({ selector: 'app-hello-world', templateUrl: './hello-world.component.html', styleUrls: ['./hello-world.component.css'] }) export class HelloWorldComponent implements OnInit { name:string; constructor() { this.name=\u0026quot;AngularJs Wiki\u0026quot; } ngOnInit() { } }  In constructor we will assign name variable. Constructor will be called whenever we create a new instance of a class. Similar to C# or Java language.\nRendering Angular 7 template Now we have to use the declared variable in our template file i.e., HTML file. We have to use two curley brackets to display the value of variable {{ }}. We will call them template tags.\nTo use the name variable open the template file hello-world.component.html\n\u0026lt;p\u0026gt; hello-world works! {{name}} \u0026lt;/p\u0026gt;  As the template bind to component(hello-world component) whenever compiler encounters flower brackets(i.e., template tags) it will replace the text with bounded property (i.e., name) value i.e., âAngular Js Wikiâ.\nNow refresh the browser\n\r\r\rhello world angular example with data\r\r\rI hope you understood the basics of Angular 7. If you have any doubts or suggestions feel free to comment.\n","date":1518483665,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1548826687,"objectID":"cf4d4874ea9645095fd49f1675ca0b8a","permalink":"https://www.angularjswiki.com/angular/angular-2-hello-world-example/","publishdate":"2018-02-13T01:01:05Z","relpermalink":"/angular/angular-2-hello-world-example/","section":"angular","summary":"I will explain how to create an Angular 7 app with a simple âHello Worldâ example. This hello world example work in Angular 4,Angular 5,Angular 6,Angular7.","tags":null,"title":"Angular Or Angular 7 Hello World Example","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" The best way to learn Angular 7 (or Angular) is to setup our own local development environment. In this tutorial, I will explain how to setup local development environment for Angular.\nBefore reading this article, I would recommend to read following article if you have any confusion regarding Angular 2 and Angular 4 or any other versions.\nIs it Angular 2 or Angular?\nTable of Contents\r   Prerequisites: Install Node.js and NPM: Install TypeScript: Install Latest browser: Install Code Editor: Install IIS on Windows: Installing Angular CLI: Creating first Angular Application Change the port number in Angular CLI:   \rThe local development environment setup for Angular 7 and Angular 6/5/4 are same.\nPrerequisites: Install Node.js and NPM: Angular 7 requires to install latest version of Node (Node 6.9.0 or higher). Please go through Node.js website for installing Node in different operation systems like Window, Mac or Linux.\nNode Pack Manager (npm) is installed as part of Node installation, npm version should be 3.0.0 or higher. $npm âv for version check-up.\nIs node required for Angular 2?\nInstall TypeScript: Angular 7 is written in Typescript.\nInstall Typescript using below npm command $ npm install -g typescript (typescript version should be 2.1 or higher)\n$ npm install -g typescript  Install Latest browser: I would recommend you to use Google Chrome to develop Angular Apps.\nInstall Code Editor: There are so many free code editors available such as notepad++,sublime etc. But my favourite editor is Visual Studio Code.\nInstall IIS on Windows: In windows environment you many have to install IIS internet information service to run web server locally.\nInstalling Angular CLI: Creating an Angular app is not easy thing, and if you are new typescript and Node.js itâs really confusing there are few pre-configurations we need to do.\nTo make our job easy Google came up with the utility called Angular CLI. With Angular CLI we can create and manage apps from command line. We can generate components, routes, services and pipes with a simple command line interface.\nIf you are from C# background and knows about Visual Studio. You can think AngularCLI as simple scaffolding tool. While creating new Asp Net MVC applications visual studio does scaffolding to generate CRUD operations and creates few lines ofÂ auto-generated code. That is exactly what AngularCLI does.\nInstall Angular CLI by using following command line.\nnpm install -g @angular/cli  After successful installation type ng-v it should return version of ng as shown below.\nNow we are ready to create our first Angular Application.\nCreating first Angular Application Type the following command to create our first application\nng new my-angular-app  It will take some time to create the project.\nNow go the created folder\ncd my-angular-app  And type\nng serve  Now navigate to http://localhost:4200 you should get appworks in browser.\n\r\r\rAngular CLI version\r\r\rChange the port number in Angular CLI: Sometimes you might get following error if the port is already in use.\nPort 4200 is already in use. Use \u0026lsquo;\u0026ndash;port\u0026rsquo; to specify a different port\nTo change the port number just type\nng serve --port 1234  Now our application will be running on http://localhost:1234\nNow go through the Hello world example to write your first app in Angular 7.\n","date":1518397265,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622823,"objectID":"456479d899b1abd0292e35345acad42a","permalink":"https://www.angularjswiki.com/angular/angular-2-or-angular-local-development-environment-setup/","publishdate":"2018-02-12T01:01:05Z","relpermalink":"/angular/angular-2-or-angular-local-development-environment-setup/","section":"angular","summary":"Explains Angular local development environment set up with Angular CLI. This is same for Angular 4 as well. Angular learning will be easy if we setup local development environment.","tags":null,"title":"Angular 7 Or Angular Local Development Environment Setup","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Yes. Node.js required for Angular 2 or Angular apps.\nWe need to install Node.js to develop Angular Apps.\nIf you are familiar with Angular JS 1.x. All we need to do is to add Angular Js file in script tag.But this not the case for Angular.\nReasons why we need Node.js for Angular  âAngularâ is entirely new framework and it is (Angular or Angular 2) written in Typescript. Browser does not understand Typescript JS (i.e., .ts) we need to compile them in plain JavaScript i.e., .js. We need to use Node and NPM compile them into js file so that we can deploy them in production. Most of the Angular packages or libraries at GitHub repository (github.com/angular/angular) are distributed as different NPM packages. Node Package Manager is heavily dependent on Node.js. As explained in my previous article Angular set up in local Environment, Using Angular CLI module we can automate so many things in Angular 2 or Angular. If you are writing unit tests we need to install test libraries and runner though NPM and executed using Node. If you want to minimize the size of your Javascript files? If so, install a minification library via NPM and executed using Node.  \rUse Node and NPM not as production server but as tooling and building Angular apps.\n\r\r\r\r\rNode js Required to develop angular apps\r\r\rYou do not need to use Node anywhere in production server to use front-end JavaScript frameworks like Angular or react etc. We can use any backend webserver technology written in any language (C# ,Java etc.)\nIf you are from Dotnet background, you might think that why I need to install Node as Visual studio comes with Typescript plugin, web server. Technically, it is correct.\nBut we have to do lot of manual work to configure Angular App and there no good Angular CLI plug in available for Visual studio.\nI would recommend using Visual studio or Visual Studio Code as code editor.\n","date":1518310865,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622848,"objectID":"4b1f5cba06f2f5ee88deebd935945808","permalink":"https://www.angularjswiki.com/angular/is-node-js-required-for-angular-2-or-angular/","publishdate":"2018-02-11T01:01:05Z","relpermalink":"/angular/is-node-js-required-for-angular-2-or-angular/","section":"angular","summary":"Node js Required to develop angular 2 or angular apps. This tutorial explains reasons why node js required to develop angular 2 or angular apps. with the help node js angular apps development will be easy.","tags":null,"title":"Is Node.Js Required For Angular 2 Or Angular?","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" Angular 2 is completely new framework than Angular Js 1.X and written in typescript. It was a total breaking change.\nRecently in March 2017, Google released Angular 4. However, it just an update to Angular 2. To remove this confusion Google started calling it as âAngularâ without version suffix.\nSo Itâs just âAngularâ.\nGo through History of AngularJs\nGoogle clearly mentioned that, we should start avoiding GitHub/NPM libraries prefixed with ng2- or angular2-.\nTweet from Igor Minor one of the key member of Angular Team.\n\r\r\rIts just angular\r\r\rNaming guidelines from Google: Use âAngularâ for versions 2 and later (without version suffix) (Eg: I am an Angular developer).\nUse âAngular JSâ to descript versions 1.x or earlier.\nUse version number only if necessary (Eg: This feature introduced in Angular 4).\nUse full semver while reporting bugs (Eg: This bug present in version 2.x.x).\nWhy Angular 4 not Angular 3? Version History of Angular. You might have a doubt why google went for version 4 instead of Version 3.\nThe core Angular libraries are in one single GitHub repository at github.com/angular/angular.\n@angular/Core : Version : v2.3.0\n@angular/Compiler : Version : v2.3.0\n@angular/Compiler-cli: Version : v2.3.0\n@angular/http : Version : v2.3.0\n@angular/router : Version : v3.3.0\nAll of them are having similar versions (except router) and distributed as different NPM packages.\nWhy Node Js required for Angular?\nDue to misalignment of router version, Angular team went for Angular 4 instead of Angular 3. So that all the core libraries are aligned and will be easier to maintain, further avoiding confusion.\nSo do not worry about version numbers here after.\nIf you are using Angular CLI for creating Angular Apps ng new my-angular-app will use Angular version 4.\nIf you want to use version 2 please install older version CLI and use ng new command to create Angular app in version 2\nnpm install -g @angular/cli@1.0.0-rc.4\n","date":1518224465,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622878,"objectID":"8f9b5e938cf0cee3ac3694318a8b91b7","permalink":"https://www.angularjswiki.com/angular/is-it-angular-2-or-angular-4-or-just-angular/","publishdate":"2018-02-10T01:01:05Z","relpermalink":"/angular/is-it-angular-2-or-angular-4-or-just-angular/","section":"angular","summary":"Explains the version change history of Angular 2 or angular \u0026amp; why we should call just Angular instead of adding suffix like angular 2 or Angular 4.","tags":null,"title":"Is It Angular 2 Or Angular 4 Or Just Angular?","type":"post"},{"authors":["Arunkumar Gudelli"],"categories":null,"content":" When I started learning AngualJs I have couple of questions in my mind like who is the creator AngularJs? When it started? Why its named Angular? etc etc.\nLong back I read one quote\n\rThe best things in life are not planned, they simply just happen;\n\r\rThat\u0026rsquo;s exactly what happened with Angularjs. There is an interesting story behind the birth of Angularjs.\nThe History of AngularJs It all started in 2008 and 2009, Misko hevery (a developer at Google) working on a part time project to simplify web application development. Not for web developers but web designers who have no or little knowledge about web development by extending vocabulary of HTML, so that if we have a static web server you can actually build a simple web application (without worrying about what is happening in the back ground).\n\r\r\rMisko Hevery\r\r\r\r\r\rAdam Abrons\r\r\rAdam abrons friend of Misko, who is working with him on this project named it as Angular as its HTML and HTML contains angular brackets.\nSo they register is domain called getangular.com (as angular.com is already taken).\nMisko Hevery and Adam Aborns are inventors of AngularJs.\nI have gone through way back machine took a snapshot of getangular.com. This is how its look like.\n\r\r\rGet Angular\r\r\rHe had hard time to explain what actually it is, so MiskoÂ told people that itâs a kind of Spread sheet in cloud so that we can bind data and save it without worrying about security persistent etc and UI will be in HTML.\nAt that point of time Brad Green manager of Misko at Google asked him to work on one of the Google internal tool called Google Feedback Tool.\nGoogle has a framework called Google web tool kit (GWT) written in Java to develop their internal tools and projects.\nThree developers including _Misko_Â wrote 17000 lines of code for 6 months, later itâs became very difficult for them to write code as itâs hard to test.\nTo add one label in HTML you have write code in java and compile it and transform it to HTML JavaScript to display in web browser.\nThen Misko challenged Brad that he can write whole thing in 2 weeks by using his side project Angular.\nHe lost the challenge but completed it in 3 weeks of time. And the lines of code reduced 1500 within 3 weeks with angular (one developer).\nImpressed Brad Green asked him to work further on angular. Then he along with Shyam Seshadri and Igor Minor shipped Google feedback tool with complete AngularJs.\n\r\r\rBrad Green\r\r\rThen they went for review with Urs hoelzle,Senior engineering manager at Google(part of Google infrastructure team at that time).\nThen he said âYou guys are all liars, Yes you had a great success on one small project small for Google scale,until you do something at large scale you really donât know what you are talking about â\nAccording to Brad Green this is a great quote about Angular.\nYes they donât know the power of AngularJs yet. They left with an option to Give up.\nThen what they did at that time is lead to the birth of powerful JavaScript framework angula js And every developer programmer should remember this.\nIn Brad Green words If we have a job, probably we do what best for our job to pay our bills, and at that time they could have just given up,but they have a practice called Constructive disobedience\n\rGive up or Practice Constructive Disobedience.\n\r\rThen they open sourced it and people outside of Google started using it.\nLater Google acquired DoubleClick Company. Double Click built on C#,Asp .Net platform.\nMarc Jacobs tech lead of DoubleClick Digital Marketing Manager team and his team started writing it from scratch as they donât have much dotnet developers at that time.\nHis team consist of few C# developers and JavaScript developers and they do not have much idea about Google web toolkit (GWT).\nThey started exploring other technology options and inspired by one of the tech talk of Miskov about AngularJs, They built small prototypes using GWT and AngularJs.\nThey took one of the landing page of Doubleclick and by using same webservices and CSS, One developer able to complete it in two days and it was 1\u0026frasl;10 size and about 10x faster.\nWhereas with Google Web Toolkit they worked for two and half weeks and could not complete it and gave up.\nFinally, they decided to go with Angular. Itâs again the Constructive Disobedience of Marc Jacobs.\nEveryone at Google using GWT and this person decided go for AngularJs. Initially they faced few problems but at the end its happy story.\nWith the success of DoubleClick other teams also started using it. Finally the decided to give it an identity instead of old GetAngular.\nThey run a contest for t-shirts and logo in 99designs\nT-shirt : https://99designs.com/t-shirt-design/contests/angularjs-needs-t-shirt-design-82636/entries\nLogo : https://99designs.com/logo-design/contests/create-logo-google-angularjs-framework-127104\n_Misko heveryÂ _decided to go for shield like logo because itâs similar to HTML5 logo, it shields from low levels of browsers and itâs kind of cool super hero thing.\n\r\r\rAngular js Logo\r\r\rBrad Green decided to release stable API 1.0 version of AngularJs (backed by Google) so that people can rely on it by August 2010.\nIt got delayed and they officially released AngularJs v1.0 in May 2011.\nIn the journey of AngularJs it lost Database and became powerful front end JavaScript framework (which is original idea of Misko to develop end to end project to help web developer)\nReferences : Keynote Ng-conf-2014Â and DoubleClick with AngularJs\n","date":1517274065,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539622924,"objectID":"4bd48fa1bb4a0e161cb8464cbc63728f","permalink":"https://www.angularjswiki.com/angular/history-of-angularjs/","publishdate":"2018-01-30T01:01:05Z","relpermalink":"/angular/history-of-angularjs/","section":"angular","summary":"This artile explains history of angularjs like who invented angularjs, when angularjs started.How it evolved in Google from GetAngular to Angularjs and now angular","tags":null,"title":"History of AngularJs","type":"post"},{"authors":null,"categories":null,"content":" All the information on this website is published in good faith and for general information purpose only. www.angularjswiki.com does not make any warranties about the completeness, reliability, and accuracy of this information. Any action you take upon the information you find on this website (www.angularjswiki.com), is strictly at your own risk. www.angularjswiki.com will not be liable for any losses and/or damages in connection with the use of our website.\nFrom our website, you can visit other websites by following hyperlinks to such external sites. While we strive to provide only quality links to useful and ethical websites, we have no control over the content and nature of these sites. These links to other websites do not imply a recommendation for all the content found on these sites. Site owners and content may change without notice and may occur before we have the opportunity to remove a link which may have gone \u0026#8216;bad\u0026#8217;.\nPlease be also aware that when you leave our website, other sites may have different privacy policies and terms which are beyond our control. Please be sure to check the Privacy Policies of these sites as well as their \u0026#8220;Terms of Service\u0026#8221; before engaging in any business or uploading any information.\nConsent By using our website, you hereby consent to our disclaimer and agree to its terms.\nIf you require any more information or have any questions about our site\u0026#8217;s disclaimer, please feel free to contact us by email at arunkumar.gudelli@gmail.com\n\u0026nbsp;\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c77f8acf81cae4a0c5bd453cf98fb1a4","permalink":"https://www.angularjswiki.com/disclaimer/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/disclaimer/","section":"","summary":"All the information on this website is published in good faith and for general information purpose only. www.angularjswiki.com does not make any warranties about the completeness, reliability, and accuracy of this information. Any action you take upon the information you find on this website (www.angularjswiki.com), is strictly at your own risk. www.angularjswiki.com will not be liable for any losses and/or damages in connection with the use of our website.","tags":null,"title":" Disclaimer for AngularjsWiki Blog","type":"page"},{"authors":null,"categories":null,"content":"You can contact me via arunkumar.gudelli@gmail.com\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"70180c54893436729e3367503c70a6ee","permalink":"https://www.angularjswiki.com/contact-us/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/contact-us/","section":"","summary":"You can contact me via arunkumar.gudelli@gmail.com","tags":null,"title":"Contact Us","type":"page"},{"authors":null,"categories":null,"content":" If you are interested in linking articles of this blog please read the copyright policy\nLiking to AngularJsWiki: You can use short quotes from AngularJsWiki blog in your website or blog as long as proper credit is given\nAlways provide a Full URl to the article\nDo not use techniques like rel=nofollow to hide credits from search engines\nDo not use an iframe tag when linking the content of this blog because that will hide URL in the browser address bar\nAsk Me before Copying I might Say Yes: If you would like to reprint any of the articles from this blog on your website, weblog or in your publication, please contact me atÂ arunkumar.gudelli@gmail.comÂ with your request.\nCopyright Violation and Misuse: If we discover a website or blog republishing my blog RSS feeds or website content illegally,\nWe will file a formal DMCA complaint with their advertising partners (like Google AdSense)\nand the abuse department of their web hosting company.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"11b746696cc7288b1546077a8724ba1b","permalink":"https://www.angularjswiki.com/copyright-policy-and-fair-use-guide/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/copyright-policy-and-fair-use-guide/","section":"","summary":"If you are interested in linking articles of this blog please read the copyright policy\nLiking to AngularJsWiki: You can use short quotes from AngularJsWiki blog in your website or blog as long as proper credit is given\nAlways provide a Full URl to the article\nDo not use techniques like rel=nofollow to hide credits from search engines\nDo not use an iframe tag when linking the content of this blog because that will hide URL in the browser address bar","tags":null,"title":"Copyright Policy And Fair Use Guide","type":"page"},{"authors":null,"categories":null,"content":"Thanks to Service Workers, you can still visit the pages you\u0026rsquo;ve visited already.\nTo visit something else, it\u0026rsquo;ll have to wait until you\u0026rsquo;re back online. Soon let\u0026rsquo;s hope!\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"0977fd0d9e4bc38a2a211097b94cf0fb","permalink":"https://www.angularjswiki.com/offline/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/offline/","section":"","summary":"Thanks to Service Workers, you can still visit the pages you\u0026rsquo;ve visited already.\nTo visit something else, it\u0026rsquo;ll have to wait until you\u0026rsquo;re back online. Soon let\u0026rsquo;s hope!","tags":null,"title":"Oops, you are offline.","type":"page"},{"authors":null,"categories":null,"content":" At www.angularjswiki.com, the privacy of our visitors is of extreme importance to us. This privacy policy document outlines the types of personal information is received and collected by www.angularjswiki.com and how it is used.\nLog Files: Like many other Web sites, www.angularjswiki.com makes use of log files. The information inside the log files includes internet protocol ( IP ) addresses, type of browser, Internet Service Provider ( ISP ), date/time stamp, referring/exit pages, and the number of clicks to analyze trends, administer the site, track userâs movement around the site, and gather demographic information. IP addresses and other such information are not linked to any information that is personally identifiable.\nCookies and Web Beacons: www.angularjswiki.com does use cookies to store information about visitors preferences, record user-specific information on which pages the user access or visit, customize Web page content based on visitors browser type or other information that the visitor sends via their browser.\nDoubleClick DART Cookie:\n.:: Google, as a third party vendor, uses cookies to serve ads onÂ www.angularjswiki.com.\n.:: Googleâs use of the DART cookie enables it to serve ads to users based on their visit toÂ www.angularjswiki.comÂ and other sites on the Internet.\n.:: Users may opt out of the use of the DART cookie by visiting the Google ad and content network privacy policy at the following URL âÂ http://www.google.com/privacy_ads.html\nSome of our advertising partners may use cookies and web beacons on our site. Our advertising partners include â¦.\nGoogle Adsense\nThese third-party ad servers or ad networks use technology to the advertisements and links that appear onÂ www.angularjswiki.comÂ send directly to your browsers. They automatically receive your IP address when this occurs. Other technologies ( such as cookies, JavaScript, or Web Beacons ) may also be used by the third-party ad networks to measure the effectiveness of their advertisements and / or to personalize the advertising content that you see.\nwww.angularjswiki.comÂ has no access to or control over these cookies that are used by third-party advertisers.\nYou should consult the respective privacy policies of these third-party ad servers for more detailed information on their practices as well as for instructions about how to opt-out of certain practices.Â www.angularjswiki.comâs privacy policy does not apply to, and we cannot control the activities of, such other advertisers or websites.\nIf you wish to disable cookies, you may do so through your individual browser options. More detailed information about cookie management with specific web browsers can be found at the browsersâ respective websites.\nIf you require any more information or have any questions about our privacy policy, please feel free to contact us by email at arunkumar.gudelli@gmail.com.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"7e38e8dcb6d4e31a36d8cb78795190da","permalink":"https://www.angularjswiki.com/privacy-policy/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/privacy-policy/","section":"","summary":"At www.angularjswiki.com, the privacy of our visitors is of extreme importance to us. This privacy policy document outlines the types of personal information is received and collected by www.angularjswiki.com and how it is used.\nLog Files: Like many other Web sites, www.angularjswiki.com makes use of log files. The information inside the log files includes internet protocol ( IP ) addresses, type of browser, Internet Service Provider ( ISP ), date/time stamp, referring/exit pages, and the number of clicks to analyze trends, administer the site, track userâs movement around the site, and gather demographic information.","tags":null,"title":"Privacy Policy For www.angularjswiki.com","type":"page"}]